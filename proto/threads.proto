syntax = "proto3";

package dialog;

import "wrappers.proto";
import "empty.proto";
import "annotations.proto";
import "scalapb.proto";
import "definitions.proto";
import "peers.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

message ThreadInfo {
    uint32 messages_count = 1;
    repeated string latest_active_user_ids = 2;
    uint64 last_activity_date = 3;
    // Если поле пустое, значит информации о фолловинге треда в данный момент нет, и её надо получить другими способами (загрузкой тредов GetThreadInfos, загрузкой истории и тп)
    // Пустым в данный момент будет приходить при получении вик-апдейта UpdateThreadInfos
    google.protobuf.BoolValue is_following = 5;
    // Общее количество активных участников треда за всё время его существования
    uint32 members_count = 6;
}

message RequestGetThreadInfos {
    int64 from_clock = 1;
    Peer peer = 2;
}

message PeerThread {
    UUIDValue parent_mid = 1;
    ThreadInfo info = 2;
}

message ResponseGetThreadInfos {
    repeated PeerThread threads = 1;
    int64 peer_clock = 2;
    bool next_available = 3;
}

message RequestFollowThread {
    Peer peer = 1;
}

message RequestUnfollowThread {
    Peer peer = 1;
}

message UpdateThreadInfos {
    Peer peer = 1;
    repeated PeerThread infos = 2;
    int64 peer_clock = 3;
    int64 prev_peer_clock = 4;
}

message UpdateThreadFollowing {
    Peer peer = 1;
    bool is_following = 2;
}

service Threads {
    rpc GetThreadInfos (RequestGetThreadInfos) returns (ResponseGetThreadInfos) {
        option (google.api.http) = {
            post: "/v1/grpc/Threads/GetThreadInfos"
            body: "*"
        };
    }
    rpc FollowThread (RequestFollowThread) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Threads/FollowThread"
            body: "*"
        };
    }
    rpc UnfollowThread (RequestUnfollowThread) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Threads/UnfollowThread"
            body: "*"
        };
    }
}
