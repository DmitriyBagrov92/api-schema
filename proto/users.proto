syntax = "proto3";

package dialog;

// Users are objects that secured by accessHash. You can't load user profile by it's id.
// You can't send message to user without finding it's object in Updates or by calling
// method for user search, contacts import or some other methods.
//
// Applications need to keep all Users information forever.
//
// Each User have optional localName - name of user that was set by current user and can be changed
// any time by calling EditUserLocalName method.

import "wrappers.proto";
import "empty.proto";
import "annotations.proto";
import "definitions.proto";
import "miscellaneous.proto";
import "peers.proto";
import "media_and_files.proto";
import "scalapb.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

enum Sex {
    SEX_UNKNOWN = 0;
    SEX_MALE = 1;
    SEX_FEMALE = 2;
}

enum ContactType {
    CONTACT_TYPE_UNKNOWN = 0;
    CONTACT_TYPE_PHONE = 1;
    CONTACT_TYPE_EMAIL = 2;
    CONTACT_TYPE_WEB = 3;
    CONTACT_TYPE_SOCIAL = 4;
}

// Contact information record
message ContactRecord {
    ContactType type = 1;
    /**
     * Value for specification type of contact,
     * for example 'mobile/standalone/office' for phones or 'vk/fb/telegram'
     * for extenrnal networks.
     */
    google.protobuf.StringValue type_spec = 6;
    google.protobuf.StringValue string_value = 2;
    google.protobuf.Int64Value long_value = 3;
    google.protobuf.StringValue title = 4;
    google.protobuf.StringValue subtitle = 5;
}

enum UserStatusType {
    USER_STATUS_TYPE_UNKNOWN = 0;
    USER_STATUS_TYPE_UNSET = 1;
    USER_STATUS_TYPE_AWAY = 2;
    USER_STATUS_TYPE_DONOTDISTURB = 3;
    USER_STATUS_TYPE_INVISIBLE = 4;
    USER_STATUS_TYPE_BUSY = 5;
}

// User's status
message UserStatus {
    UserStatusType type = 1;
    /// Text supplied by user
    google.protobuf.StringValue text = 2;
    int64 clock = 3;
}

// Main user object
message UserData {
    message Ext {
        string key = 1;
        oneof v {
            string s = 2;
            bool b = 3;
        }
    }
    string name = 1 [(dlg).log=log_sensitive];
    google.protobuf.StringValue nick = 2;
    Sex sex = 3;
    Avatar avatar = 4;
    google.protobuf.BoolValue is_bot = 5;
    enum Lifecycle {
        LIFECYCLE_MISSED = 0;
        LIFECYCLE_ACTIVE = 1;
        LIFECYCLE_DELETED = 2;
        LIFECYCLE_BLOCKED = 3;
        LIFECYCLE_BLOCKED_AND_DELETED = 4;
    }
    Lifecycle status = 6;
    UserStatus user_status = 7;
    string time_zone = 8;
    repeated Ext exts = 9;
    repeated string locales = 10;
    google.protobuf.StringValue about = 11;
    repeated ContactRecord contact_info = 12;
    repeated BotCommand bot_commands = 13;
    google.protobuf.StringValue custom_profile = 14;
    enum Hint {
        HINT_USER_REGULAR = 0;
        HINT_USER_GUEST = 1;
    }
    /// This parameter intended just to show in UI (client shouldn't base any logic on that)
    Hint hint = 15;
    bool was_authorized = 16;
    int64 clock = 17;
}
message User {
    string id = 1; /// User's id
    int64 access_hash = 2 [(dlg).log=log_confidential];
    UserData data = 3; // required
}

message UserPartialInfo {
    string id = 1;
    int64 access_hash = 2 [(dlg).log=log_confidential];
    int64 clock = 3;
    string name = 4;
    google.protobuf.StringValue nick = 5;
    Avatar avatar = 6;
}

message UserProfile {
    User user = 1;
    repeated ContactRecord contact_info = 2;
    google.protobuf.StringValue about = 3 [(dlg).log=log_sensitive];
    repeated string preferred_languages = 4;
    /// Time Zone of user in TZ format
    google.protobuf.StringValue time_zone = 5;
    repeated BotCommand bot_commands = 6;
    /// custom user profile info in JSON format
    string custom_profile = 7;
    google.protobuf.StringValue integration_token = 8;
}

// Available bot commands
message BotCommand {
    /// Slash command name (wihtout slash)
    string slash_command = 1;
    /// Slash command description
    string description = 2;
    /// Optional Localization Key for i18n
    google.protobuf.StringValue loc_key = 3;
}

// Renaming of user's visible name
message RequestEditUserLocalName {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    string user_id = 1;
    int64 access_hash = 2 [(dlg).log=log_confidential];
    string name = 3 [(dlg).log=log_sensitive];
}

message RequestLoadUserData {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    message Claim {
        message MessengerConnection {
            repeated string user_ids = 1;
        }

        oneof kind {
            MessengerConnection messenger_connection = 1;
        }
    }
    repeated Claim claims = 1;
}
message ResponseLoadUserData {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated User users = 1;
}

message UpdateUser {
    string id = 1;
    UserData data = 2;
}

// Update about avatar changed
message UpdateUserAvatarChanged {
    string user_id = 1;
    Avatar avatar = 2;
}

// Update about name changed
message UpdateUserNameChanged {
    string user_id = 1;
    string name = 2 [(dlg).log=log_sensitive];
}

// Update about local name changed
message UpdateUserLocalNameChanged {
    string user_id = 1;
    google.protobuf.StringValue local_name = 2 [(dlg).log=log_sensitive];
}

// Update about contact information change
message UpdateUserContactsChanged {
    string user_id = 1;
    repeated ContactRecord contact_records = 2;
}

// Update about nick changed
message UpdateUserNickChanged {
    string user_id = 1;
    google.protobuf.StringValue nickname = 2;
}

// Update about user's about changed
message UpdateUserAboutChanged {
    string user_id = 1;
    google.protobuf.StringValue about = 2 [(dlg).log=log_sensitive];
}

// Update about user's preferred languages
message UpdateUserPreferredLanguagesChanged {
    string user_id = 1;
    repeated string preferred_languages = 2;
}

// User TimeZone changed
message UpdateUserTimeZoneChanged {
    string user_id = 1;
    google.protobuf.StringValue time_zone = 2;
}

// Update about bot commands changed
message UpdateUserBotCommandsChanged {
    string user_id = 1;
    repeated BotCommand commands = 2;
}

// Update about user sex changed
message UpdateUserSexChanged {
    string user_id = 1;
    Sex sex = 2;
}

// Update about user custom profile changed
message UpdateUserCustomProfileChanged {
    string user_id = 1;
    /// custom user profile info in JSON format
    string custom_profile = 2;
}

// Update about user status change
message UpdateUserStatusChanged {
    string user_id = 1;
    UserStatus status = 2;
}

message UpdateUserExtChanged {
    string user_id = 1;
    RecursiveMapValue ext = 2;
}

message UpdateUserFullExtChanged {
    string user_id = 1;
    RecursiveMapValue ext = 2;
}

service Users {
    rpc EditUserLocalName (RequestEditUserLocalName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Users/EditUserLocalName"
            body: "*"
        };
    }
    rpc LoadUserData (RequestLoadUserData) returns (ResponseLoadUserData) {
        option (google.api.http) = {
            post: "/v1/grpc/Users/LoadUserData"
            body: "*"
        };
    }
}
