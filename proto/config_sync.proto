syntax = "proto3";

package dialog;

// Parameter Syncronization across devices. Can be used for simple sync
// across devices without rewriting server side code.

import "wrappers.proto";
import "empty.proto";
import "annotations.proto";
import "definitions.proto";
import "scalapb.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

// Syncing Parameter
message Parameter {
    string key = 1; /// Key of parameter
    string value = 2 [(dlg).log=log_confidential]; /// Value of parameter
    int64 clock = 3; /// last modification date
}

// Getting Parameters
message RequestGetParameters {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int64 from_clock = 1;
}

message ResponseGetParameters {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated Parameter parameters = 1;
}

// Change parameter value
message RequestEditParameter {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    string key = 1;
    google.protobuf.StringValue value = 2 [(dlg).log=log_confidential];
    int64 clock = 3; /// current known clock
}

message FeatureFlag {
    string key = 1;
    string value = 2;
    int64 clock = 3;
}

message RequestFeatureFlags {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int64 from_clock = 1;
}

message ResponseFeatureFlags {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated FeatureFlag feature_config = 1;
}

message UpdateFeatureFlagChanged {
    FeatureFlag feature = 1;
}

// Update about parameter change
message UpdateParameterChanged {
    Parameter parameter = 1; /// changed parameter
}

message Settings {
    message NotificationsSettings {
        message MuteSettings {
            bool mute_privates = 1;
            bool mute_groups = 2;
            bool mute_channels = 3;
        }

        bool pierce_mute_on_mention = 1;
        bool show_text = 2;
        bool show_names = 3;
        MuteSettings mutes = 4;
    }

    NotificationsSettings notifications = 1;
}

message UpdateSettingsChanged {
    Settings settings = 1;
}

message RequestGetSettings {}

message ResponseGetSettings {
    Settings settings = 1;
}

message RequestChangeSettings {
    Settings settings = 1;
}

service ConfigSync {
    rpc GetSettings (RequestGetSettings) returns (ResponseGetSettings) {
        option (google.api.http) = {
            post: "/v1/grpc/ConfigSync/GetSettings"
            body: "*"
        };
    }
    rpc ChangeSettings (RequestChangeSettings) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/ConfigSync/ChangeSettings"
            body: "*"
        };
    }
    rpc GetParameters (RequestGetParameters) returns (ResponseGetParameters) {
        option deprecated = true;
        option (google.api.http) = {
            post: "/v1/grpc/ConfigSync/GetParameters"
            body: "*"
        };
    }
    rpc EditParameter (RequestEditParameter) returns (google.protobuf.Empty) {
        option deprecated = true;
        option (google.api.http) = {
            post: "/v1/grpc/ConfigSync/EditParameter"
            body: "*"
        };
    }
    rpc FeatureFlags (RequestFeatureFlags) returns (ResponseFeatureFlags) {
        option (google.api.http) = {
            post: "/v1/grpc/ConfigSync/FeatureFlags"
            body: "*"
        };
    }
}
