syntax = "proto3";

package dialog;


import "timestamp.proto";
import "empty.proto";
import "annotations.proto";
import "definitions.proto";
import "peers.proto";
import "scalapb.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

enum TypingType {
    TYPING_TYPE_UNKNOWN = 0;
    TYPING_TYPE_TEXT = 1;
    TYPING_TYPE_VOICE = 2;
}

// Sending typing notification
message RequestStartTyping {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    OutPeer peer = 1;
    TypingType typing_type = 2;
}

// Stop typing
message RequestStopTyping {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    OutPeer peer = 1;
    TypingType typing_type = 2;
}

enum DeviceType {
    DEVICE_TYPE_UNKNOWN = 0;
    DEVICE_TYPE_GENERIC = 1;
    DEVICE_TYPE_PC = 2;
    DEVICE_TYPE_MOBILE = 3;
    DEVICE_TYPE_TABLET = 4;
    DEVICE_TYPE_WATCH = 5;
    DEVICE_TYPE_MIRROR = 6;
    DEVICE_TYPE_CAR = 7;
    DEVICE_TYPE_TABLE = 8;
}

// Sending online state
message RequestSetOnline {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    bool is_online = 1;
    int64 timeout = 2; /// offline after timeout
    DeviceType device_type = 3;
}

// Update about user's typing
message UpdateTyping {
    Peer peer = 1;
    string user_id = 2;
    TypingType typing_type = 3;
}

// Update about user's typing stop
message UpdateTypingStop {
    Peer peer = 1;
    string user_id = 2;
    TypingType typing_type = 3;
}

// Update about user's last seen state
message UpdateUserLastSeen {
    string user_id = 1;
    int64 last_seen_at = 2;
    DeviceType device_type = 3;
    int64 current_server_time = 4;
}

// Update about group online change
message UpdateGroupOnline {
    string group_id = 1;
    /// amount of online users.
    int32 count = 2;
    /// The list of online users will only be sent if the flag was set during the subscription.
    repeated string users_id = 3;
}

message UpdateGroupTyping {
    message UserTyping {
        string user_id = 1;
        TypingType typing_type = 2;
    }

    string group_id = 1;
    repeated UserTyping users_typing = 2;
}

// Request for last user online timestamp
message RequestGetUserLastPresence {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    UserOutPeer user_out_peer = 1;
}

// Response for RequestGetUserLastPresence
message ResponseGetUserLastPresence {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    google.protobuf.Timestamp last_online_at = 1;
}

service Presence {
    rpc StartTyping (RequestStartTyping) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/StartTyping"
            body: "*"
        };
    }
    rpc StopTyping (RequestStopTyping) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/StopTyping"
            body: "*"
        };
    }
    rpc SetOnline (RequestSetOnline) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/SetOnline"
            body: "*"
        };
    }
    rpc GetUserLastPresence (RequestGetUserLastPresence) returns (ResponseGetUserLastPresence) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/GetUserLastPresence"
            body: "*"
        };
    }
}
