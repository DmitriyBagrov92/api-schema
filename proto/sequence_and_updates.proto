syntax = "proto3";

package dialog;

// Each device has it's own update sequence. At the begining application request initial sequence state by
// calling GetState. On each application restart or NewSessionCreated application calls GetDifference for receiving
// updates in update sequence.
// GetState and GetDifference automatically subscribes session to receiving updates in session.
// Each update has seq and state. Seq is sequental index of updated and used for detecting of holes in update sequence
// (because of server failure or session die) on client side.
// All updates needed to be processed in partucular order according to seq values.
// In some updates there can be references to users that are not available at client yet. In this case application need
// to ignore such update and init getting difference.

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "definitions.proto";
import "miscellaneous.proto";
import "authentication.proto";
import "groups.proto";
import "stickers.proto";
import "presence.proto";
import "config_sync.proto";
import "counters.proto";
import "contacts.proto";
import "privacy.proto";
import "peers.proto";
import "messaging.proto";
import "users.proto";
import "spaces.proto";
import "reactions.proto";
import "permissions.proto";
import "events.proto";
import "scalapb/scalapb.proto";
import "miniappsregistry.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

// Sequence update
message SeqUpdate {
    int32 seq = 1 [(dlg).log="visible"];

    oneof update {
      UpdateForceReloadState update_force_reload_state = 2;
      UpdateUserAvatarChanged update_user_avatar_changed = 3;
      UpdateUserNameChanged update_user_name_changed = 4;
      UpdateUserLocalNameChanged update_user_local_name_changed = 5;
      UpdateUserContactsChanged update_user_contacts_changed = 6;
      UpdateUserNickChanged update_user_nick_changed = 7;
      UpdateUserAboutChanged update_user_about_changed = 8;
      UpdateUserPreferredLanguagesChanged update_user_preferred_languages_changed = 9;
      UpdateUserTimeZoneChanged update_user_time_zone_changed = 10;
      UpdateUserBotCommandsChanged update_user_bot_commands_changed = 11;
      UpdateUserExtChanged update_user_ext_changed = 12;
      UpdateUserFullExtChanged update_user_full_ext_changed = 13;
      UpdateUserSexChanged update_user_sex_changed = 14;
      UpdateUserCustomProfileChanged update_user_custom_profile_changed = 15;
      UpdateUserStatusChanged update_user_status_changed = 16;
      UpdateContactRegistered update_contact_registered = 17;
      UpdateContactsAdded update_contacts_added = 18;
      UpdateContactsAddTaskSuspended update_contacts_add_task_suspended = 19;
      UpdateContactsRemoved update_contacts_removed = 20;
      UpdateUserBlocked update_user_blocked = 21;
      UpdateUserUnblocked update_user_unblocked = 22;
      UpdateInteractiveMediaEvent update_interactive_media_event = 23;
      UpdateMessage update_message = 24;
      UpdateMessageContentChanged update_message_content_changed = 25;
      UpdateMessageSent update_message_sent = 26;
      UpdateMessageReceived update_message_received = 27;
      UpdateMessageRead update_message_read = 28;
      UpdateMessageReadByMe update_message_read_by_me = 29;
      UpdateMessageDelete update_message_delete = 30;
      UpdateChatClear update_chat_clear = 31;
      UpdateChatDelete update_chat_delete = 32;
      UpdateChatArchive update_chat_archive = 33;
      UpdateChatGroupsChanged update_chat_groups_changed = 34;
      UpdateReactionsUpdate update_reactions_update = 35;
      UpdateDialogFavouriteChanged update_dialog_favourite_changed = 36;
      UpdatePinnedMessagesChanged update_pinned_messages_changed = 37;
      UpdateGroupTitleChanged update_group_title_changed = 38;
      UpdateGroupAvatarChanged update_group_avatar_changed = 39;
      UpdateGroupAboutChanged update_group_about_changed = 40;
      UpdateGroupOwnerChanged update_group_owner_changed = 41;
      UpdateGroupMembersUpdated update_group_members_updated = 42;
      UpdateGroupMemberDiff update_group_member_diff = 43;
      UpdateGroupMembersCountChanged update_group_members_count_changed = 44;
      UpdateGroupMemberPermissionsChanged update_group_member_permissions_changed = 45;
      UpdateGroupShortnameChanged update_group_shortname_changed = 46;
      UpdateStickerCollectionsChanged update_sticker_collections_changed = 47;
      UpdateStickerPackRemoved update_sticker_pack_removed = 48;
      UpdateStickerPackAdded update_sticker_pack_added = 49;
      UpdateParameterChanged update_parameter_changed = 50;
      UpdateRawUpdate update_raw_update = 51;
      UpdateCountersChanged update_counters_changed = 52;
      UpdateConfig update_config = 53;
      UpdateSpaceModified update_space_modified = 54;
      UpdateSpaceMemberModified update_space_member_modified = 55;
      UpdateMessageRejectedByHook update_message_rejected_by_hook = 56;
      UpdateMessageEditRejectedByHook update_message_edit_rejected_by_hook = 57;
      UpdateUser update_user = 58;
      UpdateFeatureFlagChanged update_feature_flag_changed = 59;
      UpdateThreadCreated update_thread_created = 60;
      UpdateThreadLifted update_thread_lifted = 61;
      UpdateGroup update_group = 62;
      UpdateGroupMemberInvited update_group_member_invited = 63;
      reactions.MessageReactionsUpdate message_reactions_update = 64;
      UpdatePermissionsChange update_permissions_change = 65;
      UpdateGroupTyping update_group_typing = 66;
      UpdateDialogReadLaterChanged update_dialog_read_later_changed = 67;
    }
}

// Get main sequence state
message RequestGetState {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
}

// Getting difference of sequence
message RequestGetDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int32 seq = 1 [(dlg).log="visible"];
    google.protobuf.Int64Value config_hash = 2 [(dlg).log="visible"];
}

/// Updates happens after requested seq number + related peers and entities
message ResponseGetDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";

    int32 seq = 1; /// seq of the last loaded update
    repeated SeqUpdate updates = 2;
    repeated HistoryMessage messages = 3;
    bool need_more = 4; /// false if all updates returned
    repeated UserOutPeer users_refs = 5;
    repeated GroupOutPeer groups_refs = 6;
    Config config = 7; /// user's config
    google.protobuf.Int64Value config_hash = 8;
}

// Getting difference of dialogs
message RequestGetDialogsDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    /// max of the last action dates among all user's dialogs
    int64 clock = 1 [(dlg).log="visible"];
}

/// Dialogs + peers and entities
message ResponseGetDialogsDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated Dialog dialogs = 1;
    repeated GroupOutPeer group_peers = 2;
    repeated UserOutPeer user_peers = 3;
}

// Represents subset of group members
message GroupMembersSubset {
    GroupOutPeer group_peer = 1 [(dlg).log="visible"];
    repeated string member_ids = 2 [(dlg).log="visible"];
}

// Loading referenced entities
message RequestGetReferencedEntitites {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    /// users needed
    repeated UserOutPeer users = 1 [(dlg).log="compact"];
    /// messages needed
    repeated UUIDValue mids = 2 [(dlg).log="visible"];
    /**
     * Group + subset of members to return.
     * For loading members of big groups by chunks.
     */
    repeated GroupMembersSubset group_members = 3 [(dlg).log="visible"];
    /// groups needed
    repeated GroupOutPeer groups = 4 [(dlg).log="visible"];
}

message ResponseGetReferencedEntitites {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated User users = 1;
    repeated Group groups = 2;
    repeated HistoryMessage messages = 3;
}

message RequestGetPartialPeerInfo {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    repeated UserOutPeer users = 1 [(dlg).log="visible"];
    repeated GroupOutPeer groups = 2 [(dlg).log="visible"];
    repeated GroupMembersSubset group_members = 3 [(dlg).log="visible"];
}

message ResponseGetPartialPeerInfo {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated UserPartialInfo users = 1 [(dlg).log="visible"];
    repeated GroupPartialInfo groups = 2 [(dlg).log="visible"];
}

// Custom Raw Update
message UpdateRawUpdate {
    google.protobuf.StringValue type = 1 [(dlg).log="visible"];
    bytes bytes = 2 [(dlg).log="visible"];
}

message PeersList {
    repeated Peer peers = 1;
}

message WeakUpdateCommand {
    message ChangeMyOnline {
        bool online = 1;
        int64 timeout = 2; /// offline after timeout
        DeviceType device_type = 3;
    }

    message SubscribeToOnlines {
        PeersList peers = 1;
        bool send_users_id = 2;
    }

    message ChangeMyTyping {
        Peer peer       = 1;
        TypingType type = 2;
        bool start      = 3;
    }

    oneof command {
        ChangeMyOnline change_my_online                    = 1;
        SubscribeToOnlines subscribe_to_onlines            = 2;
        PeersList unsubscribe_from_onlines                 = 3;
        google.protobuf.Empty unsubscribe_from_all_onlines = 4;
        ChangeMyTyping change_my_typing                    = 5;
        PeersList subscribe_to_typings                     = 6;
        PeersList unsubscribe_from_typings                 = 7;
        google.protobuf.Empty unsubscribe_from_all_typings = 8;
    }
}

message WeakUpdate {
    message UpdateForceReloadState {
        message ForceReloadField {
            oneof field {
                google.protobuf.Empty reload_dialogs  = 1;
                google.protobuf.Empty reload_contacts = 2;
                PeersList reload_history              = 3;
            }
        }
        repeated ForceReloadField fields = 1;
    }

    oneof updatebox {
        UpdateTyping typing                                      = 1;
        UpdateTypingStop typing_stop                             = 2;
        UpdateUserLastSeen user_last_seen                        = 3;
        UpdateGroupOnline group_online                           = 4;
        UpdateForceReloadState force_reload                      = 5;
        UpdatePermissionsChange permissions_change               = 6;
        UpdateUserStatusChanged user_status_change               = 7;
        reactions.MessageReactionsUpdate message_reaction_update = 8;
        UpdateMessage message                                    = 9;
        UpdateMessageContentChanged message_content_change       = 10;
        UpdateMessageRead message_read                           = 11;
        UpdateMessageReceived message_received                   = 12;
        UpdateMessageReadByMe message_read_by_me                 = 13;
        UpdateGroupTyping group_typing                           = 15;
        UpdateMiniApp mini_app                                   = 16;
        events.UpdateEvent event                                 = 17;
    }
}

service SequenceAndUpdates {
    /// Get last seq number
    rpc GetState (RequestGetState) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetState"
            body: "*"
        };
    }
    /// Get all update that happens after given seq number
    rpc GetDifference (RequestGetDifference) returns (ResponseGetDifference) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetDifference"
            body: "*"
        };
    }
    /// Load all dialogs that changed after given date
    rpc GetDialogsDifference (RequestGetDialogsDifference) returns (ResponseGetDialogsDifference) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetDialogsDifference"
            body: "*"
        };
    }
    /// Load some required entities
    rpc GetReferencedEntitites (RequestGetReferencedEntitites) returns (ResponseGetReferencedEntitites) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetReferencedEntitites"
            body: "*"
        };
    }

    rpc GetPartialPeerInfo (RequestGetPartialPeerInfo) returns (ResponseGetPartialPeerInfo) {}

    /// Get stream of the user's updates
    rpc SeqUpdates (google.protobuf.Empty) returns (stream SeqUpdate) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/SeqUpdates"
            body: "*"
        };
    }
    rpc WeakUpdates (stream WeakUpdateCommand) returns (stream WeakUpdate) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/WeakUpdates"
            body: "*"
        };
    }
}
