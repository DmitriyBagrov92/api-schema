syntax = "proto3";

package dialog;

// Each device has it's own update sequence. At the begining application request initial sequence state by
// calling GetState. On each application restart or NewSessionCreated application calls GetDifference for receiving
// updates in update sequence.
// GetState and GetDifference automatically subscribes session to receiving updates in session.
// Each update has seq and state. Seq is sequental index of updated and used for detecting of holes in update sequence
// (because of server failure or session die) on client side.
// All updates needed to be processed in partucular order according to seq values.
// In some updates there can be references to users that are not available at client yet. In this case application need
// to ignore such update and init getting difference.

import "wrappers.proto";
import "empty.proto";
import "annotations.proto";
import "definitions.proto";
import "miscellaneous.proto";
import "authentication.proto";
import "groups.proto";
import "stickers.proto";
import "presence.proto";
import "config_sync.proto";
import "counters.proto";
import "contacts.proto";
import "privacy.proto";
import "peers.proto";
import "messaging.proto";
import "users.proto";
import "spaces.proto";
import "reactions.proto";
import "permissions.proto";
import "events.proto";
import "scalapb.proto";
import "miniappsregistry.proto";
import "suggests.proto";
import "drafts.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

message SeqUpdateBody {
    reserved 33, 62, 71, 72;
    oneof update {
        UpdateUserAvatarChanged update_user_avatar_changed = 1;
        UpdateUserNameChanged update_user_name_changed = 2;
        UpdateUserLocalNameChanged update_user_local_name_changed = 3;
        UpdateUserContactsChanged update_user_contacts_changed = 4;
        UpdateUserNickChanged update_user_nick_changed = 5;
        UpdateUserAboutChanged update_user_about_changed = 6;
        UpdateUserPreferredLanguagesChanged update_user_preferred_languages_changed = 7;
        UpdateUserTimeZoneChanged update_user_time_zone_changed = 8;
        UpdateUserBotCommandsChanged update_user_bot_commands_changed = 9;
        UpdateUserExtChanged update_user_ext_changed = 10;
        UpdateUserFullExtChanged update_user_full_ext_changed = 11;
        UpdateUserSexChanged update_user_sex_changed = 12;
        UpdateUserCustomProfileChanged update_user_custom_profile_changed = 13;
        UpdateUserStatusChanged update_user_status_changed = 14;
        UpdateContactRegistered update_contact_registered = 15;
        UpdateContactsAdded update_contacts_added = 16;
        UpdateContactsAddTaskSuspended update_contacts_add_task_suspended = 17;
        UpdateContactsRemoved update_contacts_removed = 18;
        UpdateUserBlocked update_user_blocked = 19;
        UpdateUserUnblocked update_user_unblocked = 20;
        UpdateInteractiveMediaEvent update_interactive_media_event = 21;
        UpdateMessage update_message = 22;
        UpdateMessageContentChanged update_message_content_changed = 23;
        UpdateMessageSent update_message_sent = 24;
        UpdateMessageReceived update_message_received = 25;
        UpdateMessageRead update_message_read = 26;
        UpdateMessageReadByMe update_message_read_by_me = 27;
        UpdateMessageDelete update_message_delete = 28;
        UpdateChatClear update_chat_clear = 29;
        UpdateChatDelete update_chat_delete = 30;
        UpdateChatArchive update_chat_archive = 31;
        UpdateChatGroupsChanged update_chat_groups_changed = 32;
        UpdateDialogFavouriteChanged update_dialog_favourite_changed = 34;
        UpdatePinnedMessagesChanged update_pinned_messages_changed = 35;
        UpdateGroupTitleChanged update_group_title_changed = 36;
        UpdateGroupAvatarChanged update_group_avatar_changed = 37;
        UpdateGroupAboutChanged update_group_about_changed = 38;
        UpdateGroupOwnerChanged update_group_owner_changed = 39;
        UpdateGroupMembersUpdated update_group_members_updated = 40;
        UpdateGroupMemberDiff update_group_member_diff = 41;
        UpdateGroupMembersCountChanged update_group_members_count_changed = 42;
        UpdateGroupMemberPermissionsChanged update_group_member_permissions_changed = 43;
        UpdateGroupShortnameChanged update_group_shortname_changed = 44;
        UpdateStickerCollectionsChanged update_sticker_collections_changed = 45;
        UpdateStickerPackRemoved update_sticker_pack_removed = 46;
        UpdateStickerPackAdded update_sticker_pack_added = 47;
        UpdateParameterChanged update_parameter_changed = 48;
        UpdateRawUpdate update_raw_update = 49;
        UpdateCountersChanged update_counters_changed = 50;
        UpdateConfig update_config = 51;
        UpdateSpaceModified update_space_modified = 52;
        UpdateSpaceMemberModified update_space_member_modified = 53;
        UpdateSendMessageError update_send_message_error = 54;
        UpdateEditMessageError update_edit_message_error = 55;
        UpdateUser update_user = 56;
        UpdateFeatureFlagChanged update_feature_flag_changed = 57;
        UpdateThreadCreated update_thread_created = 58;
        UpdateThreadLifted update_thread_lifted = 59;
        UpdateGroup update_group = 60;
        UpdateGroupMemberInvited update_group_member_invited = 61;
        UpdatePermissionsChange update_permissions_change = 63;
        UpdateGroupTyping update_group_typing = 64;
        UpdateDialogReadLaterChanged update_dialog_read_later_changed = 65;
        UpdateDialogMuteChanged update_dialog_mute_changed = 66;
        UpdateSettingsChanged update_settings_changed = 67;
        UpdateDeleteMessageError update_delete_message_error = 68;
        UpdateMessageReadError update_message_read_error = 69;
        UpdateMessageReceivedError update_message_received_error = 70;
        UpdateClearChatError update_clear_chat_error = 73;
        UpdateDeleteChatError update_delete_chat_error = 74;
        UpdateFavouriteDialogError update_favourite_dialog_error = 75;
        UpdateUnfavouriteDialogError update_unfavourite_dialog_error = 76;
        UpdateReadDialogLaterError update_read_dialog_later_error = 77;
    }
}

// Sequence update
message SeqUpdate {
    uint64 seq = 1;
    SeqUpdateBody body = 2;
}

// Getting difference of sequence
message RequestGetDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    uint64 seq = 1;
    google.protobuf.Int64Value config_hash = 2 [deprecated=true];
}

/// Updates happens after requested seq number + related peers and entities
message ResponseGetDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";

    uint64 seq = 1; /// seq of the last loaded update
    repeated SeqUpdate updates = 2;
    repeated HistoryMessage messages = 3 [deprecated = true];
    bool need_more = 4; /// false if all updates returned
    repeated UserOutPeer users_refs = 5 [deprecated = true];
    repeated GroupOutPeer groups_refs = 6 [deprecated = true];
    Config config = 7 [deprecated = true]; /// user's config
    google.protobuf.Int64Value config_hash = 8 [deprecated = true];
}

// Getting difference of dialogs
message RequestGetDialogsDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    /// max of the last action dates among all user's dialogs
    int64 clock = 1;
}

/// Dialogs + peers and entities
message ResponseGetDialogsDifference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated Dialog dialogs = 1;
    repeated GroupOutPeer group_peers = 2;
    repeated UserOutPeer user_peers = 3;
}

// Represents subset of group members
message GroupMembersSubset {
    GroupOutPeer group_peer = 1;
    repeated string member_ids = 2;
}

// Loading referenced entities
message RequestGetReferencedEntities {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    /// users needed
    repeated UserOutPeer users = 1;
    /// messages needed
    repeated UUIDValue mids = 2;
    /**
     * Group + subset of members to return.
     * For loading members of big groups by chunks.
     */
    repeated GroupMembersSubset group_members = 3;
    /// groups needed
    repeated GroupOutPeer groups = 4;
}

message ResponseGetReferencedEntities {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated User users = 1;
    repeated Group groups = 2;
    repeated HistoryMessage messages = 3;
}

message RequestGetPartialPeerInfo {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    repeated UserOutPeer users = 1;
    repeated GroupOutPeer groups = 2;
    repeated GroupMembersSubset group_members = 3;
}

message ResponseGetPartialPeerInfo {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated UserPartialInfo users = 1;
    repeated GroupPartialInfo groups = 2;
}

// Custom Raw Update
message UpdateRawUpdate {
    google.protobuf.StringValue type = 1;
    bytes bytes = 2;
}

message PeersList {
    repeated Peer peers = 1;
}

message WeakUpdateCommand {
    message ChangeMyOnline {
        bool online = 1;
        int64 timeout = 2; /// offline after timeout
        DeviceType device_type = 3;
    }

    message SubscribeToOnlines {
        PeersList peers = 1;
        bool send_users_id = 2;
    }

    message ChangeMyTyping {
        Peer peer       = 1;
        TypingType type = 2;
        bool start      = 3;
    }

    oneof command {
        ChangeMyOnline change_my_online                    = 1;
        SubscribeToOnlines subscribe_to_onlines            = 2;
        PeersList unsubscribe_from_onlines                 = 3;
        google.protobuf.Empty unsubscribe_from_all_onlines = 4;
        ChangeMyTyping change_my_typing                    = 5;
        PeersList subscribe_to_typings                     = 6;
        PeersList unsubscribe_from_typings                 = 7;
        google.protobuf.Empty unsubscribe_from_all_typings = 8;
    }
}

message WeakUpdate {
    message UpdateForceReloadState {
        message ForceReloadField {
            oneof field {
                google.protobuf.Empty reload_dialogs  = 1;
                google.protobuf.Empty reload_contacts = 2;
                PeersList reload_history              = 3;
            }
        }
        repeated ForceReloadField fields = 1;
    }

    oneof updatebox {
        UpdateTyping typing                                                   = 1;
        UpdateTypingStop typing_stop                                          = 2;
        UpdateUserLastSeen user_last_seen                                     = 3;
        UpdateGroupOnline group_online                                        = 4;
        UpdateForceReloadState force_reload                                   = 5;
        UpdatePermissionsChange permissions_change                            = 6;
        UpdateUserStatusChanged user_status_change                            = 7;
        UpdateMessageReactions message_reaction_update                        = 8;
        UpdateMessage message                                                 = 9;
        UpdateMessageContentChanged message_content_change                    = 10;
        UpdateMessageRead message_read                                        = 11;
        UpdateMessageReceived message_received                                = 12;
        UpdateMessageReadByMe message_read_by_me                              = 13;
        UpdateGroupTyping group_typing                                        = 15;
        UpdateMiniApp mini_app                                                = 16;
        UpdateEvent event                                                     = 17;
        UpdateContactRegistered update_contact_registered                     = 18;
        UpdateContactsAdded update_contacts_added                             = 19;
        UpdateContactsAddTaskSuspended update_contacts_add_task_suspended     = 20;
        UpdateContactsRemoved update_contacts_removed                         = 21;
        UpdateSuggests update_suggests                                        = 22;
        UpdateFeatureFlagChanged update_feature_flag_changed                  = 23;
        UpdateDraftsChanged update_drafts_changed                             = 24;
        UpdateUser update_user                                                = 25;
    }
}

message RequestGetState {}
message ResponseGetState {
    uint64 seq = 1;
    int64 date = 2 [deprecated=true];
}

service SequenceAndUpdates {
    /// Get last sequence number
    rpc GetState(RequestGetState) returns (ResponseGetState) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetState"
            body: "*"
        };
    }
    /// Get all update that happens after given seq number
    rpc GetDifference (RequestGetDifference) returns (ResponseGetDifference) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetDifference"
            body: "*"
        };
    }
    /// Load all dialogs that changed after given date
    rpc GetDialogsDifference (RequestGetDialogsDifference) returns (ResponseGetDialogsDifference) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetDialogsDifference"
            body: "*"
        };
    }
    /// Load some required entities
    rpc GetReferencedEntities (RequestGetReferencedEntities) returns (ResponseGetReferencedEntities) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/GetReferencedEntitites"
            body: "*"
        };
    }

    rpc GetPartialPeerInfo (RequestGetPartialPeerInfo) returns (ResponseGetPartialPeerInfo) {}

    /// Get stream of the user's updates
    rpc SeqUpdates (google.protobuf.Empty) returns (stream SeqUpdate) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/SeqUpdates"
            body: "*"
        };
    }
    rpc WeakUpdates (stream WeakUpdateCommand) returns (stream WeakUpdate) {
        option (google.api.http) = {
            post: "/v1/grpc/SequenceAndUpdates/WeakUpdates"
            body: "*"
        };
    }
}
