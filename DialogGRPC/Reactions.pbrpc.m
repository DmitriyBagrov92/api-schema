// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: reactions.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Reactions.pbrpc.h"
#import "Reactions.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#import "Empty.pbobjc.h"
#import "Annotations.pbobjc.h"
#import "Peers.pbobjc.h"
#import "Definitions.pbobjc.h"

@implementation Reactions

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"Reactions"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"Reactions"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark GetReactions(RequestGetReactions) returns (ResponseGetReactions)

- (void)getReactionsWithRequest:(RequestGetReactions *)request handler:(void(^)(ResponseGetReactions *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetReactionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetReactionsWithRequest:(RequestGetReactions *)request handler:(void(^)(ResponseGetReactions *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetReactions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetReactions class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getReactionsWithMessage:(RequestGetReactions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetReactions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetReactions class]];
}

#pragma mark GetMessageReactions(RequestGetMessageReactions) returns (ResponseGetMessageReactions)

- (void)getMessageReactionsWithRequest:(RequestGetMessageReactions *)request handler:(void(^)(ResponseGetMessageReactions *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetMessageReactionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetMessageReactionsWithRequest:(RequestGetMessageReactions *)request handler:(void(^)(ResponseGetMessageReactions *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetMessageReactions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetMessageReactions class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getMessageReactionsWithMessage:(RequestGetMessageReactions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetMessageReactions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetMessageReactions class]];
}

#pragma mark MessageSetReaction(RequestMessageSetReaction) returns (Empty)

- (void)messageSetReactionWithRequest:(RequestMessageSetReaction *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToMessageSetReactionWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToMessageSetReactionWithRequest:(RequestMessageSetReaction *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"MessageSetReaction"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GPBEmpty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)messageSetReactionWithMessage:(RequestMessageSetReaction *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"MessageSetReaction"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GPBEmpty class]];
}

#pragma mark MessageRemoveReaction(RequestMessageRemoveReaction) returns (Empty)

- (void)messageRemoveReactionWithRequest:(RequestMessageRemoveReaction *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToMessageRemoveReactionWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToMessageRemoveReactionWithRequest:(RequestMessageRemoveReaction *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"MessageRemoveReaction"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GPBEmpty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)messageRemoveReactionWithMessage:(RequestMessageRemoveReaction *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"MessageRemoveReaction"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GPBEmpty class]];
}

@end
#endif
