// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: threads.proto

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Threads.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class GPBEmpty;
@class RequestFollowThread;
@class RequestGetThreadInfos;
@class RequestUnfollowThread;
@class ResponseGetThreadInfos;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
  #import "Wrappers.pbobjc.h"
  #import "Empty.pbobjc.h"
  #import "Annotations.pbobjc.h"
  #import "Scalapb.pbobjc.h"
  #import "Definitions.pbobjc.h"
  #import "Peers.pbobjc.h"
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol Threads2 <NSObject>

#pragma mark GetThreadInfos(RequestGetThreadInfos) returns (ResponseGetThreadInfos)

- (GRPCUnaryProtoCall *)getThreadInfosWithMessage:(RequestGetThreadInfos *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark FollowThread(RequestFollowThread) returns (Empty)

- (GRPCUnaryProtoCall *)followThreadWithMessage:(RequestFollowThread *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark UnfollowThread(RequestUnfollowThread) returns (Empty)

- (GRPCUnaryProtoCall *)unfollowThreadWithMessage:(RequestUnfollowThread *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol Threads <NSObject>

#pragma mark GetThreadInfos(RequestGetThreadInfos) returns (ResponseGetThreadInfos)

- (void)getThreadInfosWithRequest:(RequestGetThreadInfos *)request handler:(void(^)(ResponseGetThreadInfos *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToGetThreadInfosWithRequest:(RequestGetThreadInfos *)request handler:(void(^)(ResponseGetThreadInfos *_Nullable response, NSError *_Nullable error))handler;


#pragma mark FollowThread(RequestFollowThread) returns (Empty)

- (void)followThreadWithRequest:(RequestFollowThread *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToFollowThreadWithRequest:(RequestFollowThread *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark UnfollowThread(RequestUnfollowThread) returns (Empty)

- (void)unfollowThreadWithRequest:(RequestUnfollowThread *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToUnfollowThreadWithRequest:(RequestUnfollowThread *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface Threads : GRPCProtoService<Threads2, Threads>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

