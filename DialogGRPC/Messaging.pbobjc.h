// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Any;
@class AudioLocation;
@class AudioMedia;
@class Avatar;
@class BinaryMessage;
@class Color;
@class DeletedMessage;
@class Dialog;
@class DialogGroup;
@class DialogShort;
@class DocumentEx;
@class DocumentExPhoto;
@class DocumentExVideo;
@class DocumentExVoice;
@class DocumentMessage;
@class EmptyMessage;
@class FastThumb;
@class ForwardItem;
@class ForwardSource;
@class GPBBoolValue;
@class GPBBytesValue;
@class GPBDuration;
@class GPBInt32Value;
@class GPBInt64Value;
@class GPBStringValue;
@class GroupOutPeer;
@class HistoryMessage;
@class ImageLocation;
@class ImageMedia;
@class InteractiveMedia;
@class InteractiveMediaButton;
@class InteractiveMediaConfirm;
@class InteractiveMediaGroup;
@class InteractiveMediaSelect;
@class InteractiveMediaSelectOption;
@class InteractiveMediaTranslation;
@class InteractiveMediaTranslationGroup;
@class InteractiveMediaWidget;
@class JsonMessage;
@class Mention;
@class MessageAttributes;
@class MessageContent;
@class MessageMedia;
@class MessageOverrides;
@class MessageStatus;
@class OutPeer;
@class ParagraphStyle;
@class Peer;
@class PinnedMessages;
@class Reaction;
@class ReferencedMessages;
@class SearchPredicate;
@class ServiceEx;
@class ServiceExChangedAbout;
@class ServiceExChangedAvatar;
@class ServiceExChangedTitle;
@class ServiceExChangedTopic;
@class ServiceExChatArchived;
@class ServiceExChatRestored;
@class ServiceExConferenceStatus;
@class ServiceExContactRegistered;
@class ServiceExGroupCreated;
@class ServiceExGroupPublicityChanged;
@class ServiceExPhoneCall;
@class ServiceExPhoneMissed;
@class ServiceExPhoneRejected;
@class ServiceExUserInvited;
@class ServiceExUserJoined;
@class ServiceExUserKicked;
@class ServiceExUserLeft;
@class ServiceMessage;
@class StickerMessage;
@class TextCommand;
@class TextExMarkdown;
@class TextMessage;
@class TextMessageEx;
@class TextModernAttach;
@class TextModernField;
@class TextModernMessage;
@class UUIDValue;
@class UnsupportedMessage;
@class UpdateErrorCause;
@class UserOutPeer;
@class WebpageMedia;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum InteractiveMediaStyle

typedef GPB_ENUM(InteractiveMediaStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  InteractiveMediaStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  InteractiveMediaStyle_InteractiveMediaStyleUnknown = 0,
  InteractiveMediaStyle_InteractiveMediaStyleDefault = 1,
  InteractiveMediaStyle_InteractiveMediaStylePrimary = 2,
  InteractiveMediaStyle_InteractiveMediaStyleDanger = 3,
};

GPBEnumDescriptor *InteractiveMediaStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL InteractiveMediaStyle_IsValidValue(int32_t value);

#pragma mark - Enum ListLoadMode

typedef GPB_ENUM(ListLoadMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ListLoadMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ListLoadMode_ListLoadModeUnknown = 0,
  ListLoadMode_ListLoadModeForward = 1,
  ListLoadMode_ListLoadModeBackward = 2,
  ListLoadMode_ListLoadModeBoth = 3,
};

GPBEnumDescriptor *ListLoadMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ListLoadMode_IsValidValue(int32_t value);

#pragma mark - Enum DialogsFilter

typedef GPB_ENUM(DialogsFilter) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DialogsFilter_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DialogsFilter_DialogsFilterUnknown = 0,
  DialogsFilter_DialogsFilterExcludefavourites = 1,
  DialogsFilter_DialogsFilterExcludearchived = 2,
};

GPBEnumDescriptor *DialogsFilter_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DialogsFilter_IsValidValue(int32_t value);

#pragma mark - MessagingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MessagingRoot : GPBRootObject
@end

#pragma mark - MessageAttributes

typedef GPB_ENUM(MessageAttributes_FieldNumber) {
  MessageAttributes_FieldNumber_IsMentioned = 1,
  MessageAttributes_FieldNumber_IsHighlighted = 2,
  MessageAttributes_FieldNumber_IsNotified = 3,
  MessageAttributes_FieldNumber_IsOnlyForYou = 4,
  MessageAttributes_FieldNumber_Unclassified = 5,
};

/**
 * Message Attributes
 **/
GPB_FINAL @interface MessageAttributes : GPBMessage

/** / Is mentioned. If set overrides built-in value. */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isMentioned;
/** Test to see if @c isMentioned has been set. */
@property(nonatomic, readwrite) BOOL hasIsMentioned;

/** / Is message highlighted. Default is false. */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isHighlighted;
/** Test to see if @c isHighlighted has been set. */
@property(nonatomic, readwrite) BOOL hasIsHighlighted;

/** / Is notified. If set overrides built-in settings. */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isNotified;
/** Test to see if @c isNotified has been set. */
@property(nonatomic, readwrite) BOOL hasIsNotified;

/** / If this message is only for you. Default is false */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isOnlyForYou;
/** Test to see if @c isOnlyForYou has been set. */
@property(nonatomic, readwrite) BOOL hasIsOnlyForYou;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *unclassified;
/** The number of items in @c unclassified without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger unclassified_Count;

@end

#pragma mark - MessageMedia

typedef GPB_ENUM(MessageMedia_FieldNumber) {
  MessageMedia_FieldNumber_Webpage = 1,
  MessageMedia_FieldNumber_Image = 2,
  MessageMedia_FieldNumber_Audio = 3,
  MessageMedia_FieldNumber_ActionsArray = 6,
};

/**
 * Message media
 **/
GPB_FINAL @interface MessageMedia : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) WebpageMedia *webpage;
/** Test to see if @c webpage has been set. */
@property(nonatomic, readwrite) BOOL hasWebpage;

@property(nonatomic, readwrite, strong, null_resettable) ImageMedia *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@property(nonatomic, readwrite, strong, null_resettable) AudioMedia *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InteractiveMediaGroup*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

@end

#pragma mark - WebpageMedia

typedef GPB_ENUM(WebpageMedia_FieldNumber) {
  WebpageMedia_FieldNumber_URL = 1,
  WebpageMedia_FieldNumber_Title = 2,
  WebpageMedia_FieldNumber_Description_p = 3,
  WebpageMedia_FieldNumber_Image = 4,
};

/**
 * Webpage media
 **/
GPB_FINAL @interface WebpageMedia : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, strong, null_resettable) ImageLocation *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@end

#pragma mark - ImageMedia

typedef GPB_ENUM(ImageMedia_FieldNumber) {
  ImageMedia_FieldNumber_Image = 1,
};

/**
 * Image media
 * image image
 **/
GPB_FINAL @interface ImageMedia : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ImageLocation *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@end

#pragma mark - AudioMedia

typedef GPB_ENUM(AudioMedia_FieldNumber) {
  AudioMedia_FieldNumber_Audio = 1,
};

/**
 * Audio media
 **/
GPB_FINAL @interface AudioMedia : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AudioLocation *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@end

#pragma mark - InteractiveMediaWidget

typedef GPB_ENUM(InteractiveMediaWidget_FieldNumber) {
  InteractiveMediaWidget_FieldNumber_InteractiveMediaButton = 1,
  InteractiveMediaWidget_FieldNumber_InteractiveMediaSelect = 2,
};

typedef GPB_ENUM(InteractiveMediaWidget_Body_OneOfCase) {
  InteractiveMediaWidget_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  InteractiveMediaWidget_Body_OneOfCase_InteractiveMediaButton = 1,
  InteractiveMediaWidget_Body_OneOfCase_InteractiveMediaSelect = 2,
};

/**
 * / Some interactive element inside a message
 **/
GPB_FINAL @interface InteractiveMediaWidget : GPBMessage

@property(nonatomic, readonly) InteractiveMediaWidget_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) InteractiveMediaButton *interactiveMediaButton;

@property(nonatomic, readwrite, strong, null_resettable) InteractiveMediaSelect *interactiveMediaSelect;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void InteractiveMediaWidget_ClearBodyOneOfCase(InteractiveMediaWidget *message);

#pragma mark - InteractiveMediaButton

typedef GPB_ENUM(InteractiveMediaButton_FieldNumber) {
  InteractiveMediaButton_FieldNumber_Value = 1,
  InteractiveMediaButton_FieldNumber_Label = 2,
};

/**
 * A 'Button' widget
 **/
GPB_FINAL @interface InteractiveMediaButton : GPBMessage

/** / A value for this button */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** / A user-visible description of this button */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *label;
/** Test to see if @c label has been set. */
@property(nonatomic, readwrite) BOOL hasLabel;

@end

#pragma mark - InteractiveMediaSelect

typedef GPB_ENUM(InteractiveMediaSelect_FieldNumber) {
  InteractiveMediaSelect_FieldNumber_OptionsArray = 1,
  InteractiveMediaSelect_FieldNumber_Label = 2,
  InteractiveMediaSelect_FieldNumber_DefaultValue = 3,
};

/**
 * A select from multiple values widget
 **/
GPB_FINAL @interface InteractiveMediaSelect : GPBMessage

/** / list of values to present to user */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InteractiveMediaSelectOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

/** / A user-visible descripton of this select */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *label;
/** Test to see if @c label has been set. */
@property(nonatomic, readwrite) BOOL hasLabel;

/** / A value that will be selected by default */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *defaultValue;
/** Test to see if @c defaultValue has been set. */
@property(nonatomic, readwrite) BOOL hasDefaultValue;

@end

#pragma mark - InteractiveMediaSelectOption

typedef GPB_ENUM(InteractiveMediaSelectOption_FieldNumber) {
  InteractiveMediaSelectOption_FieldNumber_Value = 1,
  InteractiveMediaSelectOption_FieldNumber_Label = 2,
};

/**
 * A row in the select widget
 **/
GPB_FINAL @interface InteractiveMediaSelectOption : GPBMessage

/** / id of the row */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** / a user visible text for this row */
@property(nonatomic, readwrite, copy, null_resettable) NSString *label;

@end

#pragma mark - InteractiveMedia

typedef GPB_ENUM(InteractiveMedia_FieldNumber) {
  InteractiveMedia_FieldNumber_Id_p = 1,
  InteractiveMedia_FieldNumber_Widget = 2,
  InteractiveMedia_FieldNumber_Style = 3,
  InteractiveMedia_FieldNumber_Confirm = 4,
};

/**
 * A text message extension representing an interactive action.
 * Can be used to add widgets (such as buttons, selects, etc) to messages.
 **/
GPB_FINAL @interface InteractiveMedia : GPBMessage

/** / identifier of the media action */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / a widget to be shown to user */
@property(nonatomic, readwrite, strong, null_resettable) InteractiveMediaWidget *widget;
/** Test to see if @c widget has been set. */
@property(nonatomic, readwrite) BOOL hasWidget;

/** / a style of the widget, which is interpreted by the client */
@property(nonatomic, readwrite) InteractiveMediaStyle style;

/**
 * *
 * A content of the alert dialog that will be show to user
 * when they perform the media action
 **/
@property(nonatomic, readwrite, strong, null_resettable) InteractiveMediaConfirm *confirm;
/** Test to see if @c confirm has been set. */
@property(nonatomic, readwrite) BOOL hasConfirm;

@end

/**
 * Fetches the raw value of a @c InteractiveMedia's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t InteractiveMedia_Style_RawValue(InteractiveMedia *message);
/**
 * Sets the raw value of an @c InteractiveMedia's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetInteractiveMedia_Style_RawValue(InteractiveMedia *message, int32_t value);

#pragma mark - InteractiveMediaTranslation

typedef GPB_ENUM(InteractiveMediaTranslation_FieldNumber) {
  InteractiveMediaTranslation_FieldNumber_Id_p = 1,
  InteractiveMediaTranslation_FieldNumber_Value = 2,
};

GPB_FINAL @interface InteractiveMediaTranslation : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - InteractiveMediaTranslationGroup

typedef GPB_ENUM(InteractiveMediaTranslationGroup_FieldNumber) {
  InteractiveMediaTranslationGroup_FieldNumber_Language = 1,
  InteractiveMediaTranslationGroup_FieldNumber_MessagesArray = 2,
};

GPB_FINAL @interface InteractiveMediaTranslationGroup : GPBMessage

/** / a translation group language */
@property(nonatomic, readwrite, copy, null_resettable) NSString *language;

/** / a list of translation mesages */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InteractiveMediaTranslation*> *messagesArray;
/** The number of items in @c messagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messagesArray_Count;

@end

#pragma mark - InteractiveMediaGroup

typedef GPB_ENUM(InteractiveMediaGroup_FieldNumber) {
  InteractiveMediaGroup_FieldNumber_ActionsArray = 1,
  InteractiveMediaGroup_FieldNumber_Title = 2,
  InteractiveMediaGroup_FieldNumber_Description_p = 3,
  InteractiveMediaGroup_FieldNumber_TranslationsArray = 4,
};

/**
 * A group of interactive media actions
 **/
GPB_FINAL @interface InteractiveMediaGroup : GPBMessage

/** / the list of actions */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InteractiveMedia*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

/** / an optional title of the group */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

/** / an optional description of the group */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

/** / a media content translations */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InteractiveMediaTranslationGroup*> *translationsArray;
/** The number of items in @c translationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger translationsArray_Count;

@end

#pragma mark - InteractiveMediaConfirm

typedef GPB_ENUM(InteractiveMediaConfirm_FieldNumber) {
  InteractiveMediaConfirm_FieldNumber_Text = 1,
  InteractiveMediaConfirm_FieldNumber_Title = 2,
  InteractiveMediaConfirm_FieldNumber_Ok = 3,
  InteractiveMediaConfirm_FieldNumber_Dismiss = 4,
};

/**
 * An alert dialog content to show to user
 **/
GPB_FINAL @interface InteractiveMediaConfirm : GPBMessage

/** / the optional alert dialog prompt */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

/** / the optional alert dialog title */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

/** / the optional confirm button text */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *ok;
/** Test to see if @c ok has been set. */
@property(nonatomic, readwrite) BOOL hasOk;

/** / the optional cancel button text */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *dismiss;
/** Test to see if @c dismiss has been set. */
@property(nonatomic, readwrite) BOOL hasDismiss;

@end

#pragma mark - UpdateInteractiveMediaEvent

typedef GPB_ENUM(UpdateInteractiveMediaEvent_FieldNumber) {
  UpdateInteractiveMediaEvent_FieldNumber_Mid = 1,
  UpdateInteractiveMediaEvent_FieldNumber_Id_p = 2,
  UpdateInteractiveMediaEvent_FieldNumber_Value = 3,
  UpdateInteractiveMediaEvent_FieldNumber_UserId = 4,
};

/**
 * The update which will be received when the action is performed. Duplicated on all clients.
 **/
GPB_FINAL @interface UpdateInteractiveMediaEvent : GPBMessage

/** / Message id of the message that contains interactive media */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** / identifier of the media action */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / selected value of that action */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** / who interacted with that media */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - RequestDoInteractiveMediaAction

typedef GPB_ENUM(RequestDoInteractiveMediaAction_FieldNumber) {
  RequestDoInteractiveMediaAction_FieldNumber_Mid = 1,
  RequestDoInteractiveMediaAction_FieldNumber_Id_p = 2,
  RequestDoInteractiveMediaAction_FieldNumber_Value = 3,
};

/**
 * Sends a request to do interactive media message
 **/
GPB_FINAL @interface RequestDoInteractiveMediaAction : GPBMessage

/** / Message id of the enclosed message */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** / Media id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / selected value */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - MessageOverrides

typedef GPB_ENUM(MessageOverrides_FieldNumber) {
  MessageOverrides_FieldNumber_SenderNameOverride = 1,
  MessageOverrides_FieldNumber_SenderPhotoOverride = 2,
  MessageOverrides_FieldNumber_SenderPhotoURLOverride = 3,
};

GPB_FINAL @interface MessageOverrides : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *senderNameOverride;
/** Test to see if @c senderNameOverride has been set. */
@property(nonatomic, readwrite) BOOL hasSenderNameOverride;

@property(nonatomic, readwrite, strong, null_resettable) Avatar *senderPhotoOverride;
/** Test to see if @c senderPhotoOverride has been set. */
@property(nonatomic, readwrite) BOOL hasSenderPhotoOverride;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *senderPhotoURLOverride;
/** Test to see if @c senderPhotoURLOverride has been set. */
@property(nonatomic, readwrite) BOOL hasSenderPhotoURLOverride;

@end

#pragma mark - MessageContent

typedef GPB_ENUM(MessageContent_FieldNumber) {
  MessageContent_FieldNumber_TextMessage = 1,
  MessageContent_FieldNumber_ServiceMessage = 2,
  MessageContent_FieldNumber_DocumentMessage = 3,
  MessageContent_FieldNumber_JsonMessage = 4,
  MessageContent_FieldNumber_UnsupportedMessage = 5,
  MessageContent_FieldNumber_StickerMessage = 6,
  MessageContent_FieldNumber_BinaryMessage = 7,
  MessageContent_FieldNumber_EmptyMessage = 8,
  MessageContent_FieldNumber_DeletedMessage = 9,
  MessageContent_FieldNumber_Overrides = 10,
  MessageContent_FieldNumber_ExtensionsArray = 11,
  MessageContent_FieldNumber_DisableNotifications = 12,
};

typedef GPB_ENUM(MessageContent_Body_OneOfCase) {
  MessageContent_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  MessageContent_Body_OneOfCase_TextMessage = 1,
  MessageContent_Body_OneOfCase_ServiceMessage = 2,
  MessageContent_Body_OneOfCase_DocumentMessage = 3,
  MessageContent_Body_OneOfCase_JsonMessage = 4,
  MessageContent_Body_OneOfCase_UnsupportedMessage = 5,
  MessageContent_Body_OneOfCase_StickerMessage = 6,
  MessageContent_Body_OneOfCase_BinaryMessage = 7,
  MessageContent_Body_OneOfCase_EmptyMessage = 8,
  MessageContent_Body_OneOfCase_DeletedMessage = 9,
};

GPB_FINAL @interface MessageContent : GPBMessage

@property(nonatomic, readonly) MessageContent_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) TextMessage *textMessage;

@property(nonatomic, readwrite, strong, null_resettable) ServiceMessage *serviceMessage;

@property(nonatomic, readwrite, strong, null_resettable) DocumentMessage *documentMessage;

@property(nonatomic, readwrite, strong, null_resettable) JsonMessage *jsonMessage;

@property(nonatomic, readwrite, strong, null_resettable) UnsupportedMessage *unsupportedMessage;

@property(nonatomic, readwrite, strong, null_resettable) StickerMessage *stickerMessage;

@property(nonatomic, readwrite, strong, null_resettable) BinaryMessage *binaryMessage;

@property(nonatomic, readwrite, strong, null_resettable) EmptyMessage *emptyMessage;

@property(nonatomic, readwrite, strong, null_resettable) DeletedMessage *deletedMessage;

@property(nonatomic, readwrite, strong, null_resettable) MessageOverrides *overrides;
/** Test to see if @c overrides has been set. */
@property(nonatomic, readwrite) BOOL hasOverrides;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Any*> *extensionsArray;
/** The number of items in @c extensionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extensionsArray_Count;

@property(nonatomic, readwrite) BOOL disableNotifications;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void MessageContent_ClearBodyOneOfCase(MessageContent *message);

#pragma mark - TextMessage

typedef GPB_ENUM(TextMessage_FieldNumber) {
  TextMessage_FieldNumber_Text = 1,
  TextMessage_FieldNumber_Ext = 2,
  TextMessage_FieldNumber_MediaArray = 3,
  TextMessage_FieldNumber_ExtensionsArray = 4,
  TextMessage_FieldNumber_MentionsArray = 5,
};

/**
 * Text message
 **/
GPB_FINAL @interface TextMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** / Optional bytes of extension */
@property(nonatomic, readwrite, strong, null_resettable) TextMessageEx *ext;
/** Test to see if @c ext has been set. */
@property(nonatomic, readwrite) BOOL hasExt;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MessageMedia*> *mediaArray;
/** The number of items in @c mediaArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mediaArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Any*> *extensionsArray;
/** The number of items in @c extensionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extensionsArray_Count;

/** / Mentions in message */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Mention*> *mentionsArray;
/** The number of items in @c mentionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mentionsArray_Count;

@end

#pragma mark - Mention

typedef GPB_ENUM(Mention_FieldNumber) {
  Mention_FieldNumber_Peer = 1,
  Mention_FieldNumber_All = 2,
};

GPB_FINAL @interface Mention : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) BOOL all;

@end

#pragma mark - TextMessageEx

typedef GPB_ENUM(TextMessageEx_FieldNumber) {
  TextMessageEx_FieldNumber_TextExMarkdown = 1,
  TextMessageEx_FieldNumber_TextModernMessage = 2,
  TextMessageEx_FieldNumber_TextCommand = 3,
};

typedef GPB_ENUM(TextMessageEx_Body_OneOfCase) {
  TextMessageEx_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  TextMessageEx_Body_OneOfCase_TextExMarkdown = 1,
  TextMessageEx_Body_OneOfCase_TextModernMessage = 2,
  TextMessageEx_Body_OneOfCase_TextCommand = 3,
};

GPB_FINAL @interface TextMessageEx : GPBMessage

@property(nonatomic, readonly) TextMessageEx_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) TextExMarkdown *textExMarkdown;

@property(nonatomic, readwrite, strong, null_resettable) TextModernMessage *textModernMessage;

@property(nonatomic, readwrite, strong, null_resettable) TextCommand *textCommand;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void TextMessageEx_ClearBodyOneOfCase(TextMessageEx *message);

#pragma mark - TextExMarkdown

typedef GPB_ENUM(TextExMarkdown_FieldNumber) {
  TextExMarkdown_FieldNumber_Markdown = 1,
};

/**
 * Markdown extension
 **/
GPB_FINAL @interface TextExMarkdown : GPBMessage

/** / Markdown text */
@property(nonatomic, readwrite, copy, null_resettable) NSString *markdown;

@end

#pragma mark - TextModernMessage

typedef GPB_ENUM(TextModernMessage_FieldNumber) {
  TextModernMessage_FieldNumber_Text = 1,
  TextModernMessage_FieldNumber_Style = 2,
  TextModernMessage_FieldNumber_AttachesArray = 3,
};

/**
 * Modern text message
 **/
GPB_FINAL @interface TextModernMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite, strong, null_resettable) ParagraphStyle *style;
/** Test to see if @c style has been set. */
@property(nonatomic, readwrite) BOOL hasStyle;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TextModernAttach*> *attachesArray;
/** The number of items in @c attachesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attachesArray_Count;

@end

#pragma mark - ParagraphStyle

typedef GPB_ENUM(ParagraphStyle_FieldNumber) {
  ParagraphStyle_FieldNumber_ShowParagraph = 1,
  ParagraphStyle_FieldNumber_ParagraphColor = 2,
  ParagraphStyle_FieldNumber_BgColor = 3,
};

/**
 * Paragraph style
 **/
GPB_FINAL @interface ParagraphStyle : GPBMessage

/** / Show quote-like paragraph? */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *showParagraph;
/** Test to see if @c showParagraph has been set. */
@property(nonatomic, readwrite) BOOL hasShowParagraph;

/** / Override paragraph color */
@property(nonatomic, readwrite, strong, null_resettable) Color *paragraphColor;
/** Test to see if @c paragraphColor has been set. */
@property(nonatomic, readwrite) BOOL hasParagraphColor;

/** / Override background color */
@property(nonatomic, readwrite, strong, null_resettable) Color *bgColor;
/** Test to see if @c bgColor has been set. */
@property(nonatomic, readwrite) BOOL hasBgColor;

@end

#pragma mark - TextModernAttach

typedef GPB_ENUM(TextModernAttach_FieldNumber) {
  TextModernAttach_FieldNumber_Title = 1,
  TextModernAttach_FieldNumber_TitleURL = 2,
  TextModernAttach_FieldNumber_TitleIcon = 3,
  TextModernAttach_FieldNumber_Text = 4,
  TextModernAttach_FieldNumber_Style = 5,
  TextModernAttach_FieldNumber_FieldsArray = 6,
};

/**
 * Attaches to message
 **/
GPB_FINAL @interface TextModernAttach : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *titleURL;
/** Test to see if @c titleURL has been set. */
@property(nonatomic, readwrite) BOOL hasTitleURL;

@property(nonatomic, readwrite, strong, null_resettable) ImageLocation *titleIcon;
/** Test to see if @c titleIcon has been set. */
@property(nonatomic, readwrite) BOOL hasTitleIcon;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite, strong, null_resettable) ParagraphStyle *style;
/** Test to see if @c style has been set. */
@property(nonatomic, readwrite) BOOL hasStyle;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TextModernField*> *fieldsArray;
/** The number of items in @c fieldsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fieldsArray_Count;

@end

#pragma mark - TextModernField

typedef GPB_ENUM(TextModernField_FieldNumber) {
  TextModernField_FieldNumber_Title = 1,
  TextModernField_FieldNumber_Value = 2,
  TextModernField_FieldNumber_IsShort = 3,
};

/**
 * Modern message fields
 **/
GPB_FINAL @interface TextModernField : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** / Is field can be shown in compact way (default is TRUE) */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isShort;
/** Test to see if @c isShort has been set. */
@property(nonatomic, readwrite) BOOL hasIsShort;

@end

#pragma mark - TextCommand

typedef GPB_ENUM(TextCommand_FieldNumber) {
  TextCommand_FieldNumber_Command = 1,
  TextCommand_FieldNumber_Args = 2,
};

/**
 * Text Command Message for bots
 **/
GPB_FINAL @interface TextCommand : GPBMessage

/** / Slash-Command For execution */
@property(nonatomic, readwrite, copy, null_resettable) NSString *command;

@property(nonatomic, readwrite, copy, null_resettable) NSString *args;

@end

#pragma mark - ServiceMessage

typedef GPB_ENUM(ServiceMessage_FieldNumber) {
  ServiceMessage_FieldNumber_Text = 1,
  ServiceMessage_FieldNumber_Ext = 2,
};

/**
 * Service message
 **/
GPB_FINAL @interface ServiceMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@property(nonatomic, readwrite, strong, null_resettable) ServiceEx *ext;
/** Test to see if @c ext has been set. */
@property(nonatomic, readwrite) BOOL hasExt;

@end

#pragma mark - ServiceEx

typedef GPB_ENUM(ServiceEx_FieldNumber) {
  ServiceEx_FieldNumber_UserInvited = 1,
  ServiceEx_FieldNumber_UserJoined = 2,
  ServiceEx_FieldNumber_UserKicked = 3,
  ServiceEx_FieldNumber_UserLeft = 4,
  ServiceEx_FieldNumber_GroupCreated = 5,
  ServiceEx_FieldNumber_ChangedTitle = 7,
  ServiceEx_FieldNumber_ChangedTopic = 8,
  ServiceEx_FieldNumber_ChangedAbout = 9,
  ServiceEx_FieldNumber_ChangedAvatar = 10,
  ServiceEx_FieldNumber_ContactRegistered = 11,
  ServiceEx_FieldNumber_PhoneMissed = 12,
  ServiceEx_FieldNumber_PhoneCall = 13,
  ServiceEx_FieldNumber_PhoneRejected = 14,
  ServiceEx_FieldNumber_ChatArchived = 15,
  ServiceEx_FieldNumber_ChatRestored = 16,
  ServiceEx_FieldNumber_ConferenceStatus = 17,
  ServiceEx_FieldNumber_PublicityChanged = 18,
};

typedef GPB_ENUM(ServiceEx_Body_OneOfCase) {
  ServiceEx_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  ServiceEx_Body_OneOfCase_UserInvited = 1,
  ServiceEx_Body_OneOfCase_UserJoined = 2,
  ServiceEx_Body_OneOfCase_UserKicked = 3,
  ServiceEx_Body_OneOfCase_UserLeft = 4,
  ServiceEx_Body_OneOfCase_GroupCreated = 5,
  ServiceEx_Body_OneOfCase_ChangedTitle = 7,
  ServiceEx_Body_OneOfCase_ChangedTopic = 8,
  ServiceEx_Body_OneOfCase_ChangedAbout = 9,
  ServiceEx_Body_OneOfCase_ChangedAvatar = 10,
  ServiceEx_Body_OneOfCase_ContactRegistered = 11,
  ServiceEx_Body_OneOfCase_PhoneMissed = 12,
  ServiceEx_Body_OneOfCase_PhoneCall = 13,
  ServiceEx_Body_OneOfCase_PhoneRejected = 14,
  ServiceEx_Body_OneOfCase_ChatArchived = 15,
  ServiceEx_Body_OneOfCase_ChatRestored = 16,
  ServiceEx_Body_OneOfCase_ConferenceStatus = 17,
  ServiceEx_Body_OneOfCase_PublicityChanged = 18,
};

GPB_FINAL @interface ServiceEx : GPBMessage

@property(nonatomic, readonly) ServiceEx_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExUserInvited *userInvited;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExUserJoined *userJoined;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExUserKicked *userKicked;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExUserLeft *userLeft;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExGroupCreated *groupCreated;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChangedTitle *changedTitle;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChangedTopic *changedTopic;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChangedAbout *changedAbout;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChangedAvatar *changedAvatar;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExContactRegistered *contactRegistered;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExPhoneMissed *phoneMissed;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExPhoneCall *phoneCall;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExPhoneRejected *phoneRejected;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChatArchived *chatArchived;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExChatRestored *chatRestored;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExConferenceStatus *conferenceStatus;

@property(nonatomic, readwrite, strong, null_resettable) ServiceExGroupPublicityChanged *publicityChanged;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void ServiceEx_ClearBodyOneOfCase(ServiceEx *message);

#pragma mark - ServiceExUserInvited

typedef GPB_ENUM(ServiceExUserInvited_FieldNumber) {
  ServiceExUserInvited_FieldNumber_InvitedUserIdsArray = 1,
};

/**
 * Service message about adding user to group
 **/
GPB_FINAL @interface ServiceExUserInvited : GPBMessage

/** / added user ids */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *invitedUserIdsArray;
/** The number of items in @c invitedUserIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger invitedUserIdsArray_Count;

@end

#pragma mark - ServiceExUserJoined

typedef GPB_ENUM(ServiceExUserJoined_FieldNumber) {
  ServiceExUserJoined_FieldNumber_JoinedUserIdsArray = 1,
};

/**
 * Service message about user join to group
 **/
GPB_FINAL @interface ServiceExUserJoined : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *joinedUserIdsArray;
/** The number of items in @c joinedUserIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger joinedUserIdsArray_Count;

@end

#pragma mark - ServiceExUserKicked

typedef GPB_ENUM(ServiceExUserKicked_FieldNumber) {
  ServiceExUserKicked_FieldNumber_KickedUserIdsArray = 1,
};

/**
 * Service message about kicking user from group
 **/
GPB_FINAL @interface ServiceExUserKicked : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *kickedUserIdsArray;
/** The number of items in @c kickedUserIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger kickedUserIdsArray_Count;

@end

#pragma mark - ServiceExUserLeft

typedef GPB_ENUM(ServiceExUserLeft_FieldNumber) {
  ServiceExUserLeft_FieldNumber_LeftUserIdsArray = 1,
};

/**
 * Service message about user left group
 **/
GPB_FINAL @interface ServiceExUserLeft : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *leftUserIdsArray;
/** The number of items in @c leftUserIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger leftUserIdsArray_Count;

@end

#pragma mark - ServiceExGroupCreated

/**
 * Service message about group creating
 **/
GPB_FINAL @interface ServiceExGroupCreated : GPBMessage

@end

#pragma mark - ServiceExChangedTitle

typedef GPB_ENUM(ServiceExChangedTitle_FieldNumber) {
  ServiceExChangedTitle_FieldNumber_Title = 1,
};

/**
 * Service message about group title change
 **/
GPB_FINAL @interface ServiceExChangedTitle : GPBMessage

/** / New group title */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@end

#pragma mark - ServiceExChangedTopic

typedef GPB_ENUM(ServiceExChangedTopic_FieldNumber) {
  ServiceExChangedTopic_FieldNumber_Topic = 1,
};

/**
 * Service message on group topic change
 **/
GPB_FINAL @interface ServiceExChangedTopic : GPBMessage

/** / New group topic */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *topic;
/** Test to see if @c topic has been set. */
@property(nonatomic, readwrite) BOOL hasTopic;

@end

#pragma mark - ServiceExChangedAbout

typedef GPB_ENUM(ServiceExChangedAbout_FieldNumber) {
  ServiceExChangedAbout_FieldNumber_About = 1,
};

/**
 * Service message on group about change
 **/
GPB_FINAL @interface ServiceExChangedAbout : GPBMessage

/** / New group about */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *about;
/** Test to see if @c about has been set. */
@property(nonatomic, readwrite) BOOL hasAbout;

@end

#pragma mark - ServiceExChangedAvatar

typedef GPB_ENUM(ServiceExChangedAvatar_FieldNumber) {
  ServiceExChangedAvatar_FieldNumber_Avatar = 1,
};

/**
 * Service message about avatar change
 **/
GPB_FINAL @interface ServiceExChangedAvatar : GPBMessage

/** / Updated avatar */
@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@end

#pragma mark - ServiceExContactRegistered

typedef GPB_ENUM(ServiceExContactRegistered_FieldNumber) {
  ServiceExContactRegistered_FieldNumber_UserId = 1,
};

/**
 * Service message about user registration
 **/
GPB_FINAL @interface ServiceExContactRegistered : GPBMessage

/** / User Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - ServiceExPhoneMissed

/**
 * Update about missing phone call
 **/
GPB_FINAL @interface ServiceExPhoneMissed : GPBMessage

@end

#pragma mark - ServiceExPhoneCall

typedef GPB_ENUM(ServiceExPhoneCall_FieldNumber) {
  ServiceExPhoneCall_FieldNumber_DurationSeconds = 1,
};

/**
 * Update about phone call
 **/
GPB_FINAL @interface ServiceExPhoneCall : GPBMessage

/** / Duration of a phone call */
@property(nonatomic, readwrite) int32_t durationSeconds;

@end

#pragma mark - ServiceExPhoneRejected

/**
 * Update about phone call rejected
 **/
GPB_FINAL @interface ServiceExPhoneRejected : GPBMessage

@end

#pragma mark - ServiceExChatArchived

/**
 * Message about chat archived
 **/
GPB_FINAL @interface ServiceExChatArchived : GPBMessage

@end

#pragma mark - ServiceExChatRestored

/**
 * Message about chat restored
 **/
GPB_FINAL @interface ServiceExChatRestored : GPBMessage

@end

#pragma mark - ServiceExConferenceStatus

typedef GPB_ENUM(ServiceExConferenceStatus_FieldNumber) {
  ServiceExConferenceStatus_FieldNumber_ConferenceId = 1,
  ServiceExConferenceStatus_FieldNumber_ConferenceStatus = 2,
};

/**
 * Message about conference call state
 **/
GPB_FINAL @interface ServiceExConferenceStatus : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *conferenceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *conferenceStatus;

@end

#pragma mark - ServiceExGroupPublicityChanged

typedef GPB_ENUM(ServiceExGroupPublicityChanged_FieldNumber) {
  ServiceExGroupPublicityChanged_FieldNumber_PreviousPublicity = 1,
  ServiceExGroupPublicityChanged_FieldNumber_CurrentPublicity = 2,
};

/**
 * Message about group becoming private or public
 **/
GPB_FINAL @interface ServiceExGroupPublicityChanged : GPBMessage

@property(nonatomic, readwrite) BOOL previousPublicity;

@property(nonatomic, readwrite) BOOL currentPublicity;

@end

#pragma mark - DocumentMessage

typedef GPB_ENUM(DocumentMessage_FieldNumber) {
  DocumentMessage_FieldNumber_FileId = 1,
  DocumentMessage_FieldNumber_AccessHash = 2,
  DocumentMessage_FieldNumber_FileSize = 3,
  DocumentMessage_FieldNumber_Name = 4,
  DocumentMessage_FieldNumber_MimeType = 5,
  DocumentMessage_FieldNumber_Thumb = 6,
  DocumentMessage_FieldNumber_Ext = 7,
  DocumentMessage_FieldNumber_Caption = 8,
  DocumentMessage_FieldNumber_MentionsArray = 9,
};

/**
 * File message
 **/
GPB_FINAL @interface DocumentMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileId;

@property(nonatomic, readwrite) int64_t accessHash;

@property(nonatomic, readwrite) int32_t fileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

/** / optional thumb of file. JPEG less that 90x90 with 60-70 quality. */
@property(nonatomic, readwrite, strong, null_resettable) FastThumb *thumb;
/** Test to see if @c thumb has been set. */
@property(nonatomic, readwrite) BOOL hasThumb;

@property(nonatomic, readwrite, strong, null_resettable) DocumentEx *ext;
/** Test to see if @c ext has been set. */
@property(nonatomic, readwrite) BOOL hasExt;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *caption;
/** Test to see if @c caption has been set. */
@property(nonatomic, readwrite) BOOL hasCaption;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Mention*> *mentionsArray;
/** The number of items in @c mentionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mentionsArray_Count;

@end

#pragma mark - DocumentEx

typedef GPB_ENUM(DocumentEx_FieldNumber) {
  DocumentEx_FieldNumber_Photo = 1,
  DocumentEx_FieldNumber_Video = 2,
  DocumentEx_FieldNumber_Voice = 3,
};

typedef GPB_ENUM(DocumentEx_Body_OneOfCase) {
  DocumentEx_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  DocumentEx_Body_OneOfCase_Photo = 1,
  DocumentEx_Body_OneOfCase_Video = 2,
  DocumentEx_Body_OneOfCase_Voice = 3,
};

GPB_FINAL @interface DocumentEx : GPBMessage

@property(nonatomic, readonly) DocumentEx_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) DocumentExPhoto *photo;

@property(nonatomic, readwrite, strong, null_resettable) DocumentExVideo *video;

@property(nonatomic, readwrite, strong, null_resettable) DocumentExVoice *voice;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void DocumentEx_ClearBodyOneOfCase(DocumentEx *message);

#pragma mark - DocumentExPhoto

typedef GPB_ENUM(DocumentExPhoto_FieldNumber) {
  DocumentExPhoto_FieldNumber_W = 1,
  DocumentExPhoto_FieldNumber_H = 2,
};

/**
 * File photo extension
 **/
GPB_FINAL @interface DocumentExPhoto : GPBMessage

/** / image width */
@property(nonatomic, readwrite) int32_t w;

/** / image height */
@property(nonatomic, readwrite) int32_t h;

@end

#pragma mark - DocumentExVideo

typedef GPB_ENUM(DocumentExVideo_FieldNumber) {
  DocumentExVideo_FieldNumber_W = 1,
  DocumentExVideo_FieldNumber_H = 2,
  DocumentExVideo_FieldNumber_Duration = 3,
};

/**
 * File video extension
 **/
GPB_FINAL @interface DocumentExVideo : GPBMessage

/** / video width */
@property(nonatomic, readwrite) int32_t w;

/** / video height */
@property(nonatomic, readwrite) int32_t h;

@property(nonatomic, readwrite) int32_t duration;

@end

#pragma mark - DocumentExVoice

typedef GPB_ENUM(DocumentExVoice_FieldNumber) {
  DocumentExVoice_FieldNumber_Duration = 1,
};

/**
 * File voice extension
 **/
GPB_FINAL @interface DocumentExVoice : GPBMessage

@property(nonatomic, readwrite) int32_t duration;

@end

#pragma mark - JsonMessage

typedef GPB_ENUM(JsonMessage_FieldNumber) {
  JsonMessage_FieldNumber_RawJson = 1,
};

/**
 * Custom-data JsonMessage
 **/
GPB_FINAL @interface JsonMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *rawJson;

@end

#pragma mark - UnsupportedMessage

/**
 * Explicit type for unsupported message
 **/
GPB_FINAL @interface UnsupportedMessage : GPBMessage

@end

#pragma mark - StickerMessage

typedef GPB_ENUM(StickerMessage_FieldNumber) {
  StickerMessage_FieldNumber_StickerId = 1,
  StickerMessage_FieldNumber_FastPreview = 2,
  StickerMessage_FieldNumber_Image512 = 3,
  StickerMessage_FieldNumber_Image256 = 4,
  StickerMessage_FieldNumber_StickerCollectionId = 5,
  StickerMessage_FieldNumber_StickerCollectionAccessHash = 6,
  StickerMessage_FieldNumber_Emoji = 7,
  StickerMessage_FieldNumber_AnimatedStickerJson = 8,
};

/**
 * Sticker message
 **/
GPB_FINAL @interface StickerMessage : GPBMessage

/** / Optional Unique ID of sticker */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *stickerId;
/** Test to see if @c stickerId has been set. */
@property(nonatomic, readwrite) BOOL hasStickerId;

/** / Optional Fast preview of sticker in webp format */
@property(nonatomic, readwrite, strong, null_resettable) GPBBytesValue *fastPreview;
/** Test to see if @c fastPreview has been set. */
@property(nonatomic, readwrite) BOOL hasFastPreview;

/** / Optional 512x512 sticker image in webp format */
@property(nonatomic, readwrite, strong, null_resettable) ImageLocation *image512;
/** Test to see if @c image512 has been set. */
@property(nonatomic, readwrite) BOOL hasImage512;

/** / Optional 256x256 sticker image in webp format */
@property(nonatomic, readwrite, strong, null_resettable) ImageLocation *image256;
/** Test to see if @c image256 has been set. */
@property(nonatomic, readwrite) BOOL hasImage256;

/** / Optional Collection ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *stickerCollectionId;
/** Test to see if @c stickerCollectionId has been set. */
@property(nonatomic, readwrite) BOOL hasStickerCollectionId;

/** / Optional Collection Access Hash */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *stickerCollectionAccessHash;
/** Test to see if @c stickerCollectionAccessHash has been set. */
@property(nonatomic, readwrite) BOOL hasStickerCollectionAccessHash;

/** / Sticker emoji */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *emoji;
/** Test to see if @c emoji has been set. */
@property(nonatomic, readwrite) BOOL hasEmoji;

/** / Animated sticker json payload */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *animatedStickerJson;
/** Test to see if @c animatedStickerJson has been set. */
@property(nonatomic, readwrite) BOOL hasAnimatedStickerJson;

@end

#pragma mark - BinaryMessage

typedef GPB_ENUM(BinaryMessage_FieldNumber) {
  BinaryMessage_FieldNumber_ContentTag = 1,
  BinaryMessage_FieldNumber_Msg = 2,
};

/**
 * Binary Message. Useful for implementing your own content types
 **/
GPB_FINAL @interface BinaryMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *contentTag;

@property(nonatomic, readwrite, copy, null_resettable) NSData *msg;

@end

#pragma mark - EmptyMessage

/**
 * Empty Message
 **/
GPB_FINAL @interface EmptyMessage : GPBMessage

@end

#pragma mark - DeletedMessage

typedef GPB_ENUM(DeletedMessage_FieldNumber) {
  DeletedMessage_FieldNumber_IsLocal = 1,
};

/**
 * Deleted message
 **/
GPB_FINAL @interface DeletedMessage : GPBMessage

/** / Deleted locally message */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isLocal;
/** Test to see if @c isLocal has been set. */
@property(nonatomic, readwrite) BOOL hasIsLocal;

@end

#pragma mark - DialogShort

typedef GPB_ENUM(DialogShort_FieldNumber) {
  DialogShort_FieldNumber_Peer = 1,
  DialogShort_FieldNumber_Counter = 2,
  DialogShort_FieldNumber_Date = 3,
};

/**
 * Short Dialog from grouped conversation list
 **/
GPB_FINAL @interface DialogShort : GPBMessage

/** / Peer of conversation */
@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Conversation unread count */
@property(nonatomic, readwrite) int32_t counter;

/** / Conversation top message date */
@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - DialogGroup

typedef GPB_ENUM(DialogGroup_FieldNumber) {
  DialogGroup_FieldNumber_Title = 1,
  DialogGroup_FieldNumber_Key = 2,
  DialogGroup_FieldNumber_DialogsArray = 3,
};

/**
 * Grouped dialog list
 **/
GPB_FINAL @interface DialogGroup : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DialogShort*> *dialogsArray;
/** The number of items in @c dialogsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dialogsArray_Count;

@end

#pragma mark - SearchPredicate

typedef GPB_ENUM(SearchPredicate_FieldNumber) {
  SearchPredicate_FieldNumber_Key = 1,
  SearchPredicate_FieldNumber_ValuesArray = 2,
};

/**
 * Predicate for searching in custom profile
 **/
GPB_FINAL @interface SearchPredicate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

@end

#pragma mark - ForwardItem

typedef GPB_ENUM(ForwardItem_FieldNumber) {
  ForwardItem_FieldNumber_DeduplicationId = 1,
  ForwardItem_FieldNumber_Mid = 2,
};

/**
 * Forwarding messages list item
 **/
GPB_FINAL @interface ForwardItem : GPBMessage

/** / Id for message deduplication */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deduplicationId;

/** / Original message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@end

#pragma mark - RequestSendMessage

typedef GPB_ENUM(RequestSendMessage_FieldNumber) {
  RequestSendMessage_FieldNumber_Peer = 1,
  RequestSendMessage_FieldNumber_DeduplicationId = 2,
  RequestSendMessage_FieldNumber_Message = 3,
  RequestSendMessage_FieldNumber_IsOnlyForUser = 4,
  RequestSendMessage_FieldNumber_ForwardsArray = 5,
  RequestSendMessage_FieldNumber_Reply = 6,
  RequestSendMessage_FieldNumber_PredicatesArray = 7,
  RequestSendMessage_FieldNumber_WhiteListArray = 8,
  RequestSendMessage_FieldNumber_BlackListArray = 9,
};

/**
 * Sending plain message
 **/
GPB_FINAL @interface RequestSendMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Id for message deduplication */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deduplicationId;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

/** / if not empty, then message will be send to this user only */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *isOnlyForUser;
/** Test to see if @c isOnlyForUser has been set. */
@property(nonatomic, readwrite) BOOL hasIsOnlyForUser;

/** / If current message forwards some other */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ForwardItem*> *forwardsArray;
/** The number of items in @c forwardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger forwardsArray_Count;

/** / If current message is a reply on some other */
@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *reply;
/** Test to see if @c reply has been set. */
@property(nonatomic, readwrite) BOOL hasReply;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SearchPredicate*> *predicatesArray;
/** The number of items in @c predicatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger predicatesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *whiteListArray;
/** The number of items in @c whiteListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger whiteListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *blackListArray;
/** The number of items in @c blackListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blackListArray_Count;

@end

#pragma mark - RequestSendMessageAsync

typedef GPB_ENUM(RequestSendMessageAsync_FieldNumber) {
  RequestSendMessageAsync_FieldNumber_Peer = 1,
  RequestSendMessageAsync_FieldNumber_DeduplicationId = 2,
  RequestSendMessageAsync_FieldNumber_Message = 3,
  RequestSendMessageAsync_FieldNumber_IsOnlyForUser = 4,
  RequestSendMessageAsync_FieldNumber_Forward = 5,
  RequestSendMessageAsync_FieldNumber_Reply = 6,
  RequestSendMessageAsync_FieldNumber_PredicatesArray = 7,
  RequestSendMessageAsync_FieldNumber_WhiteListArray = 8,
  RequestSendMessageAsync_FieldNumber_BlackListArray = 9,
};

GPB_FINAL @interface RequestSendMessageAsync : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Id for message deduplication */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deduplicationId;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

/** / if not empty, then message will be send to this user only */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *isOnlyForUser;
/** Test to see if @c isOnlyForUser has been set. */
@property(nonatomic, readwrite) BOOL hasIsOnlyForUser;

/** / If current message forwards some other */
@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *forward;
/** Test to see if @c forward has been set. */
@property(nonatomic, readwrite) BOOL hasForward;

/** / If current message is a reply on some other */
@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *reply;
/** Test to see if @c reply has been set. */
@property(nonatomic, readwrite) BOOL hasReply;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SearchPredicate*> *predicatesArray;
/** The number of items in @c predicatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger predicatesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *whiteListArray;
/** The number of items in @c whiteListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger whiteListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *blackListArray;
/** The number of items in @c blackListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blackListArray_Count;

@end

#pragma mark - RequestUpdateMessage

typedef GPB_ENUM(RequestUpdateMessage_FieldNumber) {
  RequestUpdateMessage_FieldNumber_Mid = 1,
  RequestUpdateMessage_FieldNumber_UpdatedMessage = 2,
  RequestUpdateMessage_FieldNumber_LastEditedAt = 3,
  RequestUpdateMessage_FieldNumber_Peer = 4,
};

/**
 * Changing Message content
 **/
GPB_FINAL @interface RequestUpdateMessage : GPBMessage

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *updatedMessage;
/** Test to see if @c updatedMessage has been set. */
@property(nonatomic, readwrite) BOOL hasUpdatedMessage;

/** / Date from this message when it was changed last time */
@property(nonatomic, readwrite) int64_t lastEditedAt;

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestMessageReceived

typedef GPB_ENUM(RequestMessageReceived_FieldNumber) {
  RequestMessageReceived_FieldNumber_Peer = 1,
  RequestMessageReceived_FieldNumber_Date = 2,
};

/**
 * Confirmation of plain message receive by device
 **/
GPB_FINAL @interface RequestMessageReceived : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - RequestMessageRead

typedef GPB_ENUM(RequestMessageRead_FieldNumber) {
  RequestMessageRead_FieldNumber_Peer = 1,
  RequestMessageRead_FieldNumber_Date = 2,
};

/**
 * Marking plain messages as read
 **/
GPB_FINAL @interface RequestMessageRead : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - RequestDeleteMessage

typedef GPB_ENUM(RequestDeleteMessage_FieldNumber) {
  RequestDeleteMessage_FieldNumber_Peer = 1,
  RequestDeleteMessage_FieldNumber_MessageId = 2,
  RequestDeleteMessage_FieldNumber_DeleteForUserOnly = 3,
};

/**
 * Deleting message
 **/
GPB_FINAL @interface RequestDeleteMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *messageId;
/** Test to see if @c messageId has been set. */
@property(nonatomic, readwrite) BOOL hasMessageId;

@property(nonatomic, readwrite) BOOL deleteForUserOnly;

@end

#pragma mark - RequestClearChat

typedef GPB_ENUM(RequestClearChat_FieldNumber) {
  RequestClearChat_FieldNumber_Peer = 1,
  RequestClearChat_FieldNumber_LastMessageDate = 2,
};

/**
 * Clearing of conversation (without removing dialog from dialogs list)
 **/
GPB_FINAL @interface RequestClearChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t lastMessageDate;

@end

#pragma mark - RequestDeleteChat

typedef GPB_ENUM(RequestDeleteChat_FieldNumber) {
  RequestDeleteChat_FieldNumber_Peer = 1,
  RequestDeleteChat_FieldNumber_LastMessageDate = 2,
};

/**
 * Deleting of conversation (also leave group for group conversations)
 **/
GPB_FINAL @interface RequestDeleteChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t lastMessageDate;

@end

#pragma mark - RequestArchiveChat

typedef GPB_ENUM(RequestArchiveChat_FieldNumber) {
  RequestArchiveChat_FieldNumber_Peer = 1,
};

/**
 * Archiving chat
 **/
GPB_FINAL @interface RequestArchiveChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - ResponseSendMessage

typedef GPB_ENUM(ResponseSendMessage_FieldNumber) {
  ResponseSendMessage_FieldNumber_MessageId = 1,
  ResponseSendMessage_FieldNumber_MessageDate = 2,
  ResponseSendMessage_FieldNumber_PreviousMessageId = 3,
  ResponseSendMessage_FieldNumber_CreatorUserId = 4,
  ResponseSendMessage_FieldNumber_Clock = 5,
};

GPB_FINAL @interface ResponseSendMessage : GPBMessage

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *messageId;
/** Test to see if @c messageId has been set. */
@property(nonatomic, readwrite) BOOL hasMessageId;

/** / Message creation date from server */
@property(nonatomic, readwrite) int64_t messageDate;

/** / Previous message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *previousMessageId;
/** Test to see if @c previousMessageId has been set. */
@property(nonatomic, readwrite) BOOL hasPreviousMessageId;

/** Message creator */
@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorUserId;

/** Clock of this message (initially equals the message_date field) */
@property(nonatomic, readwrite) int64_t clock;

@end

#pragma mark - UpdateMessage

typedef GPB_ENUM(UpdateMessage_FieldNumber) {
  UpdateMessage_FieldNumber_Peer = 1,
  UpdateMessage_FieldNumber_SenderUserId = 2,
  UpdateMessage_FieldNumber_Date = 3,
  UpdateMessage_FieldNumber_Mid = 4,
  UpdateMessage_FieldNumber_Message = 5,
  UpdateMessage_FieldNumber_Attributes = 6,
  UpdateMessage_FieldNumber_Reply = 8,
  UpdateMessage_FieldNumber_PreviousMid = 9,
  UpdateMessage_FieldNumber_PrevMessageDate = 10,
  UpdateMessage_FieldNumber_UnreadCounterClock = 11,
  UpdateMessage_FieldNumber_Counter = 12,
  UpdateMessage_FieldNumber_MyReadDate = 13,
  UpdateMessage_FieldNumber_RandomId = 14,
  UpdateMessage_FieldNumber_ModifiedAt = 15,
  UpdateMessage_FieldNumber_PrevEditInPeerAt = 16,
  UpdateMessage_FieldNumber_ForwardSource = 17,
};

typedef GPB_ENUM(UpdateMessage_Attach_OneOfCase) {
  UpdateMessage_Attach_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateMessage_Attach_OneOfCase_Reply = 8,
  UpdateMessage_Attach_OneOfCase_ForwardSource = 17,
};

/**
 * Update about plain message
 **/
GPB_FINAL @interface UpdateMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *senderUserId;

/** message creation date (interval end) */
@property(nonatomic, readwrite) int64_t date;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

/** / attributes to help reasoning about message */
@property(nonatomic, readwrite, strong, null_resettable) MessageAttributes *attributes;
/** Test to see if @c attributes has been set. */
@property(nonatomic, readwrite) BOOL hasAttributes;

@property(nonatomic, readonly) UpdateMessage_Attach_OneOfCase attachOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *reply;

@property(nonatomic, readwrite, strong, null_resettable) ForwardSource *forwardSource;

/** / Message id of previos message from current conversation */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *previousMid;
/** Test to see if @c previousMid has been set. */
@property(nonatomic, readwrite) BOOL hasPreviousMid;

/** interval start */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *prevMessageDate;
/** Test to see if @c prevMessageDate has been set. */
@property(nonatomic, readwrite) BOOL hasPrevMessageDate;

/** / counter clock of the unread messages */
@property(nonatomic, readwrite) int64_t unreadCounterClock;

/** / counter of the unread messages */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *counter;
/** Test to see if @c counter has been set. */
@property(nonatomic, readwrite) BOOL hasCounter;

/** / date of my own read */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *myReadDate;
/** Test to see if @c myReadDate has been set. */
@property(nonatomic, readwrite) BOOL hasMyReadDate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *randomId;

/** when greater than date, then message is edited */
@property(nonatomic, readwrite) int64_t modifiedAt;

/** make sense for edited message only (modified_at > date) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *prevEditInPeerAt;
/** Test to see if @c prevEditInPeerAt has been set. */
@property(nonatomic, readwrite) BOOL hasPrevEditInPeerAt;

@end

/**
 * Clears whatever value was set for the oneof 'attach'.
 **/
void UpdateMessage_ClearAttachOneOfCase(UpdateMessage *message);

#pragma mark - UpdateMessageContentChanged

typedef GPB_ENUM(UpdateMessageContentChanged_FieldNumber) {
  UpdateMessageContentChanged_FieldNumber_Peer = 1,
  UpdateMessageContentChanged_FieldNumber_Mid = 2,
  UpdateMessageContentChanged_FieldNumber_Message = 3,
  UpdateMessageContentChanged_FieldNumber_EditedAt = 4,
  UpdateMessageContentChanged_FieldNumber_PrevEditInPeerAt = 5,
  UpdateMessageContentChanged_FieldNumber_IsSilent = 6,
};

/**
 * Update about message change
 **/
GPB_FINAL @interface UpdateMessageContentChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@property(nonatomic, readwrite) int64_t editedAt;

@property(nonatomic, readwrite) int64_t prevEditInPeerAt;

/** Update on behalf of a system, should not be displayed as edited. */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isSilent;
/** Test to see if @c isSilent has been set. */
@property(nonatomic, readwrite) BOOL hasIsSilent;

@end

#pragma mark - UpdateMessageSent

typedef GPB_ENUM(UpdateMessageSent_FieldNumber) {
  UpdateMessageSent_FieldNumber_Peer = 1,
  UpdateMessageSent_FieldNumber_Rid = 2,
  UpdateMessageSent_FieldNumber_Date = 3,
  UpdateMessageSent_FieldNumber_Mid = 4,
  UpdateMessageSent_FieldNumber_PrevMid = 5,
  UpdateMessageSent_FieldNumber_UnreadCounterClock = 6,
  UpdateMessageSent_FieldNumber_UnreadCounter = 7,
  UpdateMessageSent_FieldNumber_MyReadDate = 8,
  UpdateMessageSent_FieldNumber_Reply = 10,
  UpdateMessageSent_FieldNumber_ForwardSource = 11,
};

typedef GPB_ENUM(UpdateMessageSent_Attach_OneOfCase) {
  UpdateMessageSent_Attach_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateMessageSent_Attach_OneOfCase_Reply = 10,
  UpdateMessageSent_Attach_OneOfCase_ForwardSource = 11,
};

/**
 * Update about message sent
 **/
GPB_FINAL @interface UpdateMessageSent : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rid;

@property(nonatomic, readwrite) int64_t date;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** / Previous message id in current conversation */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *prevMid;
/** Test to see if @c prevMid has been set. */
@property(nonatomic, readwrite) BOOL hasPrevMid;

/** / counter of unread messages */
@property(nonatomic, readwrite) int64_t unreadCounterClock;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *unreadCounter;
/** Test to see if @c unreadCounter has been set. */
@property(nonatomic, readwrite) BOOL hasUnreadCounter;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *myReadDate;
/** Test to see if @c myReadDate has been set. */
@property(nonatomic, readwrite) BOOL hasMyReadDate;

@property(nonatomic, readonly) UpdateMessageSent_Attach_OneOfCase attachOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *reply;

@property(nonatomic, readwrite, strong, null_resettable) ForwardSource *forwardSource;

@end

/**
 * Clears whatever value was set for the oneof 'attach'.
 **/
void UpdateMessageSent_ClearAttachOneOfCase(UpdateMessageSent *message);

#pragma mark - UpdateMessageReceived

typedef GPB_ENUM(UpdateMessageReceived_FieldNumber) {
  UpdateMessageReceived_FieldNumber_Peer = 1,
  UpdateMessageReceived_FieldNumber_StartDate = 2,
  UpdateMessageReceived_FieldNumber_ReceivedDate = 3,
};

/**
 * Update about message received
 **/
GPB_FINAL @interface UpdateMessageReceived : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / when message was receive */
@property(nonatomic, readwrite) int64_t startDate;

/** / deprecated */
@property(nonatomic, readwrite) int64_t receivedDate;

@end

#pragma mark - UpdateMessageRead

typedef GPB_ENUM(UpdateMessageRead_FieldNumber) {
  UpdateMessageRead_FieldNumber_Peer = 1,
  UpdateMessageRead_FieldNumber_StartDate = 2,
  UpdateMessageRead_FieldNumber_ReadDate = 3,
};

/**
 * Update about message read
 **/
GPB_FINAL @interface UpdateMessageRead : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / when message was read */
@property(nonatomic, readwrite) int64_t startDate;

/** / deprecated */
@property(nonatomic, readwrite) int64_t readDate;

@end

#pragma mark - UpdateMessageReadByMe

typedef GPB_ENUM(UpdateMessageReadByMe_FieldNumber) {
  UpdateMessageReadByMe_FieldNumber_Peer = 1,
  UpdateMessageReadByMe_FieldNumber_StartDate = 2,
  UpdateMessageReadByMe_FieldNumber_UnreadCounterClock = 3,
  UpdateMessageReadByMe_FieldNumber_UnreadCounter = 4,
};

/**
 * Update about message read by me
 **/
GPB_FINAL @interface UpdateMessageReadByMe : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / date of the read message */
@property(nonatomic, readwrite) int64_t startDate;

/** / when message was read */
@property(nonatomic, readwrite) int64_t unreadCounterClock;

/** / counter of unread messages */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *unreadCounter;
/** Test to see if @c unreadCounter has been set. */
@property(nonatomic, readwrite) BOOL hasUnreadCounter;

@end

#pragma mark - UpdateMessageDelete

typedef GPB_ENUM(UpdateMessageDelete_FieldNumber) {
  UpdateMessageDelete_FieldNumber_Peer = 1,
  UpdateMessageDelete_FieldNumber_MidsArray = 2,
  UpdateMessageDelete_FieldNumber_Counter = 3,
  UpdateMessageDelete_FieldNumber_ActionDate = 4,
};

/**
 * Update about message delete
 **/
GPB_FINAL @interface UpdateMessageDelete : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Deleted messages */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UUIDValue*> *midsArray;
/** The number of items in @c midsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger midsArray_Count;

/** / counter of unread messages */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *counter;
/** Test to see if @c counter has been set. */
@property(nonatomic, readwrite) BOOL hasCounter;

/** / date? related for this unread counter */
@property(nonatomic, readwrite) int64_t actionDate;

@end

#pragma mark - UpdateChatClear

typedef GPB_ENUM(UpdateChatClear_FieldNumber) {
  UpdateChatClear_FieldNumber_Peer = 1,
  UpdateChatClear_FieldNumber_ActionDate = 2,
};

/**
 * Update about chat clear
 **/
GPB_FINAL @interface UpdateChatClear : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t actionDate;

@end

#pragma mark - UpdateChatDelete

typedef GPB_ENUM(UpdateChatDelete_FieldNumber) {
  UpdateChatDelete_FieldNumber_Peer = 1,
  UpdateChatDelete_FieldNumber_ActionDate = 2,
};

/**
 * Update about chat delete
 **/
GPB_FINAL @interface UpdateChatDelete : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t actionDate;

@end

#pragma mark - UpdateChatArchive

typedef GPB_ENUM(UpdateChatArchive_FieldNumber) {
  UpdateChatArchive_FieldNumber_Peer = 1,
};

/**
 * Update about chat archive
 **/
GPB_FINAL @interface UpdateChatArchive : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - UpdateChatGroupsChanged

typedef GPB_ENUM(UpdateChatGroupsChanged_FieldNumber) {
  UpdateChatGroupsChanged_FieldNumber_DialogsArray = 1,
};

/**
 * Update about chat groups changed. Called only when adding, removing and reordering of grouped dialog.
 **/
GPB_FINAL @interface UpdateChatGroupsChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DialogGroup*> *dialogsArray;
/** The number of items in @c dialogsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dialogsArray_Count;

@end

#pragma mark - UpdateSendMessageError

typedef GPB_ENUM(UpdateSendMessageError_FieldNumber) {
  UpdateSendMessageError_FieldNumber_Peer = 1,
  UpdateSendMessageError_FieldNumber_Rid = 2,
  UpdateSendMessageError_FieldNumber_Date = 3,
  UpdateSendMessageError_FieldNumber_HookId = 4,
  UpdateSendMessageError_FieldNumber_Cause = 6,
};

/**
 * Update about rejection of message send request
 **/
GPB_FINAL @interface UpdateSendMessageError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rid;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateEditMessageError

typedef GPB_ENUM(UpdateEditMessageError_FieldNumber) {
  UpdateEditMessageError_FieldNumber_Peer = 1,
  UpdateEditMessageError_FieldNumber_Mid = 2,
  UpdateEditMessageError_FieldNumber_Date = 3,
  UpdateEditMessageError_FieldNumber_HookId = 4,
  UpdateEditMessageError_FieldNumber_Cause = 6,
};

/**
 * Update about rejection of message update request
 **/
GPB_FINAL @interface UpdateEditMessageError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** related message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateDeleteMessageError

typedef GPB_ENUM(UpdateDeleteMessageError_FieldNumber) {
  UpdateDeleteMessageError_FieldNumber_Peer = 1,
  UpdateDeleteMessageError_FieldNumber_Mid = 2,
  UpdateDeleteMessageError_FieldNumber_Date = 3,
  UpdateDeleteMessageError_FieldNumber_HookId = 4,
  UpdateDeleteMessageError_FieldNumber_Cause = 5,
};

GPB_FINAL @interface UpdateDeleteMessageError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** related message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateMessageReadError

typedef GPB_ENUM(UpdateMessageReadError_FieldNumber) {
  UpdateMessageReadError_FieldNumber_Peer = 1,
  UpdateMessageReadError_FieldNumber_Mid = 2,
  UpdateMessageReadError_FieldNumber_Date = 3,
  UpdateMessageReadError_FieldNumber_HookId = 4,
  UpdateMessageReadError_FieldNumber_Cause = 5,
};

GPB_FINAL @interface UpdateMessageReadError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** related message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateMessageReceivedError

typedef GPB_ENUM(UpdateMessageReceivedError_FieldNumber) {
  UpdateMessageReceivedError_FieldNumber_Peer = 1,
  UpdateMessageReceivedError_FieldNumber_Mid = 2,
  UpdateMessageReceivedError_FieldNumber_Date = 3,
  UpdateMessageReceivedError_FieldNumber_HookId = 4,
  UpdateMessageReceivedError_FieldNumber_Cause = 5,
};

GPB_FINAL @interface UpdateMessageReceivedError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** related message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateClearChatError

typedef GPB_ENUM(UpdateClearChatError_FieldNumber) {
  UpdateClearChatError_FieldNumber_Peer = 1,
  UpdateClearChatError_FieldNumber_Date = 2,
  UpdateClearChatError_FieldNumber_HookId = 3,
  UpdateClearChatError_FieldNumber_Cause = 4,
};

GPB_FINAL @interface UpdateClearChatError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateDeleteChatError

typedef GPB_ENUM(UpdateDeleteChatError_FieldNumber) {
  UpdateDeleteChatError_FieldNumber_Peer = 1,
  UpdateDeleteChatError_FieldNumber_Date = 2,
  UpdateDeleteChatError_FieldNumber_HookId = 3,
  UpdateDeleteChatError_FieldNumber_Cause = 4,
};

GPB_FINAL @interface UpdateDeleteChatError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateFavouriteDialogError

typedef GPB_ENUM(UpdateFavouriteDialogError_FieldNumber) {
  UpdateFavouriteDialogError_FieldNumber_Peer = 1,
  UpdateFavouriteDialogError_FieldNumber_Date = 2,
  UpdateFavouriteDialogError_FieldNumber_HookId = 3,
  UpdateFavouriteDialogError_FieldNumber_Cause = 4,
};

GPB_FINAL @interface UpdateFavouriteDialogError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateUnfavouriteDialogError

typedef GPB_ENUM(UpdateUnfavouriteDialogError_FieldNumber) {
  UpdateUnfavouriteDialogError_FieldNumber_Peer = 1,
  UpdateUnfavouriteDialogError_FieldNumber_Date = 2,
  UpdateUnfavouriteDialogError_FieldNumber_HookId = 3,
  UpdateUnfavouriteDialogError_FieldNumber_Cause = 4,
};

GPB_FINAL @interface UpdateUnfavouriteDialogError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateReadDialogLaterError

typedef GPB_ENUM(UpdateReadDialogLaterError_FieldNumber) {
  UpdateReadDialogLaterError_FieldNumber_Peer = 1,
  UpdateReadDialogLaterError_FieldNumber_Date = 2,
  UpdateReadDialogLaterError_FieldNumber_HookId = 3,
  UpdateReadDialogLaterError_FieldNumber_Cause = 4,
};

GPB_FINAL @interface UpdateReadDialogLaterError : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hookId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateErrorCause *cause;
/** Test to see if @c cause has been set. */
@property(nonatomic, readwrite) BOOL hasCause;

@end

#pragma mark - UpdateThreadCreated

typedef GPB_ENUM(UpdateThreadCreated_FieldNumber) {
  UpdateThreadCreated_FieldNumber_Peer = 1,
  UpdateThreadCreated_FieldNumber_StartMessage = 2,
};

/**
 * Update about new thread inside group
 **/
GPB_FINAL @interface UpdateThreadCreated : GPBMessage

/** peer representing thread */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** messageId from parent group where thread starts */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *startMessage;
/** Test to see if @c startMessage has been set. */
@property(nonatomic, readwrite) BOOL hasStartMessage;

@end

#pragma mark - UpdateThreadLifted

typedef GPB_ENUM(UpdateThreadLifted_FieldNumber) {
  UpdateThreadLifted_FieldNumber_Peer = 1,
};

/**
 * Update about thread converted to group
 **/
GPB_FINAL @interface UpdateThreadLifted : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - ReferencedMessages

typedef GPB_ENUM(ReferencedMessages_FieldNumber) {
  ReferencedMessages_FieldNumber_MidsArray = 1,
};

/**
 * mids Referenced message ids
 **/
GPB_FINAL @interface ReferencedMessages : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UUIDValue*> *midsArray;
/** The number of items in @c midsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger midsArray_Count;

@end

#pragma mark - ForwardSource

typedef GPB_ENUM(ForwardSource_FieldNumber) {
  ForwardSource_FieldNumber_HostPeer = 1,
  ForwardSource_FieldNumber_SenderPeer = 2,
  ForwardSource_FieldNumber_HostPeerName = 3,
  ForwardSource_FieldNumber_Mid = 4,
};

/**
 * pointer to source of forwarded message
 **/
GPB_FINAL @interface ForwardSource : GPBMessage

/** empty if viewer has no access to this peer */
@property(nonatomic, readwrite, strong, null_resettable) OutPeer *hostPeer;
/** Test to see if @c hostPeer has been set. */
@property(nonatomic, readwrite) BOOL hasHostPeer;

/** empty if viewer has no access to this peer */
@property(nonatomic, readwrite, strong, null_resettable) OutPeer *senderPeer;
/** Test to see if @c senderPeer has been set. */
@property(nonatomic, readwrite) BOOL hasSenderPeer;

/** used to avoid host_peer/sender_peer resolution */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostPeerName;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@end

#pragma mark - HistoryMessage

typedef GPB_ENUM(HistoryMessage_FieldNumber) {
  HistoryMessage_FieldNumber_SenderUserId = 1,
  HistoryMessage_FieldNumber_Mid = 4,
  HistoryMessage_FieldNumber_PrevMid = 5,
  HistoryMessage_FieldNumber_CreatedAt = 6,
  HistoryMessage_FieldNumber_Message = 7,
  HistoryMessage_FieldNumber_Attribute = 10,
  HistoryMessage_FieldNumber_Reply = 12,
  HistoryMessage_FieldNumber_EditedAt = 13,
  HistoryMessage_FieldNumber_RandomId = 14,
  HistoryMessage_FieldNumber_ForwardSource = 15,
  HistoryMessage_FieldNumber_ReactionsArray = 16,
  HistoryMessage_FieldNumber_Peer = 17,
};

typedef GPB_ENUM(HistoryMessage_Attach_OneOfCase) {
  HistoryMessage_Attach_OneOfCase_GPBUnsetOneOfCase = 0,
  HistoryMessage_Attach_OneOfCase_Reply = 12,
  HistoryMessage_Attach_OneOfCase_ForwardSource = 15,
};

/**
 * Message from history
 **/
GPB_FINAL @interface HistoryMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *senderUserId;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Message id generated by server */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *prevMid;
/** Test to see if @c prevMid has been set. */
@property(nonatomic, readwrite) BOOL hasPrevMid;

@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite, strong, null_resettable) MessageContent *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@property(nonatomic, readwrite, strong, null_resettable) MessageAttributes *attribute;
/** Test to see if @c attribute has been set. */
@property(nonatomic, readwrite) BOOL hasAttribute;

@property(nonatomic, readonly) HistoryMessage_Attach_OneOfCase attachOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ReferencedMessages *reply;

@property(nonatomic, readwrite, strong, null_resettable) ForwardSource *forwardSource;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *editedAt;
/** Test to see if @c editedAt has been set. */
@property(nonatomic, readwrite) BOOL hasEditedAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *randomId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Reaction*> *reactionsArray;
/** The number of items in @c reactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reactionsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'attach'.
 **/
void HistoryMessage_ClearAttachOneOfCase(HistoryMessage *message);

#pragma mark - RequestLoadMessageHistory

typedef GPB_ENUM(RequestLoadMessageHistory_FieldNumber) {
  RequestLoadMessageHistory_FieldNumber_Peer = 1,
  RequestLoadMessageHistory_FieldNumber_FromMid = 2,
  RequestLoadMessageHistory_FieldNumber_LoadMode = 3,
  RequestLoadMessageHistory_FieldNumber_Limit = 4,
};

/**
 * Loading history of chat
 **/
GPB_FINAL @interface RequestLoadMessageHistory : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *fromMid;
/** Test to see if @c fromMid has been set. */
@property(nonatomic, readwrite) BOOL hasFromMid;

/** / forward, backward or both */
@property(nonatomic, readwrite) ListLoadMode loadMode;

@property(nonatomic, readwrite) int32_t limit;

@end

/**
 * Fetches the raw value of a @c RequestLoadMessageHistory's @c loadMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestLoadMessageHistory_LoadMode_RawValue(RequestLoadMessageHistory *message);
/**
 * Sets the raw value of an @c RequestLoadMessageHistory's @c loadMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestLoadMessageHistory_LoadMode_RawValue(RequestLoadMessageHistory *message, int32_t value);

#pragma mark - ResponseLoadHistory

typedef GPB_ENUM(ResponseLoadHistory_FieldNumber) {
  ResponseLoadHistory_FieldNumber_HistoryArray = 1,
  ResponseLoadHistory_FieldNumber_UserPeersArray = 2,
  ResponseLoadHistory_FieldNumber_LastConversationMessageDate = 6,
  ResponseLoadHistory_FieldNumber_UnreadCount = 8,
};

GPB_FINAL @interface ResponseLoadHistory : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<HistoryMessage*> *historyArray;
/** The number of items in @c historyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger historyArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *userPeersArray;
/** The number of items in @c userPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userPeersArray_Count;

/** / counter of unread messages */
@property(nonatomic, readwrite) int32_t unreadCount;

/** / last conversation message date */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *lastConversationMessageDate;
/** Test to see if @c lastConversationMessageDate has been set. */
@property(nonatomic, readwrite) BOOL hasLastConversationMessageDate;

@end

#pragma mark - Dialog

typedef GPB_ENUM(Dialog_FieldNumber) {
  Dialog_FieldNumber_Peer = 1,
  Dialog_FieldNumber_UnreadCount = 2,
  Dialog_FieldNumber_ModifiedAt = 7,
  Dialog_FieldNumber_PinnedMessages = 12,
  Dialog_FieldNumber_HistoryMessage = 13,
  Dialog_FieldNumber_LastReceive = 14,
  Dialog_FieldNumber_LastRead = 15,
  Dialog_FieldNumber_LastReactionAt = 16,
  Dialog_FieldNumber_ReadLater = 17,
  Dialog_FieldNumber_IsMuted = 19,
  Dialog_FieldNumber_IsFavourite = 20,
};

/**
 * Conversation from history
 * peer
 * unreadCount
 * sortDate date of conversation for sorting
 * senderUid Sender of top message (may be zero)
 * isFavourite Is dialog favourite
 * rid Random ID of top message (may be zero)
 * mid Message id
 * date Date of top message (can't be zero)
 * message Content of message
 * firstUnreadDate Date of first unread message
 * attributes Optional top message attributes
 * pinnedMessages Optional pinned messages
 * historyMessage Optional last messages
 **/
GPB_FINAL @interface Dialog : GPBMessage

/** / Peer of conversation */
@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / counter of unread messages */
@property(nonatomic, readwrite) int32_t unreadCount;

/** / last dialog modification date */
@property(nonatomic, readwrite) int64_t modifiedAt;

@property(nonatomic, readwrite, strong, null_resettable) PinnedMessages *pinnedMessages;
/** Test to see if @c pinnedMessages has been set. */
@property(nonatomic, readwrite) BOOL hasPinnedMessages;

/** / last message in this dialog */
@property(nonatomic, readwrite, strong, null_resettable) HistoryMessage *historyMessage;
/** Test to see if @c historyMessage has been set. */
@property(nonatomic, readwrite) BOOL hasHistoryMessage;

@property(nonatomic, readwrite) int64_t lastReceive;

@property(nonatomic, readwrite) int64_t lastRead;

@property(nonatomic, readwrite) int64_t lastReactionAt;

@property(nonatomic, readwrite) BOOL readLater;

@property(nonatomic, readwrite) BOOL isMuted;

@property(nonatomic, readwrite) BOOL isFavourite;

@end

#pragma mark - RequestLoadDialogs

typedef GPB_ENUM(RequestLoadDialogs_FieldNumber) {
  RequestLoadDialogs_FieldNumber_FromDate = 1,
  RequestLoadDialogs_FieldNumber_Limit = 2,
  RequestLoadDialogs_FieldNumber_FiltersArray = 3,
  RequestLoadDialogs_FieldNumber_PeersToLoadArray = 4,
};

/**
 * Loading conversation history
 **/
GPB_FINAL @interface RequestLoadDialogs : GPBMessage

@property(nonatomic, readwrite) int64_t fromDate;

@property(nonatomic, readwrite) int32_t limit;

// |filtersArray| contains |DialogsFilter|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *filtersArray;
/** The number of items in @c filtersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger filtersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Peer*> *peersToLoadArray;
/** The number of items in @c peersToLoadArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger peersToLoadArray_Count;

@end

#pragma mark - ResponseLoadDialogs

typedef GPB_ENUM(ResponseLoadDialogs_FieldNumber) {
  ResponseLoadDialogs_FieldNumber_DialogsArray = 1,
  ResponseLoadDialogs_FieldNumber_UserPeersArray = 2,
  ResponseLoadDialogs_FieldNumber_GroupPeersArray = 3,
  ResponseLoadDialogs_FieldNumber_TotalDialogsCount = 4,
};

/**
 * / Contains dialogs and related peers and entities
 **/
GPB_FINAL @interface ResponseLoadDialogs : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Dialog*> *dialogsArray;
/** The number of items in @c dialogsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dialogsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *userPeersArray;
/** The number of items in @c userPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userPeersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupOutPeer*> *groupPeersArray;
/** The number of items in @c groupPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupPeersArray_Count;

@property(nonatomic, readwrite) int32_t totalDialogsCount;

@end

#pragma mark - RequestFavouriteDialog

typedef GPB_ENUM(RequestFavouriteDialog_FieldNumber) {
  RequestFavouriteDialog_FieldNumber_Peer = 1,
};

/**
 * Marking dialog as favourite
 **/
GPB_FINAL @interface RequestFavouriteDialog : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestUnfavouriteDialog

typedef GPB_ENUM(RequestUnfavouriteDialog_FieldNumber) {
  RequestUnfavouriteDialog_FieldNumber_Peer = 1,
};

/**
 * Making dialog as unfavourite
 **/
GPB_FINAL @interface RequestUnfavouriteDialog : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - UpdateDialogFavouriteChanged

typedef GPB_ENUM(UpdateDialogFavouriteChanged_FieldNumber) {
  UpdateDialogFavouriteChanged_FieldNumber_Peer = 1,
  UpdateDialogFavouriteChanged_FieldNumber_IsFavourite = 2,
};

/**
 * Update about dialog favourite changed
 **/
GPB_FINAL @interface UpdateDialogFavouriteChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isFavourite;
/** Test to see if @c isFavourite has been set. */
@property(nonatomic, readwrite) BOOL hasIsFavourite;

@end

#pragma mark - UpdateDialogMuteChanged

typedef GPB_ENUM(UpdateDialogMuteChanged_FieldNumber) {
  UpdateDialogMuteChanged_FieldNumber_Peer = 1,
  UpdateDialogMuteChanged_FieldNumber_IsMuted = 2,
};

GPB_FINAL @interface UpdateDialogMuteChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) BOOL isMuted;

@end

#pragma mark - PinnedMessages

typedef GPB_ENUM(PinnedMessages_FieldNumber) {
  PinnedMessages_FieldNumber_MidsArray = 1,
};

/**
 * Pinned messages
 **/
GPB_FINAL @interface PinnedMessages : GPBMessage

/** / Messages ids */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UUIDValue*> *midsArray;
/** The number of items in @c midsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger midsArray_Count;

@end

#pragma mark - RequestPinMessage

typedef GPB_ENUM(RequestPinMessage_FieldNumber) {
  RequestPinMessage_FieldNumber_Peer = 1,
  RequestPinMessage_FieldNumber_Mid = 2,
  RequestPinMessage_FieldNumber_LastPinDate = 3,
};

/**
 * Pin message in conversation
 **/
GPB_FINAL @interface RequestPinMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t lastPinDate;

@end

#pragma mark - RequestUnpinMessage

typedef GPB_ENUM(RequestUnpinMessage_FieldNumber) {
  RequestUnpinMessage_FieldNumber_Peer = 1,
  RequestUnpinMessage_FieldNumber_Mid = 2,
  RequestUnpinMessage_FieldNumber_LastPinDate = 3,
};

/**
 * Unpin message in conversation
 **/
GPB_FINAL @interface RequestUnpinMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int64_t lastPinDate;

@end

#pragma mark - UpdatePinnedMessagesChanged

typedef GPB_ENUM(UpdatePinnedMessagesChanged_FieldNumber) {
  UpdatePinnedMessagesChanged_FieldNumber_Peer = 1,
  UpdatePinnedMessagesChanged_FieldNumber_PinnedMessages = 2,
  UpdatePinnedMessagesChanged_FieldNumber_LastPinDate = 3,
};

/**
 * Update about pinned messages changed in conversation
 **/
GPB_FINAL @interface UpdatePinnedMessagesChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) PinnedMessages *pinnedMessages;
/** Test to see if @c pinnedMessages has been set. */
@property(nonatomic, readwrite) BOOL hasPinnedMessages;

@property(nonatomic, readwrite) int64_t lastPinDate;

@end

#pragma mark - MessageStatus

typedef GPB_ENUM(MessageStatus_FieldNumber) {
  MessageStatus_FieldNumber_Clock = 1,
  MessageStatus_FieldNumber_UserId = 2,
};

/**
 * The model describing when a user received or read a message
 **/
GPB_FINAL @interface MessageStatus : GPBMessage

/** time when message was read or received */
@property(nonatomic, readwrite) int64_t clock;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - RequestGetMessageReads

typedef GPB_ENUM(RequestGetMessageReads_FieldNumber) {
  RequestGetMessageReads_FieldNumber_Mid = 1,
  RequestGetMessageReads_FieldNumber_Limit = 2,
  RequestGetMessageReads_FieldNumber_TimestampFrom = 3,
  RequestGetMessageReads_FieldNumber_Peer = 4,
};

/**
 * Load message statuses for every user in conversation reads
 **/
GPB_FINAL @interface RequestGetMessageReads : GPBMessage

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** limit of selection */
@property(nonatomic, readwrite) int32_t limit;

/** time selection starts from */
@property(nonatomic, readwrite) int64_t timestampFrom;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestGetMessageReceives

typedef GPB_ENUM(RequestGetMessageReceives_FieldNumber) {
  RequestGetMessageReceives_FieldNumber_Mid = 1,
  RequestGetMessageReceives_FieldNumber_Limit = 2,
  RequestGetMessageReceives_FieldNumber_TimestampFrom = 3,
  RequestGetMessageReceives_FieldNumber_Peer = 4,
};

/**
 * Load message statuses for every user in conversation receives
 **/
GPB_FINAL @interface RequestGetMessageReceives : GPBMessage

/** / Message id */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** limit of selection */
@property(nonatomic, readwrite) int32_t limit;

/** time selection starts from */
@property(nonatomic, readwrite) int64_t timestampFrom;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - ResponseGetMessageReads

typedef GPB_ENUM(ResponseGetMessageReads_FieldNumber) {
  ResponseGetMessageReads_FieldNumber_StatusArray = 1,
  ResponseGetMessageReads_FieldNumber_TimestampTill = 2,
};

/**
 * Response with the list of message statuses reads
 **/
GPB_FINAL @interface ResponseGetMessageReads : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MessageStatus*> *statusArray;
/** The number of items in @c statusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger statusArray_Count;

/** max time of returned entries, or requested time if empty */
@property(nonatomic, readwrite) int64_t timestampTill;

@end

#pragma mark - ResponseGetMessageReceives

typedef GPB_ENUM(ResponseGetMessageReceives_FieldNumber) {
  ResponseGetMessageReceives_FieldNumber_StatusArray = 1,
  ResponseGetMessageReceives_FieldNumber_TimestampTill = 2,
};

/**
 * Response with the list of message statuses receives
 **/
GPB_FINAL @interface ResponseGetMessageReceives : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MessageStatus*> *statusArray;
/** The number of items in @c statusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger statusArray_Count;

/** max time of returned entries, or requested time if empty */
@property(nonatomic, readwrite) int64_t timestampTill;

@end

#pragma mark - RequestReadDialogLater

typedef GPB_ENUM(RequestReadDialogLater_FieldNumber) {
  RequestReadDialogLater_FieldNumber_Peer = 1,
  RequestReadDialogLater_FieldNumber_ReadLater = 2,
};

GPB_FINAL @interface RequestReadDialogLater : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) BOOL readLater;

@end

#pragma mark - UpdateDialogReadLaterChanged

typedef GPB_ENUM(UpdateDialogReadLaterChanged_FieldNumber) {
  UpdateDialogReadLaterChanged_FieldNumber_Peer = 1,
  UpdateDialogReadLaterChanged_FieldNumber_ReadLater = 2,
};

/**
 * Update about dialog read later changed
 **/
GPB_FINAL @interface UpdateDialogReadLaterChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) BOOL readLater;

@end

#pragma mark - RequestMuteChat

typedef GPB_ENUM(RequestMuteChat_FieldNumber) {
  RequestMuteChat_FieldNumber_Peer = 1,
  RequestMuteChat_FieldNumber_Duration = 2,
};

GPB_FINAL @interface RequestMuteChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) GPBDuration *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

@end

#pragma mark - RequestUnmuteChat

typedef GPB_ENUM(RequestUnmuteChat_FieldNumber) {
  RequestUnmuteChat_FieldNumber_Peer = 1,
};

GPB_FINAL @interface RequestUnmuteChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
