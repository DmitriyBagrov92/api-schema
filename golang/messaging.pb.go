// Code generated by protoc-gen-go.
// source: messaging.proto
// DO NOT EDIT!

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/gogo/protobuf/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InteractiveMediaStyle int32

const (
	InteractiveMediaStyle_INTERACTIVEMEDIASTYLE_UNKNOWN InteractiveMediaStyle = 0
	InteractiveMediaStyle_INTERACTIVEMEDIASTYLE_DEFAULT InteractiveMediaStyle = 1
	InteractiveMediaStyle_INTERACTIVEMEDIASTYLE_PRIMARY InteractiveMediaStyle = 2
	InteractiveMediaStyle_INTERACTIVEMEDIASTYLE_DANGER  InteractiveMediaStyle = 3
)

var InteractiveMediaStyle_name = map[int32]string{
	0: "INTERACTIVEMEDIASTYLE_UNKNOWN",
	1: "INTERACTIVEMEDIASTYLE_DEFAULT",
	2: "INTERACTIVEMEDIASTYLE_PRIMARY",
	3: "INTERACTIVEMEDIASTYLE_DANGER",
}
var InteractiveMediaStyle_value = map[string]int32{
	"INTERACTIVEMEDIASTYLE_UNKNOWN": 0,
	"INTERACTIVEMEDIASTYLE_DEFAULT": 1,
	"INTERACTIVEMEDIASTYLE_PRIMARY": 2,
	"INTERACTIVEMEDIASTYLE_DANGER":  3,
}

func (x InteractiveMediaStyle) String() string {
	return proto.EnumName(InteractiveMediaStyle_name, int32(x))
}
func (InteractiveMediaStyle) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

type MessageState int32

const (
	MessageState_MESSAGESTATE_UNKNOWN  MessageState = 0
	MessageState_MESSAGESTATE_SENT     MessageState = 1
	MessageState_MESSAGESTATE_RECEIVED MessageState = 2
	MessageState_MESSAGESTATE_READ     MessageState = 3
)

var MessageState_name = map[int32]string{
	0: "MESSAGESTATE_UNKNOWN",
	1: "MESSAGESTATE_SENT",
	2: "MESSAGESTATE_RECEIVED",
	3: "MESSAGESTATE_READ",
}
var MessageState_value = map[string]int32{
	"MESSAGESTATE_UNKNOWN":  0,
	"MESSAGESTATE_SENT":     1,
	"MESSAGESTATE_RECEIVED": 2,
	"MESSAGESTATE_READ":     3,
}

func (x MessageState) String() string {
	return proto.EnumName(MessageState_name, int32(x))
}
func (MessageState) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

type ListLoadMode int32

const (
	ListLoadMode_LISTLOADMODE_UNKNOWN  ListLoadMode = 0
	ListLoadMode_LISTLOADMODE_FORWARD  ListLoadMode = 1
	ListLoadMode_LISTLOADMODE_BACKWARD ListLoadMode = 2
	ListLoadMode_LISTLOADMODE_BOTH     ListLoadMode = 3
)

var ListLoadMode_name = map[int32]string{
	0: "LISTLOADMODE_UNKNOWN",
	1: "LISTLOADMODE_FORWARD",
	2: "LISTLOADMODE_BACKWARD",
	3: "LISTLOADMODE_BOTH",
}
var ListLoadMode_value = map[string]int32{
	"LISTLOADMODE_UNKNOWN":  0,
	"LISTLOADMODE_FORWARD":  1,
	"LISTLOADMODE_BACKWARD": 2,
	"LISTLOADMODE_BOTH":     3,
}

func (x ListLoadMode) String() string {
	return proto.EnumName(ListLoadMode_name, int32(x))
}
func (ListLoadMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

type DialogsFilter int32

const (
	DialogsFilter_DIALOGSFILTER_UNKNOWN           DialogsFilter = 0
	DialogsFilter_DIALOGSFILTER_EXCLUDEFAVOURITES DialogsFilter = 1
	DialogsFilter_DIALOGSFILTER_EXCLUDEARCHIVED   DialogsFilter = 2
)

var DialogsFilter_name = map[int32]string{
	0: "DIALOGSFILTER_UNKNOWN",
	1: "DIALOGSFILTER_EXCLUDEFAVOURITES",
	2: "DIALOGSFILTER_EXCLUDEARCHIVED",
}
var DialogsFilter_value = map[string]int32{
	"DIALOGSFILTER_UNKNOWN":           0,
	"DIALOGSFILTER_EXCLUDEFAVOURITES": 1,
	"DIALOGSFILTER_EXCLUDEARCHIVED":   2,
}

func (x DialogsFilter) String() string {
	return proto.EnumName(DialogsFilter_name, int32(x))
}
func (DialogsFilter) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

// Message Attributes
type MessageAttributes struct {
	// / Is mentioned. If set overrides built-in value.
	IsMentioned *google_protobuf.BoolValue `protobuf:"bytes,1,opt,name=is_mentioned,json=isMentioned" json:"is_mentioned,omitempty"`
	// / Is message highlighted. Default is false.
	IsHighlighted *google_protobuf.BoolValue `protobuf:"bytes,2,opt,name=is_highlighted,json=isHighlighted" json:"is_highlighted,omitempty"`
	// / Is notified. If set overrides built-in settings.
	IsNotified *google_protobuf.BoolValue `protobuf:"bytes,3,opt,name=is_notified,json=isNotified" json:"is_notified,omitempty"`
	// / If this message is only for you. Default is false
	IsOnlyForYou *google_protobuf.BoolValue `protobuf:"bytes,4,opt,name=is_only_for_you,json=isOnlyForYou" json:"is_only_for_you,omitempty"`
}

func (m *MessageAttributes) Reset()                    { *m = MessageAttributes{} }
func (m *MessageAttributes) String() string            { return proto.CompactTextString(m) }
func (*MessageAttributes) ProtoMessage()               {}
func (*MessageAttributes) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *MessageAttributes) GetIsMentioned() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsMentioned
	}
	return nil
}

func (m *MessageAttributes) GetIsHighlighted() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsHighlighted
	}
	return nil
}

func (m *MessageAttributes) GetIsNotified() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsNotified
	}
	return nil
}

func (m *MessageAttributes) GetIsOnlyForYou() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsOnlyForYou
	}
	return nil
}

// Quoted Message
// messageId
// publicGroupId
// senderUserId
// messageDate
// quotedMessageContent
type QuotedMessage struct {
	// / Message Id if present
	MessageId int64 `protobuf:"varint,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	// / Public Group id if present
	PublicGroupId int32 `protobuf:"varint,2,opt,name=public_group_id,json=publicGroupId" json:"public_group_id,omitempty"`
	SenderUserId  int32 `protobuf:"varint,3,opt,name=sender_user_id,json=senderUserId" json:"sender_user_id,omitempty"`
	MessageDate   int64 `protobuf:"varint,4,opt,name=message_date,json=messageDate" json:"message_date,omitempty"`
	// *
	// Optional Quoted Message Content.
	// Can be empty if messageId is present and message is in current peer.
	QuotedMessageContent *MessageContent `protobuf:"bytes,5,opt,name=quoted_message_content,json=quotedMessageContent" json:"quoted_message_content,omitempty"`
}

func (m *QuotedMessage) Reset()                    { *m = QuotedMessage{} }
func (m *QuotedMessage) String() string            { return proto.CompactTextString(m) }
func (*QuotedMessage) ProtoMessage()               {}
func (*QuotedMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *QuotedMessage) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *QuotedMessage) GetPublicGroupId() int32 {
	if m != nil {
		return m.PublicGroupId
	}
	return 0
}

func (m *QuotedMessage) GetSenderUserId() int32 {
	if m != nil {
		return m.SenderUserId
	}
	return 0
}

func (m *QuotedMessage) GetMessageDate() int64 {
	if m != nil {
		return m.MessageDate
	}
	return 0
}

func (m *QuotedMessage) GetQuotedMessageContent() *MessageContent {
	if m != nil {
		return m.QuotedMessageContent
	}
	return nil
}

// Message media
type MessageMedia struct {
	Webpage *WebpageMedia            `protobuf:"bytes,1,opt,name=webpage" json:"webpage,omitempty"`
	Image   *ImageMedia              `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Audio   *AudioMedia              `protobuf:"bytes,3,opt,name=audio" json:"audio,omitempty"`
	Actions []*InteractiveMediaGroup `protobuf:"bytes,6,rep,name=actions" json:"actions,omitempty"`
}

func (m *MessageMedia) Reset()                    { *m = MessageMedia{} }
func (m *MessageMedia) String() string            { return proto.CompactTextString(m) }
func (*MessageMedia) ProtoMessage()               {}
func (*MessageMedia) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *MessageMedia) GetWebpage() *WebpageMedia {
	if m != nil {
		return m.Webpage
	}
	return nil
}

func (m *MessageMedia) GetImage() *ImageMedia {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *MessageMedia) GetAudio() *AudioMedia {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *MessageMedia) GetActions() []*InteractiveMediaGroup {
	if m != nil {
		return m.Actions
	}
	return nil
}

// Webpage media
type WebpageMedia struct {
	Url         *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Title       *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Image       *ImageLocation               `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
}

func (m *WebpageMedia) Reset()                    { *m = WebpageMedia{} }
func (m *WebpageMedia) String() string            { return proto.CompactTextString(m) }
func (*WebpageMedia) ProtoMessage()               {}
func (*WebpageMedia) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *WebpageMedia) GetUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *WebpageMedia) GetTitle() *google_protobuf.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *WebpageMedia) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *WebpageMedia) GetImage() *ImageLocation {
	if m != nil {
		return m.Image
	}
	return nil
}

// Image media
// image image
type ImageMedia struct {
	Image *ImageLocation `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
}

func (m *ImageMedia) Reset()                    { *m = ImageMedia{} }
func (m *ImageMedia) String() string            { return proto.CompactTextString(m) }
func (*ImageMedia) ProtoMessage()               {}
func (*ImageMedia) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *ImageMedia) GetImage() *ImageLocation {
	if m != nil {
		return m.Image
	}
	return nil
}

// Audio media
type AudioMedia struct {
	Audio *AudioLocation `protobuf:"bytes,1,opt,name=audio" json:"audio,omitempty"`
}

func (m *AudioMedia) Reset()                    { *m = AudioMedia{} }
func (m *AudioMedia) String() string            { return proto.CompactTextString(m) }
func (*AudioMedia) ProtoMessage()               {}
func (*AudioMedia) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *AudioMedia) GetAudio() *AudioLocation {
	if m != nil {
		return m.Audio
	}
	return nil
}

// / Some interactive element inside a message
type InteractiveMediaWidget struct {
	// Types that are valid to be assigned to Body:
	//	*InteractiveMediaWidget_InteractiveMediaButton
	//	*InteractiveMediaWidget_InteractiveMediaSelect
	Body isInteractiveMediaWidget_Body `protobuf_oneof:"body"`
}

func (m *InteractiveMediaWidget) Reset()                    { *m = InteractiveMediaWidget{} }
func (m *InteractiveMediaWidget) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaWidget) ProtoMessage()               {}
func (*InteractiveMediaWidget) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

type isInteractiveMediaWidget_Body interface {
	isInteractiveMediaWidget_Body()
}

type InteractiveMediaWidget_InteractiveMediaButton struct {
	InteractiveMediaButton *InteractiveMediaButton `protobuf:"bytes,1,opt,name=interactiveMediaButton,oneof"`
}
type InteractiveMediaWidget_InteractiveMediaSelect struct {
	InteractiveMediaSelect *InteractiveMediaSelect `protobuf:"bytes,2,opt,name=interactiveMediaSelect,oneof"`
}

func (*InteractiveMediaWidget_InteractiveMediaButton) isInteractiveMediaWidget_Body() {}
func (*InteractiveMediaWidget_InteractiveMediaSelect) isInteractiveMediaWidget_Body() {}

func (m *InteractiveMediaWidget) GetBody() isInteractiveMediaWidget_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *InteractiveMediaWidget) GetInteractiveMediaButton() *InteractiveMediaButton {
	if x, ok := m.GetBody().(*InteractiveMediaWidget_InteractiveMediaButton); ok {
		return x.InteractiveMediaButton
	}
	return nil
}

func (m *InteractiveMediaWidget) GetInteractiveMediaSelect() *InteractiveMediaSelect {
	if x, ok := m.GetBody().(*InteractiveMediaWidget_InteractiveMediaSelect); ok {
		return x.InteractiveMediaSelect
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*InteractiveMediaWidget) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _InteractiveMediaWidget_OneofMarshaler, _InteractiveMediaWidget_OneofUnmarshaler, _InteractiveMediaWidget_OneofSizer, []interface{}{
		(*InteractiveMediaWidget_InteractiveMediaButton)(nil),
		(*InteractiveMediaWidget_InteractiveMediaSelect)(nil),
	}
}

func _InteractiveMediaWidget_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*InteractiveMediaWidget)
	// body
	switch x := m.Body.(type) {
	case *InteractiveMediaWidget_InteractiveMediaButton:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InteractiveMediaButton); err != nil {
			return err
		}
	case *InteractiveMediaWidget_InteractiveMediaSelect:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InteractiveMediaSelect); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("InteractiveMediaWidget.Body has unexpected type %T", x)
	}
	return nil
}

func _InteractiveMediaWidget_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*InteractiveMediaWidget)
	switch tag {
	case 1: // body.interactiveMediaButton
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InteractiveMediaButton)
		err := b.DecodeMessage(msg)
		m.Body = &InteractiveMediaWidget_InteractiveMediaButton{msg}
		return true, err
	case 2: // body.interactiveMediaSelect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InteractiveMediaSelect)
		err := b.DecodeMessage(msg)
		m.Body = &InteractiveMediaWidget_InteractiveMediaSelect{msg}
		return true, err
	default:
		return false, nil
	}
}

func _InteractiveMediaWidget_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*InteractiveMediaWidget)
	// body
	switch x := m.Body.(type) {
	case *InteractiveMediaWidget_InteractiveMediaButton:
		s := proto.Size(x.InteractiveMediaButton)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InteractiveMediaWidget_InteractiveMediaSelect:
		s := proto.Size(x.InteractiveMediaSelect)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A 'Button' widget
type InteractiveMediaButton struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	// / A user-visible description of this button
	Label *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *InteractiveMediaButton) Reset()                    { *m = InteractiveMediaButton{} }
func (m *InteractiveMediaButton) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaButton) ProtoMessage()               {}
func (*InteractiveMediaButton) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *InteractiveMediaButton) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InteractiveMediaButton) GetLabel() *google_protobuf.StringValue {
	if m != nil {
		return m.Label
	}
	return nil
}

// A select from multiple values widget
type InteractiveMediaSelect struct {
	// / list of values to present to user
	Options []*InteractiveMediaSelectOption `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	// / A user-visible descripton of this select
	Label *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	// / A value that will be selected by default
	DefaultValue *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
}

func (m *InteractiveMediaSelect) Reset()                    { *m = InteractiveMediaSelect{} }
func (m *InteractiveMediaSelect) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaSelect) ProtoMessage()               {}
func (*InteractiveMediaSelect) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *InteractiveMediaSelect) GetOptions() []*InteractiveMediaSelectOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *InteractiveMediaSelect) GetLabel() *google_protobuf.StringValue {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *InteractiveMediaSelect) GetDefaultValue() *google_protobuf.StringValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

// A row in the select widget
type InteractiveMediaSelectOption struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *InteractiveMediaSelectOption) Reset()                    { *m = InteractiveMediaSelectOption{} }
func (m *InteractiveMediaSelectOption) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaSelectOption) ProtoMessage()               {}
func (*InteractiveMediaSelectOption) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *InteractiveMediaSelectOption) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InteractiveMediaSelectOption) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// A text message extension representing an interactive action.
// Can be used to add widgets (such as buttons, selects, etc) to messages.
type InteractiveMedia struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// / a widget to be shown to user
	Widget *InteractiveMediaWidget `protobuf:"bytes,2,opt,name=widget" json:"widget,omitempty"`
	// / a style of the widget, which is interpreted by the client
	Style InteractiveMediaStyle `protobuf:"varint,3,opt,name=style,enum=dialog.InteractiveMediaStyle" json:"style,omitempty"`
	// *
	// A content of the alert dialog that will be show to user
	// when they perform the media action
	Confirm *InteractiveMediaConfirm `protobuf:"bytes,4,opt,name=confirm" json:"confirm,omitempty"`
}

func (m *InteractiveMedia) Reset()                    { *m = InteractiveMedia{} }
func (m *InteractiveMedia) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMedia) ProtoMessage()               {}
func (*InteractiveMedia) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *InteractiveMedia) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InteractiveMedia) GetWidget() *InteractiveMediaWidget {
	if m != nil {
		return m.Widget
	}
	return nil
}

func (m *InteractiveMedia) GetStyle() InteractiveMediaStyle {
	if m != nil {
		return m.Style
	}
	return InteractiveMediaStyle_INTERACTIVEMEDIASTYLE_UNKNOWN
}

func (m *InteractiveMedia) GetConfirm() *InteractiveMediaConfirm {
	if m != nil {
		return m.Confirm
	}
	return nil
}

type InteractiveMediaTranslation struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InteractiveMediaTranslation) Reset()                    { *m = InteractiveMediaTranslation{} }
func (m *InteractiveMediaTranslation) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaTranslation) ProtoMessage()               {}
func (*InteractiveMediaTranslation) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *InteractiveMediaTranslation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InteractiveMediaTranslation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InteractiveMediaTranslationGroup struct {
	// / a translation group language
	Language string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	// / a list of translation mesages
	Messages []*InteractiveMediaTranslation `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
}

func (m *InteractiveMediaTranslationGroup) Reset()         { *m = InteractiveMediaTranslationGroup{} }
func (m *InteractiveMediaTranslationGroup) String() string { return proto.CompactTextString(m) }
func (*InteractiveMediaTranslationGroup) ProtoMessage()    {}
func (*InteractiveMediaTranslationGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{12}
}

func (m *InteractiveMediaTranslationGroup) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *InteractiveMediaTranslationGroup) GetMessages() []*InteractiveMediaTranslation {
	if m != nil {
		return m.Messages
	}
	return nil
}

// A group of interactive media actions
type InteractiveMediaGroup struct {
	// / the list of actions
	Actions []*InteractiveMedia `protobuf:"bytes,1,rep,name=actions" json:"actions,omitempty"`
	// / an optional title of the group
	Title *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// / an optional description of the group
	Description *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// / a media content translations
	Translations []*InteractiveMediaTranslationGroup `protobuf:"bytes,4,rep,name=translations" json:"translations,omitempty"`
}

func (m *InteractiveMediaGroup) Reset()                    { *m = InteractiveMediaGroup{} }
func (m *InteractiveMediaGroup) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaGroup) ProtoMessage()               {}
func (*InteractiveMediaGroup) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *InteractiveMediaGroup) GetActions() []*InteractiveMedia {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *InteractiveMediaGroup) GetTitle() *google_protobuf.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *InteractiveMediaGroup) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *InteractiveMediaGroup) GetTranslations() []*InteractiveMediaTranslationGroup {
	if m != nil {
		return m.Translations
	}
	return nil
}

// An alert dialog content to show to user
type InteractiveMediaConfirm struct {
	// / the optional alert dialog prompt
	Text *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// / the optional alert dialog title
	Title *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// / the optional confirm button text
	Ok *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=ok" json:"ok,omitempty"`
	// / the optional cancel button text
	Dismiss *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=dismiss" json:"dismiss,omitempty"`
}

func (m *InteractiveMediaConfirm) Reset()                    { *m = InteractiveMediaConfirm{} }
func (m *InteractiveMediaConfirm) String() string            { return proto.CompactTextString(m) }
func (*InteractiveMediaConfirm) ProtoMessage()               {}
func (*InteractiveMediaConfirm) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14} }

func (m *InteractiveMediaConfirm) GetText() *google_protobuf.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *InteractiveMediaConfirm) GetTitle() *google_protobuf.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *InteractiveMediaConfirm) GetOk() *google_protobuf.StringValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

func (m *InteractiveMediaConfirm) GetDismiss() *google_protobuf.StringValue {
	if m != nil {
		return m.Dismiss
	}
	return nil
}

// The update which will be received when the action is performed. Duplicated on all clients.
type UpdateInteractiveMediaEvent struct {
	// / Message id of the message that contains interactive media
	Mid *UUIDValue `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	// / identifier of the media action
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// / selected value of that action
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	// / who interacted with that media
	Uid int32 `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
}

func (m *UpdateInteractiveMediaEvent) Reset()                    { *m = UpdateInteractiveMediaEvent{} }
func (m *UpdateInteractiveMediaEvent) String() string            { return proto.CompactTextString(m) }
func (*UpdateInteractiveMediaEvent) ProtoMessage()               {}
func (*UpdateInteractiveMediaEvent) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{15} }

func (m *UpdateInteractiveMediaEvent) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateInteractiveMediaEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateInteractiveMediaEvent) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *UpdateInteractiveMediaEvent) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// Sends a request to do interactive media message
type RequestDoInteractiveMediaAction struct {
	// / Message id of the enclosed message
	Mid   *UUIDValue `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	Id    string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Value string     `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *RequestDoInteractiveMediaAction) Reset()         { *m = RequestDoInteractiveMediaAction{} }
func (m *RequestDoInteractiveMediaAction) String() string { return proto.CompactTextString(m) }
func (*RequestDoInteractiveMediaAction) ProtoMessage()    {}
func (*RequestDoInteractiveMediaAction) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{16}
}

func (m *RequestDoInteractiveMediaAction) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestDoInteractiveMediaAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestDoInteractiveMediaAction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MessageContent struct {
	// Types that are valid to be assigned to Body:
	//	*MessageContent_TextMessage
	//	*MessageContent_ServiceMessage
	//	*MessageContent_DocumentMessage
	//	*MessageContent_JsonMessage
	//	*MessageContent_UnsupportedMessage
	//	*MessageContent_StickerMessage
	//	*MessageContent_BinaryMessage
	//	*MessageContent_EmptyMessage
	//	*MessageContent_DeletedMessage
	Body isMessageContent_Body `protobuf_oneof:"body"`
}

func (m *MessageContent) Reset()                    { *m = MessageContent{} }
func (m *MessageContent) String() string            { return proto.CompactTextString(m) }
func (*MessageContent) ProtoMessage()               {}
func (*MessageContent) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{17} }

type isMessageContent_Body interface {
	isMessageContent_Body()
}

type MessageContent_TextMessage struct {
	TextMessage *TextMessage `protobuf:"bytes,1,opt,name=textMessage,oneof"`
}
type MessageContent_ServiceMessage struct {
	ServiceMessage *ServiceMessage `protobuf:"bytes,2,opt,name=serviceMessage,oneof"`
}
type MessageContent_DocumentMessage struct {
	DocumentMessage *DocumentMessage `protobuf:"bytes,3,opt,name=documentMessage,oneof"`
}
type MessageContent_JsonMessage struct {
	JsonMessage *JsonMessage `protobuf:"bytes,4,opt,name=jsonMessage,oneof"`
}
type MessageContent_UnsupportedMessage struct {
	UnsupportedMessage *UnsupportedMessage `protobuf:"bytes,5,opt,name=unsupportedMessage,oneof"`
}
type MessageContent_StickerMessage struct {
	StickerMessage *StickerMessage `protobuf:"bytes,6,opt,name=stickerMessage,oneof"`
}
type MessageContent_BinaryMessage struct {
	BinaryMessage *BinaryMessage `protobuf:"bytes,7,opt,name=binaryMessage,oneof"`
}
type MessageContent_EmptyMessage struct {
	EmptyMessage *EmptyMessage `protobuf:"bytes,8,opt,name=emptyMessage,oneof"`
}
type MessageContent_DeletedMessage struct {
	DeletedMessage *DeletedMessage `protobuf:"bytes,9,opt,name=deletedMessage,oneof"`
}

func (*MessageContent_TextMessage) isMessageContent_Body()        {}
func (*MessageContent_ServiceMessage) isMessageContent_Body()     {}
func (*MessageContent_DocumentMessage) isMessageContent_Body()    {}
func (*MessageContent_JsonMessage) isMessageContent_Body()        {}
func (*MessageContent_UnsupportedMessage) isMessageContent_Body() {}
func (*MessageContent_StickerMessage) isMessageContent_Body()     {}
func (*MessageContent_BinaryMessage) isMessageContent_Body()      {}
func (*MessageContent_EmptyMessage) isMessageContent_Body()       {}
func (*MessageContent_DeletedMessage) isMessageContent_Body()     {}

func (m *MessageContent) GetBody() isMessageContent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *MessageContent) GetTextMessage() *TextMessage {
	if x, ok := m.GetBody().(*MessageContent_TextMessage); ok {
		return x.TextMessage
	}
	return nil
}

func (m *MessageContent) GetServiceMessage() *ServiceMessage {
	if x, ok := m.GetBody().(*MessageContent_ServiceMessage); ok {
		return x.ServiceMessage
	}
	return nil
}

func (m *MessageContent) GetDocumentMessage() *DocumentMessage {
	if x, ok := m.GetBody().(*MessageContent_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (m *MessageContent) GetJsonMessage() *JsonMessage {
	if x, ok := m.GetBody().(*MessageContent_JsonMessage); ok {
		return x.JsonMessage
	}
	return nil
}

func (m *MessageContent) GetUnsupportedMessage() *UnsupportedMessage {
	if x, ok := m.GetBody().(*MessageContent_UnsupportedMessage); ok {
		return x.UnsupportedMessage
	}
	return nil
}

func (m *MessageContent) GetStickerMessage() *StickerMessage {
	if x, ok := m.GetBody().(*MessageContent_StickerMessage); ok {
		return x.StickerMessage
	}
	return nil
}

func (m *MessageContent) GetBinaryMessage() *BinaryMessage {
	if x, ok := m.GetBody().(*MessageContent_BinaryMessage); ok {
		return x.BinaryMessage
	}
	return nil
}

func (m *MessageContent) GetEmptyMessage() *EmptyMessage {
	if x, ok := m.GetBody().(*MessageContent_EmptyMessage); ok {
		return x.EmptyMessage
	}
	return nil
}

func (m *MessageContent) GetDeletedMessage() *DeletedMessage {
	if x, ok := m.GetBody().(*MessageContent_DeletedMessage); ok {
		return x.DeletedMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MessageContent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MessageContent_OneofMarshaler, _MessageContent_OneofUnmarshaler, _MessageContent_OneofSizer, []interface{}{
		(*MessageContent_TextMessage)(nil),
		(*MessageContent_ServiceMessage)(nil),
		(*MessageContent_DocumentMessage)(nil),
		(*MessageContent_JsonMessage)(nil),
		(*MessageContent_UnsupportedMessage)(nil),
		(*MessageContent_StickerMessage)(nil),
		(*MessageContent_BinaryMessage)(nil),
		(*MessageContent_EmptyMessage)(nil),
		(*MessageContent_DeletedMessage)(nil),
	}
}

func _MessageContent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MessageContent)
	// body
	switch x := m.Body.(type) {
	case *MessageContent_TextMessage:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TextMessage); err != nil {
			return err
		}
	case *MessageContent_ServiceMessage:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServiceMessage); err != nil {
			return err
		}
	case *MessageContent_DocumentMessage:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DocumentMessage); err != nil {
			return err
		}
	case *MessageContent_JsonMessage:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JsonMessage); err != nil {
			return err
		}
	case *MessageContent_UnsupportedMessage:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsupportedMessage); err != nil {
			return err
		}
	case *MessageContent_StickerMessage:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StickerMessage); err != nil {
			return err
		}
	case *MessageContent_BinaryMessage:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BinaryMessage); err != nil {
			return err
		}
	case *MessageContent_EmptyMessage:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmptyMessage); err != nil {
			return err
		}
	case *MessageContent_DeletedMessage:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeletedMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MessageContent.Body has unexpected type %T", x)
	}
	return nil
}

func _MessageContent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MessageContent)
	switch tag {
	case 1: // body.textMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TextMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_TextMessage{msg}
		return true, err
	case 2: // body.serviceMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_ServiceMessage{msg}
		return true, err
	case 3: // body.documentMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_DocumentMessage{msg}
		return true, err
	case 4: // body.jsonMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JsonMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_JsonMessage{msg}
		return true, err
	case 5: // body.unsupportedMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsupportedMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_UnsupportedMessage{msg}
		return true, err
	case 6: // body.stickerMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StickerMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_StickerMessage{msg}
		return true, err
	case 7: // body.binaryMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BinaryMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_BinaryMessage{msg}
		return true, err
	case 8: // body.emptyMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EmptyMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_EmptyMessage{msg}
		return true, err
	case 9: // body.deletedMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeletedMessage)
		err := b.DecodeMessage(msg)
		m.Body = &MessageContent_DeletedMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MessageContent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MessageContent)
	// body
	switch x := m.Body.(type) {
	case *MessageContent_TextMessage:
		s := proto.Size(x.TextMessage)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_ServiceMessage:
		s := proto.Size(x.ServiceMessage)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_DocumentMessage:
		s := proto.Size(x.DocumentMessage)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_JsonMessage:
		s := proto.Size(x.JsonMessage)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_UnsupportedMessage:
		s := proto.Size(x.UnsupportedMessage)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_StickerMessage:
		s := proto.Size(x.StickerMessage)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_BinaryMessage:
		s := proto.Size(x.BinaryMessage)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_EmptyMessage:
		s := proto.Size(x.EmptyMessage)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageContent_DeletedMessage:
		s := proto.Size(x.DeletedMessage)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Text message
type TextMessage struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// / User mentions in message
	Mentions []int32 `protobuf:"varint,2,rep,packed,name=mentions" json:"mentions,omitempty"`
	// / Optional bytes of extension
	Ext        *TextMessageEx  `protobuf:"bytes,3,opt,name=ext" json:"ext,omitempty"`
	Media      []*MessageMedia `protobuf:"bytes,4,rep,name=media" json:"media,omitempty"`
	Extensions []*Any          `protobuf:"bytes,5,rep,name=extensions" json:"extensions,omitempty"`
}

func (m *TextMessage) Reset()                    { *m = TextMessage{} }
func (m *TextMessage) String() string            { return proto.CompactTextString(m) }
func (*TextMessage) ProtoMessage()               {}
func (*TextMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{18} }

func (m *TextMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *TextMessage) GetMentions() []int32 {
	if m != nil {
		return m.Mentions
	}
	return nil
}

func (m *TextMessage) GetExt() *TextMessageEx {
	if m != nil {
		return m.Ext
	}
	return nil
}

func (m *TextMessage) GetMedia() []*MessageMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TextMessage) GetExtensions() []*Any {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type TextMessageEx struct {
	// Types that are valid to be assigned to Body:
	//	*TextMessageEx_TextExMarkdown
	//	*TextMessageEx_TextModernMessage
	//	*TextMessageEx_TextCommand
	Body isTextMessageEx_Body `protobuf_oneof:"body"`
}

func (m *TextMessageEx) Reset()                    { *m = TextMessageEx{} }
func (m *TextMessageEx) String() string            { return proto.CompactTextString(m) }
func (*TextMessageEx) ProtoMessage()               {}
func (*TextMessageEx) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{19} }

type isTextMessageEx_Body interface {
	isTextMessageEx_Body()
}

type TextMessageEx_TextExMarkdown struct {
	TextExMarkdown *TextExMarkdown `protobuf:"bytes,1,opt,name=textExMarkdown,oneof"`
}
type TextMessageEx_TextModernMessage struct {
	TextModernMessage *TextModernMessage `protobuf:"bytes,2,opt,name=textModernMessage,oneof"`
}
type TextMessageEx_TextCommand struct {
	TextCommand *TextCommand `protobuf:"bytes,3,opt,name=textCommand,oneof"`
}

func (*TextMessageEx_TextExMarkdown) isTextMessageEx_Body()    {}
func (*TextMessageEx_TextModernMessage) isTextMessageEx_Body() {}
func (*TextMessageEx_TextCommand) isTextMessageEx_Body()       {}

func (m *TextMessageEx) GetBody() isTextMessageEx_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *TextMessageEx) GetTextExMarkdown() *TextExMarkdown {
	if x, ok := m.GetBody().(*TextMessageEx_TextExMarkdown); ok {
		return x.TextExMarkdown
	}
	return nil
}

func (m *TextMessageEx) GetTextModernMessage() *TextModernMessage {
	if x, ok := m.GetBody().(*TextMessageEx_TextModernMessage); ok {
		return x.TextModernMessage
	}
	return nil
}

func (m *TextMessageEx) GetTextCommand() *TextCommand {
	if x, ok := m.GetBody().(*TextMessageEx_TextCommand); ok {
		return x.TextCommand
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TextMessageEx) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TextMessageEx_OneofMarshaler, _TextMessageEx_OneofUnmarshaler, _TextMessageEx_OneofSizer, []interface{}{
		(*TextMessageEx_TextExMarkdown)(nil),
		(*TextMessageEx_TextModernMessage)(nil),
		(*TextMessageEx_TextCommand)(nil),
	}
}

func _TextMessageEx_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TextMessageEx)
	// body
	switch x := m.Body.(type) {
	case *TextMessageEx_TextExMarkdown:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TextExMarkdown); err != nil {
			return err
		}
	case *TextMessageEx_TextModernMessage:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TextModernMessage); err != nil {
			return err
		}
	case *TextMessageEx_TextCommand:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TextCommand); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TextMessageEx.Body has unexpected type %T", x)
	}
	return nil
}

func _TextMessageEx_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TextMessageEx)
	switch tag {
	case 1: // body.textExMarkdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TextExMarkdown)
		err := b.DecodeMessage(msg)
		m.Body = &TextMessageEx_TextExMarkdown{msg}
		return true, err
	case 2: // body.textModernMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TextModernMessage)
		err := b.DecodeMessage(msg)
		m.Body = &TextMessageEx_TextModernMessage{msg}
		return true, err
	case 3: // body.textCommand
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TextCommand)
		err := b.DecodeMessage(msg)
		m.Body = &TextMessageEx_TextCommand{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TextMessageEx_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TextMessageEx)
	// body
	switch x := m.Body.(type) {
	case *TextMessageEx_TextExMarkdown:
		s := proto.Size(x.TextExMarkdown)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TextMessageEx_TextModernMessage:
		s := proto.Size(x.TextModernMessage)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TextMessageEx_TextCommand:
		s := proto.Size(x.TextCommand)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Markdown extension
type TextExMarkdown struct {
	Markdown string `protobuf:"bytes,2,opt,name=markdown" json:"markdown,omitempty"`
}

func (m *TextExMarkdown) Reset()                    { *m = TextExMarkdown{} }
func (m *TextExMarkdown) String() string            { return proto.CompactTextString(m) }
func (*TextExMarkdown) ProtoMessage()               {}
func (*TextExMarkdown) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{20} }

func (m *TextExMarkdown) GetMarkdown() string {
	if m != nil {
		return m.Markdown
	}
	return ""
}

// Modern text message
type TextModernMessage struct {
	Text                *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	SenderNameOverride  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=sender_name_override,json=senderNameOverride" json:"sender_name_override,omitempty"`
	SenderPhotoOverride *Avatar                      `protobuf:"bytes,3,opt,name=sender_photo_override,json=senderPhotoOverride" json:"sender_photo_override,omitempty"`
	Style               *ParagraphStyle              `protobuf:"bytes,4,opt,name=style" json:"style,omitempty"`
	Attaches            []*TextModernAttach          `protobuf:"bytes,5,rep,name=attaches" json:"attaches,omitempty"`
}

func (m *TextModernMessage) Reset()                    { *m = TextModernMessage{} }
func (m *TextModernMessage) String() string            { return proto.CompactTextString(m) }
func (*TextModernMessage) ProtoMessage()               {}
func (*TextModernMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{21} }

func (m *TextModernMessage) GetText() *google_protobuf.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TextModernMessage) GetSenderNameOverride() *google_protobuf.StringValue {
	if m != nil {
		return m.SenderNameOverride
	}
	return nil
}

func (m *TextModernMessage) GetSenderPhotoOverride() *Avatar {
	if m != nil {
		return m.SenderPhotoOverride
	}
	return nil
}

func (m *TextModernMessage) GetStyle() *ParagraphStyle {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *TextModernMessage) GetAttaches() []*TextModernAttach {
	if m != nil {
		return m.Attaches
	}
	return nil
}

// Paragraph style
type ParagraphStyle struct {
	// / Show quote-like paragraph?
	ShowParagraph *google_protobuf.BoolValue `protobuf:"bytes,1,opt,name=show_paragraph,json=showParagraph" json:"show_paragraph,omitempty"`
	// / Override paragraph color
	ParagraphColor *Color `protobuf:"bytes,2,opt,name=paragraph_color,json=paragraphColor" json:"paragraph_color,omitempty"`
	// / Override background color
	BgColor *Color `protobuf:"bytes,3,opt,name=bg_color,json=bgColor" json:"bg_color,omitempty"`
}

func (m *ParagraphStyle) Reset()                    { *m = ParagraphStyle{} }
func (m *ParagraphStyle) String() string            { return proto.CompactTextString(m) }
func (*ParagraphStyle) ProtoMessage()               {}
func (*ParagraphStyle) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{22} }

func (m *ParagraphStyle) GetShowParagraph() *google_protobuf.BoolValue {
	if m != nil {
		return m.ShowParagraph
	}
	return nil
}

func (m *ParagraphStyle) GetParagraphColor() *Color {
	if m != nil {
		return m.ParagraphColor
	}
	return nil
}

func (m *ParagraphStyle) GetBgColor() *Color {
	if m != nil {
		return m.BgColor
	}
	return nil
}

// Attaches to message
type TextModernAttach struct {
	Title     *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	TitleUrl  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=title_url,json=titleUrl" json:"title_url,omitempty"`
	TitleIcon *ImageLocation               `protobuf:"bytes,3,opt,name=title_icon,json=titleIcon" json:"title_icon,omitempty"`
	Text      *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Style     *ParagraphStyle              `protobuf:"bytes,5,opt,name=style" json:"style,omitempty"`
	Fields    []*TextModernField           `protobuf:"bytes,6,rep,name=fields" json:"fields,omitempty"`
}

func (m *TextModernAttach) Reset()                    { *m = TextModernAttach{} }
func (m *TextModernAttach) String() string            { return proto.CompactTextString(m) }
func (*TextModernAttach) ProtoMessage()               {}
func (*TextModernAttach) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{23} }

func (m *TextModernAttach) GetTitle() *google_protobuf.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TextModernAttach) GetTitleUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.TitleUrl
	}
	return nil
}

func (m *TextModernAttach) GetTitleIcon() *ImageLocation {
	if m != nil {
		return m.TitleIcon
	}
	return nil
}

func (m *TextModernAttach) GetText() *google_protobuf.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TextModernAttach) GetStyle() *ParagraphStyle {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *TextModernAttach) GetFields() []*TextModernField {
	if m != nil {
		return m.Fields
	}
	return nil
}

// Modern message fields
type TextModernField struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// / Is field can be shown in compact way (default is TRUE)
	IsShort *google_protobuf.BoolValue `protobuf:"bytes,3,opt,name=is_short,json=isShort" json:"is_short,omitempty"`
}

func (m *TextModernField) Reset()                    { *m = TextModernField{} }
func (m *TextModernField) String() string            { return proto.CompactTextString(m) }
func (*TextModernField) ProtoMessage()               {}
func (*TextModernField) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{24} }

func (m *TextModernField) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TextModernField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TextModernField) GetIsShort() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsShort
	}
	return nil
}

// Text Command Message for bots
type TextCommand struct {
	// / Slash-Command For execution
	Command string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	Args    string `protobuf:"bytes,2,opt,name=args" json:"args,omitempty"`
}

func (m *TextCommand) Reset()                    { *m = TextCommand{} }
func (m *TextCommand) String() string            { return proto.CompactTextString(m) }
func (*TextCommand) ProtoMessage()               {}
func (*TextCommand) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{25} }

func (m *TextCommand) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *TextCommand) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

// Service message
type ServiceMessage struct {
	Text string     `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Ext  *ServiceEx `protobuf:"bytes,3,opt,name=ext" json:"ext,omitempty"`
}

func (m *ServiceMessage) Reset()                    { *m = ServiceMessage{} }
func (m *ServiceMessage) String() string            { return proto.CompactTextString(m) }
func (*ServiceMessage) ProtoMessage()               {}
func (*ServiceMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{26} }

func (m *ServiceMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ServiceMessage) GetExt() *ServiceEx {
	if m != nil {
		return m.Ext
	}
	return nil
}

type ServiceEx struct {
	// Types that are valid to be assigned to Body:
	//	*ServiceEx_UserInvited
	//	*ServiceEx_UserJoined
	//	*ServiceEx_UserKicked
	//	*ServiceEx_UserLeft
	//	*ServiceEx_GroupCreated
	//	*ServiceEx_ChangedTitle
	//	*ServiceEx_ChangedTopic
	//	*ServiceEx_ChangedAbout
	//	*ServiceEx_ChangedAvatar
	//	*ServiceEx_ContactRegistered
	//	*ServiceEx_PhoneMissed
	//	*ServiceEx_PhoneCall
	//	*ServiceEx_PhoneRejected
	//	*ServiceEx_ChatArchived
	//	*ServiceEx_ChatRestored
	Body isServiceEx_Body `protobuf_oneof:"body"`
}

func (m *ServiceEx) Reset()                    { *m = ServiceEx{} }
func (m *ServiceEx) String() string            { return proto.CompactTextString(m) }
func (*ServiceEx) ProtoMessage()               {}
func (*ServiceEx) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{27} }

type isServiceEx_Body interface {
	isServiceEx_Body()
}

type ServiceEx_UserInvited struct {
	UserInvited *ServiceExUserInvited `protobuf:"bytes,1,opt,name=userInvited,oneof"`
}
type ServiceEx_UserJoined struct {
	UserJoined *ServiceExUserJoined `protobuf:"bytes,2,opt,name=userJoined,oneof"`
}
type ServiceEx_UserKicked struct {
	UserKicked *ServiceExUserKicked `protobuf:"bytes,3,opt,name=userKicked,oneof"`
}
type ServiceEx_UserLeft struct {
	UserLeft *ServiceExUserLeft `protobuf:"bytes,4,opt,name=userLeft,oneof"`
}
type ServiceEx_GroupCreated struct {
	GroupCreated *ServiceExGroupCreated `protobuf:"bytes,5,opt,name=groupCreated,oneof"`
}
type ServiceEx_ChangedTitle struct {
	ChangedTitle *ServiceExChangedTitle `protobuf:"bytes,6,opt,name=changedTitle,oneof"`
}
type ServiceEx_ChangedTopic struct {
	ChangedTopic *ServiceExChangedTopic `protobuf:"bytes,7,opt,name=changedTopic,oneof"`
}
type ServiceEx_ChangedAbout struct {
	ChangedAbout *ServiceExChangedAbout `protobuf:"bytes,8,opt,name=changedAbout,oneof"`
}
type ServiceEx_ChangedAvatar struct {
	ChangedAvatar *ServiceExChangedAvatar `protobuf:"bytes,9,opt,name=changedAvatar,oneof"`
}
type ServiceEx_ContactRegistered struct {
	ContactRegistered *ServiceExContactRegistered `protobuf:"bytes,10,opt,name=contactRegistered,oneof"`
}
type ServiceEx_PhoneMissed struct {
	PhoneMissed *ServiceExPhoneMissed `protobuf:"bytes,11,opt,name=phoneMissed,oneof"`
}
type ServiceEx_PhoneCall struct {
	PhoneCall *ServiceExPhoneCall `protobuf:"bytes,12,opt,name=phoneCall,oneof"`
}
type ServiceEx_PhoneRejected struct {
	PhoneRejected *ServiceExPhoneRejected `protobuf:"bytes,13,opt,name=phoneRejected,oneof"`
}
type ServiceEx_ChatArchived struct {
	ChatArchived *ServiceExChatArchived `protobuf:"bytes,14,opt,name=chatArchived,oneof"`
}
type ServiceEx_ChatRestored struct {
	ChatRestored *ServiceExChatRestored `protobuf:"bytes,15,opt,name=chatRestored,oneof"`
}

func (*ServiceEx_UserInvited) isServiceEx_Body()       {}
func (*ServiceEx_UserJoined) isServiceEx_Body()        {}
func (*ServiceEx_UserKicked) isServiceEx_Body()        {}
func (*ServiceEx_UserLeft) isServiceEx_Body()          {}
func (*ServiceEx_GroupCreated) isServiceEx_Body()      {}
func (*ServiceEx_ChangedTitle) isServiceEx_Body()      {}
func (*ServiceEx_ChangedTopic) isServiceEx_Body()      {}
func (*ServiceEx_ChangedAbout) isServiceEx_Body()      {}
func (*ServiceEx_ChangedAvatar) isServiceEx_Body()     {}
func (*ServiceEx_ContactRegistered) isServiceEx_Body() {}
func (*ServiceEx_PhoneMissed) isServiceEx_Body()       {}
func (*ServiceEx_PhoneCall) isServiceEx_Body()         {}
func (*ServiceEx_PhoneRejected) isServiceEx_Body()     {}
func (*ServiceEx_ChatArchived) isServiceEx_Body()      {}
func (*ServiceEx_ChatRestored) isServiceEx_Body()      {}

func (m *ServiceEx) GetBody() isServiceEx_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ServiceEx) GetUserInvited() *ServiceExUserInvited {
	if x, ok := m.GetBody().(*ServiceEx_UserInvited); ok {
		return x.UserInvited
	}
	return nil
}

func (m *ServiceEx) GetUserJoined() *ServiceExUserJoined {
	if x, ok := m.GetBody().(*ServiceEx_UserJoined); ok {
		return x.UserJoined
	}
	return nil
}

func (m *ServiceEx) GetUserKicked() *ServiceExUserKicked {
	if x, ok := m.GetBody().(*ServiceEx_UserKicked); ok {
		return x.UserKicked
	}
	return nil
}

func (m *ServiceEx) GetUserLeft() *ServiceExUserLeft {
	if x, ok := m.GetBody().(*ServiceEx_UserLeft); ok {
		return x.UserLeft
	}
	return nil
}

func (m *ServiceEx) GetGroupCreated() *ServiceExGroupCreated {
	if x, ok := m.GetBody().(*ServiceEx_GroupCreated); ok {
		return x.GroupCreated
	}
	return nil
}

func (m *ServiceEx) GetChangedTitle() *ServiceExChangedTitle {
	if x, ok := m.GetBody().(*ServiceEx_ChangedTitle); ok {
		return x.ChangedTitle
	}
	return nil
}

func (m *ServiceEx) GetChangedTopic() *ServiceExChangedTopic {
	if x, ok := m.GetBody().(*ServiceEx_ChangedTopic); ok {
		return x.ChangedTopic
	}
	return nil
}

func (m *ServiceEx) GetChangedAbout() *ServiceExChangedAbout {
	if x, ok := m.GetBody().(*ServiceEx_ChangedAbout); ok {
		return x.ChangedAbout
	}
	return nil
}

func (m *ServiceEx) GetChangedAvatar() *ServiceExChangedAvatar {
	if x, ok := m.GetBody().(*ServiceEx_ChangedAvatar); ok {
		return x.ChangedAvatar
	}
	return nil
}

func (m *ServiceEx) GetContactRegistered() *ServiceExContactRegistered {
	if x, ok := m.GetBody().(*ServiceEx_ContactRegistered); ok {
		return x.ContactRegistered
	}
	return nil
}

func (m *ServiceEx) GetPhoneMissed() *ServiceExPhoneMissed {
	if x, ok := m.GetBody().(*ServiceEx_PhoneMissed); ok {
		return x.PhoneMissed
	}
	return nil
}

func (m *ServiceEx) GetPhoneCall() *ServiceExPhoneCall {
	if x, ok := m.GetBody().(*ServiceEx_PhoneCall); ok {
		return x.PhoneCall
	}
	return nil
}

func (m *ServiceEx) GetPhoneRejected() *ServiceExPhoneRejected {
	if x, ok := m.GetBody().(*ServiceEx_PhoneRejected); ok {
		return x.PhoneRejected
	}
	return nil
}

func (m *ServiceEx) GetChatArchived() *ServiceExChatArchived {
	if x, ok := m.GetBody().(*ServiceEx_ChatArchived); ok {
		return x.ChatArchived
	}
	return nil
}

func (m *ServiceEx) GetChatRestored() *ServiceExChatRestored {
	if x, ok := m.GetBody().(*ServiceEx_ChatRestored); ok {
		return x.ChatRestored
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ServiceEx) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ServiceEx_OneofMarshaler, _ServiceEx_OneofUnmarshaler, _ServiceEx_OneofSizer, []interface{}{
		(*ServiceEx_UserInvited)(nil),
		(*ServiceEx_UserJoined)(nil),
		(*ServiceEx_UserKicked)(nil),
		(*ServiceEx_UserLeft)(nil),
		(*ServiceEx_GroupCreated)(nil),
		(*ServiceEx_ChangedTitle)(nil),
		(*ServiceEx_ChangedTopic)(nil),
		(*ServiceEx_ChangedAbout)(nil),
		(*ServiceEx_ChangedAvatar)(nil),
		(*ServiceEx_ContactRegistered)(nil),
		(*ServiceEx_PhoneMissed)(nil),
		(*ServiceEx_PhoneCall)(nil),
		(*ServiceEx_PhoneRejected)(nil),
		(*ServiceEx_ChatArchived)(nil),
		(*ServiceEx_ChatRestored)(nil),
	}
}

func _ServiceEx_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ServiceEx)
	// body
	switch x := m.Body.(type) {
	case *ServiceEx_UserInvited:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserInvited); err != nil {
			return err
		}
	case *ServiceEx_UserJoined:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserJoined); err != nil {
			return err
		}
	case *ServiceEx_UserKicked:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserKicked); err != nil {
			return err
		}
	case *ServiceEx_UserLeft:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserLeft); err != nil {
			return err
		}
	case *ServiceEx_GroupCreated:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupCreated); err != nil {
			return err
		}
	case *ServiceEx_ChangedTitle:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangedTitle); err != nil {
			return err
		}
	case *ServiceEx_ChangedTopic:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangedTopic); err != nil {
			return err
		}
	case *ServiceEx_ChangedAbout:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangedAbout); err != nil {
			return err
		}
	case *ServiceEx_ChangedAvatar:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangedAvatar); err != nil {
			return err
		}
	case *ServiceEx_ContactRegistered:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactRegistered); err != nil {
			return err
		}
	case *ServiceEx_PhoneMissed:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PhoneMissed); err != nil {
			return err
		}
	case *ServiceEx_PhoneCall:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PhoneCall); err != nil {
			return err
		}
	case *ServiceEx_PhoneRejected:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PhoneRejected); err != nil {
			return err
		}
	case *ServiceEx_ChatArchived:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatArchived); err != nil {
			return err
		}
	case *ServiceEx_ChatRestored:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatRestored); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ServiceEx.Body has unexpected type %T", x)
	}
	return nil
}

func _ServiceEx_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ServiceEx)
	switch tag {
	case 1: // body.userInvited
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExUserInvited)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_UserInvited{msg}
		return true, err
	case 2: // body.userJoined
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExUserJoined)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_UserJoined{msg}
		return true, err
	case 3: // body.userKicked
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExUserKicked)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_UserKicked{msg}
		return true, err
	case 4: // body.userLeft
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExUserLeft)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_UserLeft{msg}
		return true, err
	case 5: // body.groupCreated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExGroupCreated)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_GroupCreated{msg}
		return true, err
	case 6: // body.changedTitle
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChangedTitle)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChangedTitle{msg}
		return true, err
	case 7: // body.changedTopic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChangedTopic)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChangedTopic{msg}
		return true, err
	case 8: // body.changedAbout
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChangedAbout)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChangedAbout{msg}
		return true, err
	case 9: // body.changedAvatar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChangedAvatar)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChangedAvatar{msg}
		return true, err
	case 10: // body.contactRegistered
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExContactRegistered)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ContactRegistered{msg}
		return true, err
	case 11: // body.phoneMissed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExPhoneMissed)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_PhoneMissed{msg}
		return true, err
	case 12: // body.phoneCall
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExPhoneCall)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_PhoneCall{msg}
		return true, err
	case 13: // body.phoneRejected
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExPhoneRejected)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_PhoneRejected{msg}
		return true, err
	case 14: // body.chatArchived
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChatArchived)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChatArchived{msg}
		return true, err
	case 15: // body.chatRestored
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceExChatRestored)
		err := b.DecodeMessage(msg)
		m.Body = &ServiceEx_ChatRestored{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ServiceEx_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ServiceEx)
	// body
	switch x := m.Body.(type) {
	case *ServiceEx_UserInvited:
		s := proto.Size(x.UserInvited)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_UserJoined:
		s := proto.Size(x.UserJoined)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_UserKicked:
		s := proto.Size(x.UserKicked)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_UserLeft:
		s := proto.Size(x.UserLeft)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_GroupCreated:
		s := proto.Size(x.GroupCreated)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChangedTitle:
		s := proto.Size(x.ChangedTitle)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChangedTopic:
		s := proto.Size(x.ChangedTopic)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChangedAbout:
		s := proto.Size(x.ChangedAbout)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChangedAvatar:
		s := proto.Size(x.ChangedAvatar)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ContactRegistered:
		s := proto.Size(x.ContactRegistered)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_PhoneMissed:
		s := proto.Size(x.PhoneMissed)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_PhoneCall:
		s := proto.Size(x.PhoneCall)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_PhoneRejected:
		s := proto.Size(x.PhoneRejected)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChatArchived:
		s := proto.Size(x.ChatArchived)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceEx_ChatRestored:
		s := proto.Size(x.ChatRestored)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Service message about adding user to group
type ServiceExUserInvited struct {
	InvitedUid int32 `protobuf:"varint,1,opt,name=invited_uid,json=invitedUid" json:"invited_uid,omitempty"`
}

func (m *ServiceExUserInvited) Reset()                    { *m = ServiceExUserInvited{} }
func (m *ServiceExUserInvited) String() string            { return proto.CompactTextString(m) }
func (*ServiceExUserInvited) ProtoMessage()               {}
func (*ServiceExUserInvited) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{28} }

func (m *ServiceExUserInvited) GetInvitedUid() int32 {
	if m != nil {
		return m.InvitedUid
	}
	return 0
}

// Service message about user join to group
type ServiceExUserJoined struct {
}

func (m *ServiceExUserJoined) Reset()                    { *m = ServiceExUserJoined{} }
func (m *ServiceExUserJoined) String() string            { return proto.CompactTextString(m) }
func (*ServiceExUserJoined) ProtoMessage()               {}
func (*ServiceExUserJoined) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{29} }

// Service message about kicking user from group
type ServiceExUserKicked struct {
	KickedUid int32 `protobuf:"varint,1,opt,name=kicked_uid,json=kickedUid" json:"kicked_uid,omitempty"`
}

func (m *ServiceExUserKicked) Reset()                    { *m = ServiceExUserKicked{} }
func (m *ServiceExUserKicked) String() string            { return proto.CompactTextString(m) }
func (*ServiceExUserKicked) ProtoMessage()               {}
func (*ServiceExUserKicked) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{30} }

func (m *ServiceExUserKicked) GetKickedUid() int32 {
	if m != nil {
		return m.KickedUid
	}
	return 0
}

// Service message about user left group
type ServiceExUserLeft struct {
}

func (m *ServiceExUserLeft) Reset()                    { *m = ServiceExUserLeft{} }
func (m *ServiceExUserLeft) String() string            { return proto.CompactTextString(m) }
func (*ServiceExUserLeft) ProtoMessage()               {}
func (*ServiceExUserLeft) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{31} }

// Service message about group creating
type ServiceExGroupCreated struct {
}

func (m *ServiceExGroupCreated) Reset()                    { *m = ServiceExGroupCreated{} }
func (m *ServiceExGroupCreated) String() string            { return proto.CompactTextString(m) }
func (*ServiceExGroupCreated) ProtoMessage()               {}
func (*ServiceExGroupCreated) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{32} }

// Service message about group title change
type ServiceExChangedTitle struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *ServiceExChangedTitle) Reset()                    { *m = ServiceExChangedTitle{} }
func (m *ServiceExChangedTitle) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChangedTitle) ProtoMessage()               {}
func (*ServiceExChangedTitle) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{33} }

func (m *ServiceExChangedTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// Service message on group topic change
type ServiceExChangedTopic struct {
	// / New group topic
	Topic *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
}

func (m *ServiceExChangedTopic) Reset()                    { *m = ServiceExChangedTopic{} }
func (m *ServiceExChangedTopic) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChangedTopic) ProtoMessage()               {}
func (*ServiceExChangedTopic) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{34} }

func (m *ServiceExChangedTopic) GetTopic() *google_protobuf.StringValue {
	if m != nil {
		return m.Topic
	}
	return nil
}

// Service message on group about change
type ServiceExChangedAbout struct {
	// / New group about
	About *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=about" json:"about,omitempty"`
}

func (m *ServiceExChangedAbout) Reset()                    { *m = ServiceExChangedAbout{} }
func (m *ServiceExChangedAbout) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChangedAbout) ProtoMessage()               {}
func (*ServiceExChangedAbout) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{35} }

func (m *ServiceExChangedAbout) GetAbout() *google_protobuf.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

// Service message about avatar change
type ServiceExChangedAvatar struct {
	Avatar *Avatar `protobuf:"bytes,1,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *ServiceExChangedAvatar) Reset()                    { *m = ServiceExChangedAvatar{} }
func (m *ServiceExChangedAvatar) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChangedAvatar) ProtoMessage()               {}
func (*ServiceExChangedAvatar) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{36} }

func (m *ServiceExChangedAvatar) GetAvatar() *Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

// Service message about user registration
type ServiceExContactRegistered struct {
	Uid int32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *ServiceExContactRegistered) Reset()                    { *m = ServiceExContactRegistered{} }
func (m *ServiceExContactRegistered) String() string            { return proto.CompactTextString(m) }
func (*ServiceExContactRegistered) ProtoMessage()               {}
func (*ServiceExContactRegistered) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{37} }

func (m *ServiceExContactRegistered) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// Update about missing phone call
type ServiceExPhoneMissed struct {
}

func (m *ServiceExPhoneMissed) Reset()                    { *m = ServiceExPhoneMissed{} }
func (m *ServiceExPhoneMissed) String() string            { return proto.CompactTextString(m) }
func (*ServiceExPhoneMissed) ProtoMessage()               {}
func (*ServiceExPhoneMissed) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{38} }

// Update about phone call
type ServiceExPhoneCall struct {
	Duration int32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
}

func (m *ServiceExPhoneCall) Reset()                    { *m = ServiceExPhoneCall{} }
func (m *ServiceExPhoneCall) String() string            { return proto.CompactTextString(m) }
func (*ServiceExPhoneCall) ProtoMessage()               {}
func (*ServiceExPhoneCall) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{39} }

func (m *ServiceExPhoneCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// Update about phone call rejected
type ServiceExPhoneRejected struct {
}

func (m *ServiceExPhoneRejected) Reset()                    { *m = ServiceExPhoneRejected{} }
func (m *ServiceExPhoneRejected) String() string            { return proto.CompactTextString(m) }
func (*ServiceExPhoneRejected) ProtoMessage()               {}
func (*ServiceExPhoneRejected) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{40} }

// Message about chat archived
type ServiceExChatArchived struct {
}

func (m *ServiceExChatArchived) Reset()                    { *m = ServiceExChatArchived{} }
func (m *ServiceExChatArchived) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChatArchived) ProtoMessage()               {}
func (*ServiceExChatArchived) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{41} }

// Message about chat restored
type ServiceExChatRestored struct {
}

func (m *ServiceExChatRestored) Reset()                    { *m = ServiceExChatRestored{} }
func (m *ServiceExChatRestored) String() string            { return proto.CompactTextString(m) }
func (*ServiceExChatRestored) ProtoMessage()               {}
func (*ServiceExChatRestored) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{42} }

// File message
type DocumentMessage struct {
	FileId     int64  `protobuf:"varint,1,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	AccessHash int64  `protobuf:"varint,2,opt,name=access_hash,json=accessHash" json:"access_hash,omitempty"`
	FileSize   int32  `protobuf:"varint,3,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	MimeType   string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	// / optional thumb of file. JPEG less that 90x90 with 60-70 quality.
	Thumb *FastThumb  `protobuf:"bytes,6,opt,name=thumb" json:"thumb,omitempty"`
	Ext   *DocumentEx `protobuf:"bytes,8,opt,name=ext" json:"ext,omitempty"`
}

func (m *DocumentMessage) Reset()                    { *m = DocumentMessage{} }
func (m *DocumentMessage) String() string            { return proto.CompactTextString(m) }
func (*DocumentMessage) ProtoMessage()               {}
func (*DocumentMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{43} }

func (m *DocumentMessage) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *DocumentMessage) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *DocumentMessage) GetFileSize() int32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *DocumentMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DocumentMessage) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *DocumentMessage) GetThumb() *FastThumb {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *DocumentMessage) GetExt() *DocumentEx {
	if m != nil {
		return m.Ext
	}
	return nil
}

type DocumentEx struct {
	// Types that are valid to be assigned to Body:
	//	*DocumentEx_Photo
	//	*DocumentEx_Video
	//	*DocumentEx_Voice
	Body isDocumentEx_Body `protobuf_oneof:"body"`
}

func (m *DocumentEx) Reset()                    { *m = DocumentEx{} }
func (m *DocumentEx) String() string            { return proto.CompactTextString(m) }
func (*DocumentEx) ProtoMessage()               {}
func (*DocumentEx) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{44} }

type isDocumentEx_Body interface {
	isDocumentEx_Body()
}

type DocumentEx_Photo struct {
	Photo *DocumentExPhoto `protobuf:"bytes,1,opt,name=photo,oneof"`
}
type DocumentEx_Video struct {
	Video *DocumentExVideo `protobuf:"bytes,2,opt,name=video,oneof"`
}
type DocumentEx_Voice struct {
	Voice *DocumentExVoice `protobuf:"bytes,3,opt,name=voice,oneof"`
}

func (*DocumentEx_Photo) isDocumentEx_Body() {}
func (*DocumentEx_Video) isDocumentEx_Body() {}
func (*DocumentEx_Voice) isDocumentEx_Body() {}

func (m *DocumentEx) GetBody() isDocumentEx_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *DocumentEx) GetPhoto() *DocumentExPhoto {
	if x, ok := m.GetBody().(*DocumentEx_Photo); ok {
		return x.Photo
	}
	return nil
}

func (m *DocumentEx) GetVideo() *DocumentExVideo {
	if x, ok := m.GetBody().(*DocumentEx_Video); ok {
		return x.Video
	}
	return nil
}

func (m *DocumentEx) GetVoice() *DocumentExVoice {
	if x, ok := m.GetBody().(*DocumentEx_Voice); ok {
		return x.Voice
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DocumentEx) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DocumentEx_OneofMarshaler, _DocumentEx_OneofUnmarshaler, _DocumentEx_OneofSizer, []interface{}{
		(*DocumentEx_Photo)(nil),
		(*DocumentEx_Video)(nil),
		(*DocumentEx_Voice)(nil),
	}
}

func _DocumentEx_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DocumentEx)
	// body
	switch x := m.Body.(type) {
	case *DocumentEx_Photo:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Photo); err != nil {
			return err
		}
	case *DocumentEx_Video:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Video); err != nil {
			return err
		}
	case *DocumentEx_Voice:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Voice); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DocumentEx.Body has unexpected type %T", x)
	}
	return nil
}

func _DocumentEx_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DocumentEx)
	switch tag {
	case 1: // body.photo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentExPhoto)
		err := b.DecodeMessage(msg)
		m.Body = &DocumentEx_Photo{msg}
		return true, err
	case 2: // body.video
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentExVideo)
		err := b.DecodeMessage(msg)
		m.Body = &DocumentEx_Video{msg}
		return true, err
	case 3: // body.voice
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DocumentExVoice)
		err := b.DecodeMessage(msg)
		m.Body = &DocumentEx_Voice{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DocumentEx_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DocumentEx)
	// body
	switch x := m.Body.(type) {
	case *DocumentEx_Photo:
		s := proto.Size(x.Photo)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DocumentEx_Video:
		s := proto.Size(x.Video)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DocumentEx_Voice:
		s := proto.Size(x.Voice)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// File photo extension
type DocumentExPhoto struct {
	W int32 `protobuf:"varint,1,opt,name=w" json:"w,omitempty"`
	H int32 `protobuf:"varint,2,opt,name=h" json:"h,omitempty"`
}

func (m *DocumentExPhoto) Reset()                    { *m = DocumentExPhoto{} }
func (m *DocumentExPhoto) String() string            { return proto.CompactTextString(m) }
func (*DocumentExPhoto) ProtoMessage()               {}
func (*DocumentExPhoto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{45} }

func (m *DocumentExPhoto) GetW() int32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *DocumentExPhoto) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

// File video extension
type DocumentExVideo struct {
	W        int32 `protobuf:"varint,1,opt,name=w" json:"w,omitempty"`
	H        int32 `protobuf:"varint,2,opt,name=h" json:"h,omitempty"`
	Duration int32 `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
}

func (m *DocumentExVideo) Reset()                    { *m = DocumentExVideo{} }
func (m *DocumentExVideo) String() string            { return proto.CompactTextString(m) }
func (*DocumentExVideo) ProtoMessage()               {}
func (*DocumentExVideo) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{46} }

func (m *DocumentExVideo) GetW() int32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *DocumentExVideo) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *DocumentExVideo) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// File voice extension
type DocumentExVoice struct {
	Duration int32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
}

func (m *DocumentExVoice) Reset()                    { *m = DocumentExVoice{} }
func (m *DocumentExVoice) String() string            { return proto.CompactTextString(m) }
func (*DocumentExVoice) ProtoMessage()               {}
func (*DocumentExVoice) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{47} }

func (m *DocumentExVoice) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// Custom-data JsonMessage
type JsonMessage struct {
	RawJson string `protobuf:"bytes,1,opt,name=raw_json,json=rawJson" json:"raw_json,omitempty"`
}

func (m *JsonMessage) Reset()                    { *m = JsonMessage{} }
func (m *JsonMessage) String() string            { return proto.CompactTextString(m) }
func (*JsonMessage) ProtoMessage()               {}
func (*JsonMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{48} }

func (m *JsonMessage) GetRawJson() string {
	if m != nil {
		return m.RawJson
	}
	return ""
}

// Explicit type for unsupported message
type UnsupportedMessage struct {
}

func (m *UnsupportedMessage) Reset()                    { *m = UnsupportedMessage{} }
func (m *UnsupportedMessage) String() string            { return proto.CompactTextString(m) }
func (*UnsupportedMessage) ProtoMessage()               {}
func (*UnsupportedMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{49} }

// Sticker message
type StickerMessage struct {
	// / Optional Unique ID of sticker
	StickerId *google_protobuf.Int32Value `protobuf:"bytes,1,opt,name=sticker_id,json=stickerId" json:"sticker_id,omitempty"`
	// / Optional Fast preview of sticker in webp format
	FastPreview *google_protobuf.BytesValue `protobuf:"bytes,2,opt,name=fast_preview,json=fastPreview" json:"fast_preview,omitempty"`
	// / Optional 512x512 sticker image in webp format
	Image_512 *ImageLocation `protobuf:"bytes,3,opt,name=image_512,json=image512" json:"image_512,omitempty"`
	// / Optional 256x256 sticker image in webp format
	Image_256 *ImageLocation `protobuf:"bytes,4,opt,name=image_256,json=image256" json:"image_256,omitempty"`
	// / Optional Collection ID
	StickerCollectionId *google_protobuf.Int32Value `protobuf:"bytes,5,opt,name=sticker_collection_id,json=stickerCollectionId" json:"sticker_collection_id,omitempty"`
	// / Optional Collection Access Hash
	StickerCollectionAccessHash *google_protobuf.Int64Value `protobuf:"bytes,6,opt,name=sticker_collection_access_hash,json=stickerCollectionAccessHash" json:"sticker_collection_access_hash,omitempty"`
	// / Sticker emoji
	Emoji *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=emoji" json:"emoji,omitempty"`
}

func (m *StickerMessage) Reset()                    { *m = StickerMessage{} }
func (m *StickerMessage) String() string            { return proto.CompactTextString(m) }
func (*StickerMessage) ProtoMessage()               {}
func (*StickerMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{50} }

func (m *StickerMessage) GetStickerId() *google_protobuf.Int32Value {
	if m != nil {
		return m.StickerId
	}
	return nil
}

func (m *StickerMessage) GetFastPreview() *google_protobuf.BytesValue {
	if m != nil {
		return m.FastPreview
	}
	return nil
}

func (m *StickerMessage) GetImage_512() *ImageLocation {
	if m != nil {
		return m.Image_512
	}
	return nil
}

func (m *StickerMessage) GetImage_256() *ImageLocation {
	if m != nil {
		return m.Image_256
	}
	return nil
}

func (m *StickerMessage) GetStickerCollectionId() *google_protobuf.Int32Value {
	if m != nil {
		return m.StickerCollectionId
	}
	return nil
}

func (m *StickerMessage) GetStickerCollectionAccessHash() *google_protobuf.Int64Value {
	if m != nil {
		return m.StickerCollectionAccessHash
	}
	return nil
}

func (m *StickerMessage) GetEmoji() *google_protobuf.StringValue {
	if m != nil {
		return m.Emoji
	}
	return nil
}

// Binary Message. Useful for implementing your own content types
type BinaryMessage struct {
	ContentTag string `protobuf:"bytes,1,opt,name=content_tag,json=contentTag" json:"content_tag,omitempty"`
	Msg        []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *BinaryMessage) Reset()                    { *m = BinaryMessage{} }
func (m *BinaryMessage) String() string            { return proto.CompactTextString(m) }
func (*BinaryMessage) ProtoMessage()               {}
func (*BinaryMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{51} }

func (m *BinaryMessage) GetContentTag() string {
	if m != nil {
		return m.ContentTag
	}
	return ""
}

func (m *BinaryMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

// Empty Message
type EmptyMessage struct {
}

func (m *EmptyMessage) Reset()                    { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string            { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()               {}
func (*EmptyMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{52} }

// Deleted message
type DeletedMessage struct {
	// / Deleted locally message
	IsLocal *google_protobuf.BoolValue `protobuf:"bytes,1,opt,name=is_local,json=isLocal" json:"is_local,omitempty"`
}

func (m *DeletedMessage) Reset()                    { *m = DeletedMessage{} }
func (m *DeletedMessage) String() string            { return proto.CompactTextString(m) }
func (*DeletedMessage) ProtoMessage()               {}
func (*DeletedMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{53} }

func (m *DeletedMessage) GetIsLocal() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsLocal
	}
	return nil
}

// Short Dialog from grouped conversation list
type DialogShort struct {
	Peer    *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Counter int32 `protobuf:"varint,2,opt,name=counter" json:"counter,omitempty"`
	Date    int64 `protobuf:"varint,4,opt,name=date" json:"date,omitempty"`
}

func (m *DialogShort) Reset()                    { *m = DialogShort{} }
func (m *DialogShort) String() string            { return proto.CompactTextString(m) }
func (*DialogShort) ProtoMessage()               {}
func (*DialogShort) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{54} }

func (m *DialogShort) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *DialogShort) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *DialogShort) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

// Grouped dialog list
type DialogGroup struct {
	Title   string         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Key     string         `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Dialogs []*DialogShort `protobuf:"bytes,3,rep,name=dialogs" json:"dialogs,omitempty"`
}

func (m *DialogGroup) Reset()                    { *m = DialogGroup{} }
func (m *DialogGroup) String() string            { return proto.CompactTextString(m) }
func (*DialogGroup) ProtoMessage()               {}
func (*DialogGroup) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{55} }

func (m *DialogGroup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DialogGroup) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DialogGroup) GetDialogs() []*DialogShort {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

// Reaction to message
type MessageReaction struct {
	Users []int32 `protobuf:"varint,1,rep,packed,name=users" json:"users,omitempty"`
	Code  string  `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *MessageReaction) Reset()                    { *m = MessageReaction{} }
func (m *MessageReaction) String() string            { return proto.CompactTextString(m) }
func (*MessageReaction) ProtoMessage()               {}
func (*MessageReaction) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{56} }

func (m *MessageReaction) GetUsers() []int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *MessageReaction) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Predicate for searching in custom profile
type SearchPredicate struct {
	Key    string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *SearchPredicate) Reset()                    { *m = SearchPredicate{} }
func (m *SearchPredicate) String() string            { return proto.CompactTextString(m) }
func (*SearchPredicate) ProtoMessage()               {}
func (*SearchPredicate) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{57} }

func (m *SearchPredicate) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SearchPredicate) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Sending plain message
type RequestSendMessage struct {
	Peer    *OutPeer        `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Rid     int64           `protobuf:"varint,3,opt,name=rid" json:"rid,omitempty"`
	Message *MessageContent `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// / if not empty, then message will be send to this user only
	IsOnlyForUser int32 `protobuf:"varint,5,opt,name=is_only_for_user,json=isOnlyForUser" json:"is_only_for_user,omitempty"`
	// / If current message forwards some other
	Forward *ReferencedMessages `protobuf:"bytes,8,opt,name=forward" json:"forward,omitempty"`
	// / If current message is a reply on some other
	Reply      *ReferencedMessages `protobuf:"bytes,9,opt,name=reply" json:"reply,omitempty"`
	Predicates []*SearchPredicate  `protobuf:"bytes,10,rep,name=predicates" json:"predicates,omitempty"`
	WhiteList  []int32             `protobuf:"varint,11,rep,packed,name=white_list,json=whiteList" json:"white_list,omitempty"`
	BlackList  []int32             `protobuf:"varint,12,rep,packed,name=black_list,json=blackList" json:"black_list,omitempty"`
}

func (m *RequestSendMessage) Reset()                    { *m = RequestSendMessage{} }
func (m *RequestSendMessage) String() string            { return proto.CompactTextString(m) }
func (*RequestSendMessage) ProtoMessage()               {}
func (*RequestSendMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{58} }

func (m *RequestSendMessage) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestSendMessage) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *RequestSendMessage) GetMessage() *MessageContent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *RequestSendMessage) GetIsOnlyForUser() int32 {
	if m != nil {
		return m.IsOnlyForUser
	}
	return 0
}

func (m *RequestSendMessage) GetForward() *ReferencedMessages {
	if m != nil {
		return m.Forward
	}
	return nil
}

func (m *RequestSendMessage) GetReply() *ReferencedMessages {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *RequestSendMessage) GetPredicates() []*SearchPredicate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

func (m *RequestSendMessage) GetWhiteList() []int32 {
	if m != nil {
		return m.WhiteList
	}
	return nil
}

func (m *RequestSendMessage) GetBlackList() []int32 {
	if m != nil {
		return m.BlackList
	}
	return nil
}

// Changing Message content
type RequestUpdateMessage struct {
	Mid            *UUIDValue      `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	UpdatedMessage *MessageContent `protobuf:"bytes,3,opt,name=updated_message,json=updatedMessage" json:"updated_message,omitempty"`
	// / Date from this message when it was changed last time
	LastEditedAt int64 `protobuf:"varint,4,opt,name=last_edited_at,json=lastEditedAt" json:"last_edited_at,omitempty"`
}

func (m *RequestUpdateMessage) Reset()                    { *m = RequestUpdateMessage{} }
func (m *RequestUpdateMessage) String() string            { return proto.CompactTextString(m) }
func (*RequestUpdateMessage) ProtoMessage()               {}
func (*RequestUpdateMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{59} }

func (m *RequestUpdateMessage) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestUpdateMessage) GetUpdatedMessage() *MessageContent {
	if m != nil {
		return m.UpdatedMessage
	}
	return nil
}

func (m *RequestUpdateMessage) GetLastEditedAt() int64 {
	if m != nil {
		return m.LastEditedAt
	}
	return 0
}

// Confirmation of plain message receive by device
type RequestMessageReceived struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Date int64    `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
}

func (m *RequestMessageReceived) Reset()                    { *m = RequestMessageReceived{} }
func (m *RequestMessageReceived) String() string            { return proto.CompactTextString(m) }
func (*RequestMessageReceived) ProtoMessage()               {}
func (*RequestMessageReceived) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{60} }

func (m *RequestMessageReceived) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestMessageReceived) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

// Marking plain messages as read
type RequestMessageRead struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Date int64    `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
}

func (m *RequestMessageRead) Reset()                    { *m = RequestMessageRead{} }
func (m *RequestMessageRead) String() string            { return proto.CompactTextString(m) }
func (*RequestMessageRead) ProtoMessage()               {}
func (*RequestMessageRead) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{61} }

func (m *RequestMessageRead) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestMessageRead) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

// Deleting messages
type RequestDeleteMessageObsolete struct {
	Mids []*UUIDValue `protobuf:"bytes,3,rep,name=mids" json:"mids,omitempty"`
}

func (m *RequestDeleteMessageObsolete) Reset()                    { *m = RequestDeleteMessageObsolete{} }
func (m *RequestDeleteMessageObsolete) String() string            { return proto.CompactTextString(m) }
func (*RequestDeleteMessageObsolete) ProtoMessage()               {}
func (*RequestDeleteMessageObsolete) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{62} }

func (m *RequestDeleteMessageObsolete) GetMids() []*UUIDValue {
	if m != nil {
		return m.Mids
	}
	return nil
}

// Clearing of conversation (without removing dialog from dialogs list)
type RequestClearChat struct {
	Peer            *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	LastMessageDate int64    `protobuf:"varint,2,opt,name=last_message_date,json=lastMessageDate" json:"last_message_date,omitempty"`
}

func (m *RequestClearChat) Reset()                    { *m = RequestClearChat{} }
func (m *RequestClearChat) String() string            { return proto.CompactTextString(m) }
func (*RequestClearChat) ProtoMessage()               {}
func (*RequestClearChat) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{63} }

func (m *RequestClearChat) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestClearChat) GetLastMessageDate() int64 {
	if m != nil {
		return m.LastMessageDate
	}
	return 0
}

// Deleting of conversation (also leave group for group conversations)
type RequestDeleteChat struct {
	Peer            *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	LastMessageDate int64    `protobuf:"varint,2,opt,name=last_message_date,json=lastMessageDate" json:"last_message_date,omitempty"`
}

func (m *RequestDeleteChat) Reset()                    { *m = RequestDeleteChat{} }
func (m *RequestDeleteChat) String() string            { return proto.CompactTextString(m) }
func (*RequestDeleteChat) ProtoMessage()               {}
func (*RequestDeleteChat) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{64} }

func (m *RequestDeleteChat) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestDeleteChat) GetLastMessageDate() int64 {
	if m != nil {
		return m.LastMessageDate
	}
	return 0
}

// Archiving chat
type RequestArchiveChat struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestArchiveChat) Reset()                    { *m = RequestArchiveChat{} }
func (m *RequestArchiveChat) String() string            { return proto.CompactTextString(m) }
func (*RequestArchiveChat) ProtoMessage()               {}
func (*RequestArchiveChat) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{65} }

func (m *RequestArchiveChat) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Setting Message reaction
type RequestMessageSetReaction struct {
	Peer *OutPeer   `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid  *UUIDValue `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
	Code string     `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *RequestMessageSetReaction) Reset()                    { *m = RequestMessageSetReaction{} }
func (m *RequestMessageSetReaction) String() string            { return proto.CompactTextString(m) }
func (*RequestMessageSetReaction) ProtoMessage()               {}
func (*RequestMessageSetReaction) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{66} }

func (m *RequestMessageSetReaction) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestMessageSetReaction) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestMessageSetReaction) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Removing Message reaction
type RequestMessageRemoveReaction struct {
	Peer *OutPeer   `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid  *UUIDValue `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
	Code string     `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *RequestMessageRemoveReaction) Reset()                    { *m = RequestMessageRemoveReaction{} }
func (m *RequestMessageRemoveReaction) String() string            { return proto.CompactTextString(m) }
func (*RequestMessageRemoveReaction) ProtoMessage()               {}
func (*RequestMessageRemoveReaction) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{67} }

func (m *RequestMessageRemoveReaction) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestMessageRemoveReaction) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestMessageRemoveReaction) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Response for reactions change
type ResponseReactionsResponse struct {
	Seq       int32              `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State     []byte             `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Reactions []*MessageReaction `protobuf:"bytes,3,rep,name=reactions" json:"reactions,omitempty"`
}

func (m *ResponseReactionsResponse) Reset()                    { *m = ResponseReactionsResponse{} }
func (m *ResponseReactionsResponse) String() string            { return proto.CompactTextString(m) }
func (*ResponseReactionsResponse) ProtoMessage()               {}
func (*ResponseReactionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{68} }

func (m *ResponseReactionsResponse) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseReactionsResponse) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseReactionsResponse) GetReactions() []*MessageReaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

// Update about plain message
type UpdateMessage struct {
	Peer      *Peer           `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	SenderUid int32           `protobuf:"varint,2,opt,name=sender_uid,json=senderUid" json:"sender_uid,omitempty"`
	Date      int64           `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	Mid       *UUIDValue      `protobuf:"bytes,8,opt,name=mid" json:"mid,omitempty"`
	Message   *MessageContent `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	// / attributes to help reasoning about message
	Attributes *MessageAttributes `protobuf:"bytes,6,opt,name=attributes" json:"attributes,omitempty"`
	// Types that are valid to be assigned to Attach:
	//	*UpdateMessage_Forward
	//	*UpdateMessage_Reply
	Attach isUpdateMessage_Attach `protobuf_oneof:"attach"`
	// / Message id of previos message from current conversation
	PreviousMid *UUIDValue `protobuf:"bytes,11,opt,name=previous_mid,json=previousMid" json:"previous_mid,omitempty"`
	// / counter of unreads message
	Counter *google_protobuf.Int32Value `protobuf:"bytes,12,opt,name=counter" json:"counter,omitempty"`
}

func (m *UpdateMessage) Reset()                    { *m = UpdateMessage{} }
func (m *UpdateMessage) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessage) ProtoMessage()               {}
func (*UpdateMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{69} }

type isUpdateMessage_Attach interface {
	isUpdateMessage_Attach()
}

type UpdateMessage_Forward struct {
	Forward *ReferencedMessages `protobuf:"bytes,9,opt,name=forward,oneof"`
}
type UpdateMessage_Reply struct {
	Reply *ReferencedMessages `protobuf:"bytes,10,opt,name=reply,oneof"`
}

func (*UpdateMessage_Forward) isUpdateMessage_Attach() {}
func (*UpdateMessage_Reply) isUpdateMessage_Attach()   {}

func (m *UpdateMessage) GetAttach() isUpdateMessage_Attach {
	if m != nil {
		return m.Attach
	}
	return nil
}

func (m *UpdateMessage) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessage) GetSenderUid() int32 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *UpdateMessage) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateMessage) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateMessage) GetMessage() *MessageContent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UpdateMessage) GetAttributes() *MessageAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UpdateMessage) GetForward() *ReferencedMessages {
	if x, ok := m.GetAttach().(*UpdateMessage_Forward); ok {
		return x.Forward
	}
	return nil
}

func (m *UpdateMessage) GetReply() *ReferencedMessages {
	if x, ok := m.GetAttach().(*UpdateMessage_Reply); ok {
		return x.Reply
	}
	return nil
}

func (m *UpdateMessage) GetPreviousMid() *UUIDValue {
	if m != nil {
		return m.PreviousMid
	}
	return nil
}

func (m *UpdateMessage) GetCounter() *google_protobuf.Int32Value {
	if m != nil {
		return m.Counter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateMessage_OneofMarshaler, _UpdateMessage_OneofUnmarshaler, _UpdateMessage_OneofSizer, []interface{}{
		(*UpdateMessage_Forward)(nil),
		(*UpdateMessage_Reply)(nil),
	}
}

func _UpdateMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateMessage)
	// attach
	switch x := m.Attach.(type) {
	case *UpdateMessage_Forward:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Forward); err != nil {
			return err
		}
	case *UpdateMessage_Reply:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reply); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateMessage.Attach has unexpected type %T", x)
	}
	return nil
}

func _UpdateMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateMessage)
	switch tag {
	case 9: // attach.forward
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReferencedMessages)
		err := b.DecodeMessage(msg)
		m.Attach = &UpdateMessage_Forward{msg}
		return true, err
	case 10: // attach.reply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReferencedMessages)
		err := b.DecodeMessage(msg)
		m.Attach = &UpdateMessage_Reply{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateMessage)
	// attach
	switch x := m.Attach.(type) {
	case *UpdateMessage_Forward:
		s := proto.Size(x.Forward)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateMessage_Reply:
		s := proto.Size(x.Reply)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Update about message change
type UpdateMessageContentChanged struct {
	Peer     *Peer           `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid      *UUIDValue      `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
	Message  *MessageContent `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	EditedAt int64           `protobuf:"varint,5,opt,name=edited_at,json=editedAt" json:"edited_at,omitempty"`
}

func (m *UpdateMessageContentChanged) Reset()                    { *m = UpdateMessageContentChanged{} }
func (m *UpdateMessageContentChanged) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageContentChanged) ProtoMessage()               {}
func (*UpdateMessageContentChanged) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{70} }

func (m *UpdateMessageContentChanged) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageContentChanged) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateMessageContentChanged) GetMessage() *MessageContent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UpdateMessageContentChanged) GetEditedAt() int64 {
	if m != nil {
		return m.EditedAt
	}
	return 0
}

// Update about message sent
type UpdateMessageSent struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Rid  int64 `protobuf:"varint,2,opt,name=rid" json:"rid,omitempty"`
	Date int64 `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	// / Message id
	Mid *UUIDValue `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
	// / Previous message id in current conversation
	PrevMid *UUIDValue `protobuf:"bytes,5,opt,name=prev_mid,json=prevMid" json:"prev_mid,omitempty"`
	// / counter of unread messages
	UnreadCounter *google_protobuf.Int32Value `protobuf:"bytes,6,opt,name=unread_counter,json=unreadCounter" json:"unread_counter,omitempty"`
}

func (m *UpdateMessageSent) Reset()                    { *m = UpdateMessageSent{} }
func (m *UpdateMessageSent) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageSent) ProtoMessage()               {}
func (*UpdateMessageSent) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{71} }

func (m *UpdateMessageSent) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageSent) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *UpdateMessageSent) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateMessageSent) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateMessageSent) GetPrevMid() *UUIDValue {
	if m != nil {
		return m.PrevMid
	}
	return nil
}

func (m *UpdateMessageSent) GetUnreadCounter() *google_protobuf.Int32Value {
	if m != nil {
		return m.UnreadCounter
	}
	return nil
}

// Update about message received
type UpdateMessageReceived struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	// / when message was receive
	StartDate    int64 `protobuf:"varint,2,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	ReceivedDate int64 `protobuf:"varint,3,opt,name=received_date,json=receivedDate" json:"received_date,omitempty"`
}

func (m *UpdateMessageReceived) Reset()                    { *m = UpdateMessageReceived{} }
func (m *UpdateMessageReceived) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageReceived) ProtoMessage()               {}
func (*UpdateMessageReceived) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{72} }

func (m *UpdateMessageReceived) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageReceived) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *UpdateMessageReceived) GetReceivedDate() int64 {
	if m != nil {
		return m.ReceivedDate
	}
	return 0
}

// Update about message read
type UpdateMessageRead struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	// / when message was read
	StartDate int64 `protobuf:"varint,2,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	ReadDate  int64 `protobuf:"varint,3,opt,name=read_date,json=readDate" json:"read_date,omitempty"`
}

func (m *UpdateMessageRead) Reset()                    { *m = UpdateMessageRead{} }
func (m *UpdateMessageRead) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageRead) ProtoMessage()               {}
func (*UpdateMessageRead) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{73} }

func (m *UpdateMessageRead) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageRead) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *UpdateMessageRead) GetReadDate() int64 {
	if m != nil {
		return m.ReadDate
	}
	return 0
}

// Update about message read by me
type UpdateMessageReadByMe struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	// / when message was read
	StartDate int64 `protobuf:"varint,2,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	// / counter of unread messages
	UnreadCounter *google_protobuf.Int32Value `protobuf:"bytes,3,opt,name=unread_counter,json=unreadCounter" json:"unread_counter,omitempty"`
}

func (m *UpdateMessageReadByMe) Reset()                    { *m = UpdateMessageReadByMe{} }
func (m *UpdateMessageReadByMe) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageReadByMe) ProtoMessage()               {}
func (*UpdateMessageReadByMe) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{74} }

func (m *UpdateMessageReadByMe) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageReadByMe) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *UpdateMessageReadByMe) GetUnreadCounter() *google_protobuf.Int32Value {
	if m != nil {
		return m.UnreadCounter
	}
	return nil
}

// Update about message delete
type UpdateMessageDelete struct {
	Peer *Peer        `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mids []*UUIDValue `protobuf:"bytes,3,rep,name=mids" json:"mids,omitempty"`
	// / counter of unread messages
	Counter *google_protobuf.Int32Value `protobuf:"bytes,4,opt,name=counter" json:"counter,omitempty"`
	// / date? related for this unread counter
	ActionDate int64 `protobuf:"varint,5,opt,name=action_date,json=actionDate" json:"action_date,omitempty"`
}

func (m *UpdateMessageDelete) Reset()                    { *m = UpdateMessageDelete{} }
func (m *UpdateMessageDelete) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageDelete) ProtoMessage()               {}
func (*UpdateMessageDelete) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{75} }

func (m *UpdateMessageDelete) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageDelete) GetMids() []*UUIDValue {
	if m != nil {
		return m.Mids
	}
	return nil
}

func (m *UpdateMessageDelete) GetCounter() *google_protobuf.Int32Value {
	if m != nil {
		return m.Counter
	}
	return nil
}

func (m *UpdateMessageDelete) GetActionDate() int64 {
	if m != nil {
		return m.ActionDate
	}
	return 0
}

// Update about chat clear
type UpdateChatClear struct {
	Peer       *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	ActionDate int64 `protobuf:"varint,2,opt,name=action_date,json=actionDate" json:"action_date,omitempty"`
}

func (m *UpdateChatClear) Reset()                    { *m = UpdateChatClear{} }
func (m *UpdateChatClear) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatClear) ProtoMessage()               {}
func (*UpdateChatClear) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{76} }

func (m *UpdateChatClear) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateChatClear) GetActionDate() int64 {
	if m != nil {
		return m.ActionDate
	}
	return 0
}

// Update about chat delete
type UpdateChatDelete struct {
	Peer       *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	ActionDate int64 `protobuf:"varint,2,opt,name=action_date,json=actionDate" json:"action_date,omitempty"`
}

func (m *UpdateChatDelete) Reset()                    { *m = UpdateChatDelete{} }
func (m *UpdateChatDelete) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatDelete) ProtoMessage()               {}
func (*UpdateChatDelete) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{77} }

func (m *UpdateChatDelete) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateChatDelete) GetActionDate() int64 {
	if m != nil {
		return m.ActionDate
	}
	return 0
}

// Update about chat archive
type UpdateChatArchive struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *UpdateChatArchive) Reset()                    { *m = UpdateChatArchive{} }
func (m *UpdateChatArchive) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatArchive) ProtoMessage()               {}
func (*UpdateChatArchive) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{78} }

func (m *UpdateChatArchive) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Update about chat groups changed. Called only when adding, removing and reordering of grouped dialog.
type UpdateChatGroupsChanged struct {
	Dialogs []*DialogGroup `protobuf:"bytes,1,rep,name=dialogs" json:"dialogs,omitempty"`
}

func (m *UpdateChatGroupsChanged) Reset()                    { *m = UpdateChatGroupsChanged{} }
func (m *UpdateChatGroupsChanged) String() string            { return proto.CompactTextString(m) }
func (*UpdateChatGroupsChanged) ProtoMessage()               {}
func (*UpdateChatGroupsChanged) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{79} }

func (m *UpdateChatGroupsChanged) GetDialogs() []*DialogGroup {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

// Update about reactions change
type UpdateReactionsUpdate struct {
	Peer      *Peer              `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid       *UUIDValue         `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
	Reactions []*MessageReaction `protobuf:"bytes,3,rep,name=reactions" json:"reactions,omitempty"`
}

func (m *UpdateReactionsUpdate) Reset()                    { *m = UpdateReactionsUpdate{} }
func (m *UpdateReactionsUpdate) String() string            { return proto.CompactTextString(m) }
func (*UpdateReactionsUpdate) ProtoMessage()               {}
func (*UpdateReactionsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{80} }

func (m *UpdateReactionsUpdate) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateReactionsUpdate) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateReactionsUpdate) GetReactions() []*MessageReaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

// Update about rejection of message send request
type UpdateMessageRejectedByHook struct {
	Peer   *Peer                        `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Rid    int64                        `protobuf:"varint,2,opt,name=rid" json:"rid,omitempty"`
	Date   int64                        `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	HookId string                       `protobuf:"bytes,4,opt,name=hookId" json:"hookId,omitempty"`
	Reason *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
}

func (m *UpdateMessageRejectedByHook) Reset()                    { *m = UpdateMessageRejectedByHook{} }
func (m *UpdateMessageRejectedByHook) String() string            { return proto.CompactTextString(m) }
func (*UpdateMessageRejectedByHook) ProtoMessage()               {}
func (*UpdateMessageRejectedByHook) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{81} }

func (m *UpdateMessageRejectedByHook) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageRejectedByHook) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *UpdateMessageRejectedByHook) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateMessageRejectedByHook) GetHookId() string {
	if m != nil {
		return m.HookId
	}
	return ""
}

func (m *UpdateMessageRejectedByHook) GetReason() *google_protobuf.StringValue {
	if m != nil {
		return m.Reason
	}
	return nil
}

// Update about rejection of message update request
type UpdateMessageEditRejectedByHook struct {
	Peer   *Peer                        `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid    *UUIDValue                   `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Date   int64                        `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	HookId string                       `protobuf:"bytes,4,opt,name=hookId" json:"hookId,omitempty"`
	Reason *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
}

func (m *UpdateMessageEditRejectedByHook) Reset()         { *m = UpdateMessageEditRejectedByHook{} }
func (m *UpdateMessageEditRejectedByHook) String() string { return proto.CompactTextString(m) }
func (*UpdateMessageEditRejectedByHook) ProtoMessage()    {}
func (*UpdateMessageEditRejectedByHook) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{82}
}

func (m *UpdateMessageEditRejectedByHook) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateMessageEditRejectedByHook) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *UpdateMessageEditRejectedByHook) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateMessageEditRejectedByHook) GetHookId() string {
	if m != nil {
		return m.HookId
	}
	return ""
}

func (m *UpdateMessageEditRejectedByHook) GetReason() *google_protobuf.StringValue {
	if m != nil {
		return m.Reason
	}
	return nil
}

// mids Referenced messge ids
type ReferencedMessages struct {
	Mids []*UUIDValue `protobuf:"bytes,1,rep,name=mids" json:"mids,omitempty"`
}

func (m *ReferencedMessages) Reset()                    { *m = ReferencedMessages{} }
func (m *ReferencedMessages) String() string            { return proto.CompactTextString(m) }
func (*ReferencedMessages) ProtoMessage()               {}
func (*ReferencedMessages) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{83} }

func (m *ReferencedMessages) GetMids() []*UUIDValue {
	if m != nil {
		return m.Mids
	}
	return nil
}

// Message from history
type HistoryMessage struct {
	SenderUid  int32    `protobuf:"varint,1,opt,name=sender_uid,json=senderUid" json:"sender_uid,omitempty"`
	SenderPeer *OutPeer `protobuf:"bytes,15,opt,name=sender_peer,json=senderPeer" json:"sender_peer,omitempty"`
	HostPeer   *OutPeer `protobuf:"bytes,12,opt,name=host_peer,json=hostPeer" json:"host_peer,omitempty"`
	// / Message id generated by server
	Mid       *UUIDValue         `protobuf:"bytes,10,opt,name=mid" json:"mid,omitempty"`
	PrevMid   *UUIDValue         `protobuf:"bytes,17,opt,name=prev_mid,json=prevMid" json:"prev_mid,omitempty"`
	Date      int64              `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	Message   *MessageContent    `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	State     MessageState       `protobuf:"varint,6,opt,name=state,enum=dialog.MessageState" json:"state,omitempty"`
	Reactions []*MessageReaction `protobuf:"bytes,7,rep,name=reactions" json:"reactions,omitempty"`
	Attribute *MessageAttributes `protobuf:"bytes,8,opt,name=attribute" json:"attribute,omitempty"`
	// Types that are valid to be assigned to Attach:
	//	*HistoryMessage_Forward
	//	*HistoryMessage_Reply
	Attach   isHistoryMessage_Attach     `protobuf_oneof:"attach"`
	EditedAt *google_protobuf.Int64Value `protobuf:"bytes,16,opt,name=edited_at,json=editedAt" json:"edited_at,omitempty"`
}

func (m *HistoryMessage) Reset()                    { *m = HistoryMessage{} }
func (m *HistoryMessage) String() string            { return proto.CompactTextString(m) }
func (*HistoryMessage) ProtoMessage()               {}
func (*HistoryMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{84} }

type isHistoryMessage_Attach interface {
	isHistoryMessage_Attach()
}

type HistoryMessage_Forward struct {
	Forward *ReferencedMessages `protobuf:"bytes,13,opt,name=forward,oneof"`
}
type HistoryMessage_Reply struct {
	Reply *ReferencedMessages `protobuf:"bytes,14,opt,name=reply,oneof"`
}

func (*HistoryMessage_Forward) isHistoryMessage_Attach() {}
func (*HistoryMessage_Reply) isHistoryMessage_Attach()   {}

func (m *HistoryMessage) GetAttach() isHistoryMessage_Attach {
	if m != nil {
		return m.Attach
	}
	return nil
}

func (m *HistoryMessage) GetSenderUid() int32 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *HistoryMessage) GetSenderPeer() *OutPeer {
	if m != nil {
		return m.SenderPeer
	}
	return nil
}

func (m *HistoryMessage) GetHostPeer() *OutPeer {
	if m != nil {
		return m.HostPeer
	}
	return nil
}

func (m *HistoryMessage) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *HistoryMessage) GetPrevMid() *UUIDValue {
	if m != nil {
		return m.PrevMid
	}
	return nil
}

func (m *HistoryMessage) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *HistoryMessage) GetMessage() *MessageContent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *HistoryMessage) GetState() MessageState {
	if m != nil {
		return m.State
	}
	return MessageState_MESSAGESTATE_UNKNOWN
}

func (m *HistoryMessage) GetReactions() []*MessageReaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

func (m *HistoryMessage) GetAttribute() *MessageAttributes {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *HistoryMessage) GetForward() *ReferencedMessages {
	if x, ok := m.GetAttach().(*HistoryMessage_Forward); ok {
		return x.Forward
	}
	return nil
}

func (m *HistoryMessage) GetReply() *ReferencedMessages {
	if x, ok := m.GetAttach().(*HistoryMessage_Reply); ok {
		return x.Reply
	}
	return nil
}

func (m *HistoryMessage) GetEditedAt() *google_protobuf.Int64Value {
	if m != nil {
		return m.EditedAt
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HistoryMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HistoryMessage_OneofMarshaler, _HistoryMessage_OneofUnmarshaler, _HistoryMessage_OneofSizer, []interface{}{
		(*HistoryMessage_Forward)(nil),
		(*HistoryMessage_Reply)(nil),
	}
}

func _HistoryMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HistoryMessage)
	// attach
	switch x := m.Attach.(type) {
	case *HistoryMessage_Forward:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Forward); err != nil {
			return err
		}
	case *HistoryMessage_Reply:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reply); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HistoryMessage.Attach has unexpected type %T", x)
	}
	return nil
}

func _HistoryMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HistoryMessage)
	switch tag {
	case 13: // attach.forward
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReferencedMessages)
		err := b.DecodeMessage(msg)
		m.Attach = &HistoryMessage_Forward{msg}
		return true, err
	case 14: // attach.reply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReferencedMessages)
		err := b.DecodeMessage(msg)
		m.Attach = &HistoryMessage_Reply{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HistoryMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HistoryMessage)
	// attach
	switch x := m.Attach.(type) {
	case *HistoryMessage_Forward:
		s := proto.Size(x.Forward)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HistoryMessage_Reply:
		s := proto.Size(x.Reply)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Loading history of chat
type RequestLoadHistory struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Date int64    `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	// / forward, backward or both
	LoadMode      ListLoadMode         `protobuf:"varint,5,opt,name=load_mode,json=loadMode,enum=dialog.ListLoadMode" json:"load_mode,omitempty"`
	Limit         int32                `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Optimizations []UpdateOptimization `protobuf:"varint,6,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
}

func (m *RequestLoadHistory) Reset()                    { *m = RequestLoadHistory{} }
func (m *RequestLoadHistory) String() string            { return proto.CompactTextString(m) }
func (*RequestLoadHistory) ProtoMessage()               {}
func (*RequestLoadHistory) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{85} }

func (m *RequestLoadHistory) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestLoadHistory) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *RequestLoadHistory) GetLoadMode() ListLoadMode {
	if m != nil {
		return m.LoadMode
	}
	return ListLoadMode_LISTLOADMODE_UNKNOWN
}

func (m *RequestLoadHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RequestLoadHistory) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

type ResponseLoadHistory struct {
	History    []*HistoryMessage `protobuf:"bytes,1,rep,name=history" json:"history,omitempty"`
	Users      []*User           `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	UserPeers  []*UserOutPeer    `protobuf:"bytes,4,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	Groups     []*Group          `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	GroupPeers []*GroupOutPeer   `protobuf:"bytes,6,rep,name=group_peers,json=groupPeers" json:"group_peers,omitempty"`
	// / counter of unread messages
	Counter *google_protobuf.Int32Value `protobuf:"bytes,7,opt,name=counter" json:"counter,omitempty"`
	// / date, related to this unread counter
	CounterDate int64 `protobuf:"varint,8,opt,name=counter_date,json=counterDate" json:"counter_date,omitempty"`
}

func (m *ResponseLoadHistory) Reset()                    { *m = ResponseLoadHistory{} }
func (m *ResponseLoadHistory) String() string            { return proto.CompactTextString(m) }
func (*ResponseLoadHistory) ProtoMessage()               {}
func (*ResponseLoadHistory) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{86} }

func (m *ResponseLoadHistory) GetHistory() []*HistoryMessage {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *ResponseLoadHistory) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseLoadHistory) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

func (m *ResponseLoadHistory) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseLoadHistory) GetGroupPeers() []*GroupOutPeer {
	if m != nil {
		return m.GroupPeers
	}
	return nil
}

func (m *ResponseLoadHistory) GetCounter() *google_protobuf.Int32Value {
	if m != nil {
		return m.Counter
	}
	return nil
}

func (m *ResponseLoadHistory) GetCounterDate() int64 {
	if m != nil {
		return m.CounterDate
	}
	return 0
}

// Conversation from history
// peer
// unreadCount
// sortDate date of conversation for sorting
// senderUid Sender of top message (may be zero)
// isFavourite Is dialog favourite
// rid Random ID of top message (may be zero)
// mid Message id
// date Date of top message (can't be zero)
// message Content of message
// firstUnreadDate Date of first unread message
// attributes Optional top message attributes
// pinnedMessages Optional pinned messages
// historyMessage Optional last messages
type Dialog struct {
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	// / counter of unread messages
	UnreadCount int32                      `protobuf:"varint,3,opt,name=unread_count,json=unreadCount" json:"unread_count,omitempty"`
	SortDate    int64                      `protobuf:"varint,4,opt,name=sort_date,json=sortDate" json:"sort_date,omitempty"`
	SenderUid   int32                      `protobuf:"varint,5,opt,name=sender_uid,json=senderUid" json:"sender_uid,omitempty"`
	IsFavourite *google_protobuf.BoolValue `protobuf:"bytes,13,opt,name=is_favourite,json=isFavourite" json:"is_favourite,omitempty"`
	// / Message id
	Mid *UUIDValue `protobuf:"bytes,12,opt,name=mid" json:"mid,omitempty"`
	// / last action date
	Date int64 `protobuf:"varint,7,opt,name=date" json:"date,omitempty"`
	// / last message content
	Message         *MessageContent    `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	State           MessageState       `protobuf:"varint,9,opt,name=state,enum=dialog.MessageState" json:"state,omitempty"`
	FirstUnreadDate int64              `protobuf:"varint,10,opt,name=first_unread_date,json=firstUnreadDate" json:"first_unread_date,omitempty"`
	Attributes      *MessageAttributes `protobuf:"bytes,11,opt,name=attributes" json:"attributes,omitempty"`
	PinnedMessages  *PinnedMessages    `protobuf:"bytes,14,opt,name=pinned_messages,json=pinnedMessages" json:"pinned_messages,omitempty"`
	// / last message in this dialog
	HistoryMessage *HistoryMessage `protobuf:"bytes,15,opt,name=history_message,json=historyMessage" json:"history_message,omitempty"`
}

func (m *Dialog) Reset()                    { *m = Dialog{} }
func (m *Dialog) String() string            { return proto.CompactTextString(m) }
func (*Dialog) ProtoMessage()               {}
func (*Dialog) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{87} }

func (m *Dialog) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Dialog) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *Dialog) GetSortDate() int64 {
	if m != nil {
		return m.SortDate
	}
	return 0
}

func (m *Dialog) GetSenderUid() int32 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *Dialog) GetIsFavourite() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsFavourite
	}
	return nil
}

func (m *Dialog) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *Dialog) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Dialog) GetMessage() *MessageContent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Dialog) GetState() MessageState {
	if m != nil {
		return m.State
	}
	return MessageState_MESSAGESTATE_UNKNOWN
}

func (m *Dialog) GetFirstUnreadDate() int64 {
	if m != nil {
		return m.FirstUnreadDate
	}
	return 0
}

func (m *Dialog) GetAttributes() *MessageAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Dialog) GetPinnedMessages() *PinnedMessages {
	if m != nil {
		return m.PinnedMessages
	}
	return nil
}

func (m *Dialog) GetHistoryMessage() *HistoryMessage {
	if m != nil {
		return m.HistoryMessage
	}
	return nil
}

// Loading conversation history
type RequestLoadDialogs struct {
	MinDate       int64                `protobuf:"varint,1,opt,name=min_date,json=minDate" json:"min_date,omitempty"`
	Limit         int32                `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Optimizations []UpdateOptimization `protobuf:"varint,3,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
	Filters       []DialogsFilter      `protobuf:"varint,4,rep,packed,name=filters,enum=dialog.DialogsFilter" json:"filters,omitempty"`
	PeersToLoad   []*Peer              `protobuf:"bytes,5,rep,name=peers_to_load,json=peersToLoad" json:"peers_to_load,omitempty"`
}

func (m *RequestLoadDialogs) Reset()                    { *m = RequestLoadDialogs{} }
func (m *RequestLoadDialogs) String() string            { return proto.CompactTextString(m) }
func (*RequestLoadDialogs) ProtoMessage()               {}
func (*RequestLoadDialogs) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{88} }

func (m *RequestLoadDialogs) GetMinDate() int64 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *RequestLoadDialogs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RequestLoadDialogs) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

func (m *RequestLoadDialogs) GetFilters() []DialogsFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *RequestLoadDialogs) GetPeersToLoad() []*Peer {
	if m != nil {
		return m.PeersToLoad
	}
	return nil
}

// / Contains dialogs and related peers and entities
type ResponseLoadDialogs struct {
	Groups     []*Group        `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	Users      []*User         `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	Dialogs    []*Dialog       `protobuf:"bytes,3,rep,name=dialogs" json:"dialogs,omitempty"`
	UserPeers  []*UserOutPeer  `protobuf:"bytes,4,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	GroupPeers []*GroupOutPeer `protobuf:"bytes,5,rep,name=group_peers,json=groupPeers" json:"group_peers,omitempty"`
}

func (m *ResponseLoadDialogs) Reset()                    { *m = ResponseLoadDialogs{} }
func (m *ResponseLoadDialogs) String() string            { return proto.CompactTextString(m) }
func (*ResponseLoadDialogs) ProtoMessage()               {}
func (*ResponseLoadDialogs) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{89} }

func (m *ResponseLoadDialogs) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseLoadDialogs) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseLoadDialogs) GetDialogs() []*Dialog {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

func (m *ResponseLoadDialogs) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

func (m *ResponseLoadDialogs) GetGroupPeers() []*GroupOutPeer {
	if m != nil {
		return m.GroupPeers
	}
	return nil
}

// Dialog index from history. Used in client side pagination
type DialogIndex struct {
	// / The peer for the conversation
	Peer *Peer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	// / The timestamp for the top message
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *DialogIndex) Reset()                    { *m = DialogIndex{} }
func (m *DialogIndex) String() string            { return proto.CompactTextString(m) }
func (*DialogIndex) ProtoMessage()               {}
func (*DialogIndex) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{90} }

func (m *DialogIndex) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *DialogIndex) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// *
// Fetches dialog index (short info about all user's dialogs).
// Used in client side pagination.
type RequestFetchDialogIndex struct {
}

func (m *RequestFetchDialogIndex) Reset()                    { *m = RequestFetchDialogIndex{} }
func (m *RequestFetchDialogIndex) String() string            { return proto.CompactTextString(m) }
func (*RequestFetchDialogIndex) ProtoMessage()               {}
func (*RequestFetchDialogIndex) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{91} }

type ResponseFetchDialogIndex struct {
	DialogIndices []*DialogIndex `protobuf:"bytes,1,rep,name=dialog_indices,json=dialogIndices" json:"dialog_indices,omitempty"`
}

func (m *ResponseFetchDialogIndex) Reset()                    { *m = ResponseFetchDialogIndex{} }
func (m *ResponseFetchDialogIndex) String() string            { return proto.CompactTextString(m) }
func (*ResponseFetchDialogIndex) ProtoMessage()               {}
func (*ResponseFetchDialogIndex) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{92} }

func (m *ResponseFetchDialogIndex) GetDialogIndices() []*DialogIndex {
	if m != nil {
		return m.DialogIndices
	}
	return nil
}

// Loading archived messages - deprecated
type RequestLoadArchived struct {
	NextOffset    *google_protobuf.BytesValue `protobuf:"bytes,1,opt,name=next_offset,json=nextOffset" json:"next_offset,omitempty"`
	Limit         int32                       `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Optimizations []UpdateOptimization        `protobuf:"varint,3,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
}

func (m *RequestLoadArchived) Reset()                    { *m = RequestLoadArchived{} }
func (m *RequestLoadArchived) String() string            { return proto.CompactTextString(m) }
func (*RequestLoadArchived) ProtoMessage()               {}
func (*RequestLoadArchived) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{93} }

func (m *RequestLoadArchived) GetNextOffset() *google_protobuf.BytesValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

func (m *RequestLoadArchived) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RequestLoadArchived) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

// / deprecated
type ResponseLoadArchived struct {
	Groups     []*Group                    `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	Users      []*User                     `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	Dialogs    []*Dialog                   `protobuf:"bytes,3,rep,name=dialogs" json:"dialogs,omitempty"`
	UserPeers  []*UserOutPeer              `protobuf:"bytes,5,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	GroupPeers []*GroupOutPeer             `protobuf:"bytes,6,rep,name=group_peers,json=groupPeers" json:"group_peers,omitempty"`
	NextOffset *google_protobuf.BytesValue `protobuf:"bytes,4,opt,name=next_offset,json=nextOffset" json:"next_offset,omitempty"`
}

func (m *ResponseLoadArchived) Reset()                    { *m = ResponseLoadArchived{} }
func (m *ResponseLoadArchived) String() string            { return proto.CompactTextString(m) }
func (*ResponseLoadArchived) ProtoMessage()               {}
func (*ResponseLoadArchived) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{94} }

func (m *ResponseLoadArchived) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseLoadArchived) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseLoadArchived) GetDialogs() []*Dialog {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

func (m *ResponseLoadArchived) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

func (m *ResponseLoadArchived) GetGroupPeers() []*GroupOutPeer {
	if m != nil {
		return m.GroupPeers
	}
	return nil
}

func (m *ResponseLoadArchived) GetNextOffset() *google_protobuf.BytesValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

// Load all dialogs from grouped list - deprecated
type RequestLoadGroupedDialogs struct {
	Optimizations []UpdateOptimization `protobuf:"varint,1,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
}

func (m *RequestLoadGroupedDialogs) Reset()                    { *m = RequestLoadGroupedDialogs{} }
func (m *RequestLoadGroupedDialogs) String() string            { return proto.CompactTextString(m) }
func (*RequestLoadGroupedDialogs) ProtoMessage()               {}
func (*RequestLoadGroupedDialogs) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{95} }

func (m *RequestLoadGroupedDialogs) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

// / deprecated
type ResponseLoadGroupedDialogs struct {
	Dialogs      []*DialogGroup             `protobuf:"bytes,1,rep,name=dialogs" json:"dialogs,omitempty"`
	Users        []*User                    `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	Groups       []*Group                   `protobuf:"bytes,3,rep,name=groups" json:"groups,omitempty"`
	ShowArchived *google_protobuf.BoolValue `protobuf:"bytes,4,opt,name=show_archived,json=showArchived" json:"show_archived,omitempty"`
	ShowInvite   *google_protobuf.BoolValue `protobuf:"bytes,5,opt,name=show_invite,json=showInvite" json:"show_invite,omitempty"`
	UserPeers    []*UserOutPeer             `protobuf:"bytes,6,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	GroupPeers   []*GroupOutPeer            `protobuf:"bytes,7,rep,name=group_peers,json=groupPeers" json:"group_peers,omitempty"`
}

func (m *ResponseLoadGroupedDialogs) Reset()                    { *m = ResponseLoadGroupedDialogs{} }
func (m *ResponseLoadGroupedDialogs) String() string            { return proto.CompactTextString(m) }
func (*ResponseLoadGroupedDialogs) ProtoMessage()               {}
func (*ResponseLoadGroupedDialogs) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{96} }

func (m *ResponseLoadGroupedDialogs) GetDialogs() []*DialogGroup {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetShowArchived() *google_protobuf.BoolValue {
	if m != nil {
		return m.ShowArchived
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetShowInvite() *google_protobuf.BoolValue {
	if m != nil {
		return m.ShowInvite
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

func (m *ResponseLoadGroupedDialogs) GetGroupPeers() []*GroupOutPeer {
	if m != nil {
		return m.GroupPeers
	}
	return nil
}

// Dialogs order response - deprecated
type ResponseDialogsOrder struct {
	Seq    int32          `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State  []byte         `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Groups []*DialogGroup `protobuf:"bytes,3,rep,name=groups" json:"groups,omitempty"`
}

func (m *ResponseDialogsOrder) Reset()                    { *m = ResponseDialogsOrder{} }
func (m *ResponseDialogsOrder) String() string            { return proto.CompactTextString(m) }
func (*ResponseDialogsOrder) ProtoMessage()               {}
func (*ResponseDialogsOrder) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{97} }

func (m *ResponseDialogsOrder) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseDialogsOrder) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseDialogsOrder) GetGroups() []*DialogGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Hide Dialog from grouped list
type RequestHideDialog struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestHideDialog) Reset()                    { *m = RequestHideDialog{} }
func (m *RequestHideDialog) String() string            { return proto.CompactTextString(m) }
func (*RequestHideDialog) ProtoMessage()               {}
func (*RequestHideDialog) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{98} }

func (m *RequestHideDialog) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Show Dialog in grouped list
type RequestShowDialog struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestShowDialog) Reset()                    { *m = RequestShowDialog{} }
func (m *RequestShowDialog) String() string            { return proto.CompactTextString(m) }
func (*RequestShowDialog) ProtoMessage()               {}
func (*RequestShowDialog) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{99} }

func (m *RequestShowDialog) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Marking dialog as favourite
type RequestFavouriteDialog struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestFavouriteDialog) Reset()                    { *m = RequestFavouriteDialog{} }
func (m *RequestFavouriteDialog) String() string            { return proto.CompactTextString(m) }
func (*RequestFavouriteDialog) ProtoMessage()               {}
func (*RequestFavouriteDialog) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{100} }

func (m *RequestFavouriteDialog) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Making dialog as unfavourite
type RequestUnfavouriteDialog struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestUnfavouriteDialog) Reset()                    { *m = RequestUnfavouriteDialog{} }
func (m *RequestUnfavouriteDialog) String() string            { return proto.CompactTextString(m) }
func (*RequestUnfavouriteDialog) ProtoMessage()               {}
func (*RequestUnfavouriteDialog) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{101} }

func (m *RequestUnfavouriteDialog) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Update about dialog favourite changed
type UpdateDialogFavouriteChanged struct {
	Peer        *Peer                      `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	IsFavourite *google_protobuf.BoolValue `protobuf:"bytes,2,opt,name=is_favourite,json=isFavourite" json:"is_favourite,omitempty"`
}

func (m *UpdateDialogFavouriteChanged) Reset()                    { *m = UpdateDialogFavouriteChanged{} }
func (m *UpdateDialogFavouriteChanged) String() string            { return proto.CompactTextString(m) }
func (*UpdateDialogFavouriteChanged) ProtoMessage()               {}
func (*UpdateDialogFavouriteChanged) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{102} }

func (m *UpdateDialogFavouriteChanged) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateDialogFavouriteChanged) GetIsFavourite() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsFavourite
	}
	return nil
}

// Notifying about dialog open
type RequestNotifyDialogOpened struct {
	Peer *OutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
}

func (m *RequestNotifyDialogOpened) Reset()                    { *m = RequestNotifyDialogOpened{} }
func (m *RequestNotifyDialogOpened) String() string            { return proto.CompactTextString(m) }
func (*RequestNotifyDialogOpened) ProtoMessage()               {}
func (*RequestNotifyDialogOpened) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{103} }

func (m *RequestNotifyDialogOpened) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Pinned messages
type PinnedMessages struct {
	// / Messages ids
	Mids []*UUIDValue `protobuf:"bytes,1,rep,name=mids" json:"mids,omitempty"`
}

func (m *PinnedMessages) Reset()                    { *m = PinnedMessages{} }
func (m *PinnedMessages) String() string            { return proto.CompactTextString(m) }
func (*PinnedMessages) ProtoMessage()               {}
func (*PinnedMessages) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{104} }

func (m *PinnedMessages) GetMids() []*UUIDValue {
	if m != nil {
		return m.Mids
	}
	return nil
}

// Pin message in conversation
type RequestPinMessage struct {
	Peer        *OutPeer   `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid         *UUIDValue `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	LastPinDate int64      `protobuf:"varint,3,opt,name=last_pin_date,json=lastPinDate" json:"last_pin_date,omitempty"`
}

func (m *RequestPinMessage) Reset()                    { *m = RequestPinMessage{} }
func (m *RequestPinMessage) String() string            { return proto.CompactTextString(m) }
func (*RequestPinMessage) ProtoMessage()               {}
func (*RequestPinMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{105} }

func (m *RequestPinMessage) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestPinMessage) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestPinMessage) GetLastPinDate() int64 {
	if m != nil {
		return m.LastPinDate
	}
	return 0
}

// Unpin message in conversation
type RequestUnpinMessage struct {
	Peer        *OutPeer   `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	Mid         *UUIDValue `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	LastPinDate int64      `protobuf:"varint,3,opt,name=last_pin_date,json=lastPinDate" json:"last_pin_date,omitempty"`
}

func (m *RequestUnpinMessage) Reset()                    { *m = RequestUnpinMessage{} }
func (m *RequestUnpinMessage) String() string            { return proto.CompactTextString(m) }
func (*RequestUnpinMessage) ProtoMessage()               {}
func (*RequestUnpinMessage) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{106} }

func (m *RequestUnpinMessage) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestUnpinMessage) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

func (m *RequestUnpinMessage) GetLastPinDate() int64 {
	if m != nil {
		return m.LastPinDate
	}
	return 0
}

// Update about pinned messages changed in conversation
type UpdatePinnedMessagesChanged struct {
	Peer           *Peer           `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	PinnedMessages *PinnedMessages `protobuf:"bytes,2,opt,name=pinned_messages,json=pinnedMessages" json:"pinned_messages,omitempty"`
	ActionDate     int64           `protobuf:"varint,3,opt,name=action_date,json=actionDate" json:"action_date,omitempty"`
}

func (m *UpdatePinnedMessagesChanged) Reset()                    { *m = UpdatePinnedMessagesChanged{} }
func (m *UpdatePinnedMessagesChanged) String() string            { return proto.CompactTextString(m) }
func (*UpdatePinnedMessagesChanged) ProtoMessage()               {}
func (*UpdatePinnedMessagesChanged) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{107} }

func (m *UpdatePinnedMessagesChanged) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdatePinnedMessagesChanged) GetPinnedMessages() *PinnedMessages {
	if m != nil {
		return m.PinnedMessages
	}
	return nil
}

func (m *UpdatePinnedMessagesChanged) GetActionDate() int64 {
	if m != nil {
		return m.ActionDate
	}
	return 0
}

func init() {
	proto.RegisterType((*MessageAttributes)(nil), "dialog.MessageAttributes")
	proto.RegisterType((*QuotedMessage)(nil), "dialog.QuotedMessage")
	proto.RegisterType((*MessageMedia)(nil), "dialog.MessageMedia")
	proto.RegisterType((*WebpageMedia)(nil), "dialog.WebpageMedia")
	proto.RegisterType((*ImageMedia)(nil), "dialog.ImageMedia")
	proto.RegisterType((*AudioMedia)(nil), "dialog.AudioMedia")
	proto.RegisterType((*InteractiveMediaWidget)(nil), "dialog.InteractiveMediaWidget")
	proto.RegisterType((*InteractiveMediaButton)(nil), "dialog.InteractiveMediaButton")
	proto.RegisterType((*InteractiveMediaSelect)(nil), "dialog.InteractiveMediaSelect")
	proto.RegisterType((*InteractiveMediaSelectOption)(nil), "dialog.InteractiveMediaSelectOption")
	proto.RegisterType((*InteractiveMedia)(nil), "dialog.InteractiveMedia")
	proto.RegisterType((*InteractiveMediaTranslation)(nil), "dialog.InteractiveMediaTranslation")
	proto.RegisterType((*InteractiveMediaTranslationGroup)(nil), "dialog.InteractiveMediaTranslationGroup")
	proto.RegisterType((*InteractiveMediaGroup)(nil), "dialog.InteractiveMediaGroup")
	proto.RegisterType((*InteractiveMediaConfirm)(nil), "dialog.InteractiveMediaConfirm")
	proto.RegisterType((*UpdateInteractiveMediaEvent)(nil), "dialog.UpdateInteractiveMediaEvent")
	proto.RegisterType((*RequestDoInteractiveMediaAction)(nil), "dialog.RequestDoInteractiveMediaAction")
	proto.RegisterType((*MessageContent)(nil), "dialog.MessageContent")
	proto.RegisterType((*TextMessage)(nil), "dialog.TextMessage")
	proto.RegisterType((*TextMessageEx)(nil), "dialog.TextMessageEx")
	proto.RegisterType((*TextExMarkdown)(nil), "dialog.TextExMarkdown")
	proto.RegisterType((*TextModernMessage)(nil), "dialog.TextModernMessage")
	proto.RegisterType((*ParagraphStyle)(nil), "dialog.ParagraphStyle")
	proto.RegisterType((*TextModernAttach)(nil), "dialog.TextModernAttach")
	proto.RegisterType((*TextModernField)(nil), "dialog.TextModernField")
	proto.RegisterType((*TextCommand)(nil), "dialog.TextCommand")
	proto.RegisterType((*ServiceMessage)(nil), "dialog.ServiceMessage")
	proto.RegisterType((*ServiceEx)(nil), "dialog.ServiceEx")
	proto.RegisterType((*ServiceExUserInvited)(nil), "dialog.ServiceExUserInvited")
	proto.RegisterType((*ServiceExUserJoined)(nil), "dialog.ServiceExUserJoined")
	proto.RegisterType((*ServiceExUserKicked)(nil), "dialog.ServiceExUserKicked")
	proto.RegisterType((*ServiceExUserLeft)(nil), "dialog.ServiceExUserLeft")
	proto.RegisterType((*ServiceExGroupCreated)(nil), "dialog.ServiceExGroupCreated")
	proto.RegisterType((*ServiceExChangedTitle)(nil), "dialog.ServiceExChangedTitle")
	proto.RegisterType((*ServiceExChangedTopic)(nil), "dialog.ServiceExChangedTopic")
	proto.RegisterType((*ServiceExChangedAbout)(nil), "dialog.ServiceExChangedAbout")
	proto.RegisterType((*ServiceExChangedAvatar)(nil), "dialog.ServiceExChangedAvatar")
	proto.RegisterType((*ServiceExContactRegistered)(nil), "dialog.ServiceExContactRegistered")
	proto.RegisterType((*ServiceExPhoneMissed)(nil), "dialog.ServiceExPhoneMissed")
	proto.RegisterType((*ServiceExPhoneCall)(nil), "dialog.ServiceExPhoneCall")
	proto.RegisterType((*ServiceExPhoneRejected)(nil), "dialog.ServiceExPhoneRejected")
	proto.RegisterType((*ServiceExChatArchived)(nil), "dialog.ServiceExChatArchived")
	proto.RegisterType((*ServiceExChatRestored)(nil), "dialog.ServiceExChatRestored")
	proto.RegisterType((*DocumentMessage)(nil), "dialog.DocumentMessage")
	proto.RegisterType((*DocumentEx)(nil), "dialog.DocumentEx")
	proto.RegisterType((*DocumentExPhoto)(nil), "dialog.DocumentExPhoto")
	proto.RegisterType((*DocumentExVideo)(nil), "dialog.DocumentExVideo")
	proto.RegisterType((*DocumentExVoice)(nil), "dialog.DocumentExVoice")
	proto.RegisterType((*JsonMessage)(nil), "dialog.JsonMessage")
	proto.RegisterType((*UnsupportedMessage)(nil), "dialog.UnsupportedMessage")
	proto.RegisterType((*StickerMessage)(nil), "dialog.StickerMessage")
	proto.RegisterType((*BinaryMessage)(nil), "dialog.BinaryMessage")
	proto.RegisterType((*EmptyMessage)(nil), "dialog.EmptyMessage")
	proto.RegisterType((*DeletedMessage)(nil), "dialog.DeletedMessage")
	proto.RegisterType((*DialogShort)(nil), "dialog.DialogShort")
	proto.RegisterType((*DialogGroup)(nil), "dialog.DialogGroup")
	proto.RegisterType((*MessageReaction)(nil), "dialog.MessageReaction")
	proto.RegisterType((*SearchPredicate)(nil), "dialog.SearchPredicate")
	proto.RegisterType((*RequestSendMessage)(nil), "dialog.RequestSendMessage")
	proto.RegisterType((*RequestUpdateMessage)(nil), "dialog.RequestUpdateMessage")
	proto.RegisterType((*RequestMessageReceived)(nil), "dialog.RequestMessageReceived")
	proto.RegisterType((*RequestMessageRead)(nil), "dialog.RequestMessageRead")
	proto.RegisterType((*RequestDeleteMessageObsolete)(nil), "dialog.RequestDeleteMessageObsolete")
	proto.RegisterType((*RequestClearChat)(nil), "dialog.RequestClearChat")
	proto.RegisterType((*RequestDeleteChat)(nil), "dialog.RequestDeleteChat")
	proto.RegisterType((*RequestArchiveChat)(nil), "dialog.RequestArchiveChat")
	proto.RegisterType((*RequestMessageSetReaction)(nil), "dialog.RequestMessageSetReaction")
	proto.RegisterType((*RequestMessageRemoveReaction)(nil), "dialog.RequestMessageRemoveReaction")
	proto.RegisterType((*ResponseReactionsResponse)(nil), "dialog.ResponseReactionsResponse")
	proto.RegisterType((*UpdateMessage)(nil), "dialog.UpdateMessage")
	proto.RegisterType((*UpdateMessageContentChanged)(nil), "dialog.UpdateMessageContentChanged")
	proto.RegisterType((*UpdateMessageSent)(nil), "dialog.UpdateMessageSent")
	proto.RegisterType((*UpdateMessageReceived)(nil), "dialog.UpdateMessageReceived")
	proto.RegisterType((*UpdateMessageRead)(nil), "dialog.UpdateMessageRead")
	proto.RegisterType((*UpdateMessageReadByMe)(nil), "dialog.UpdateMessageReadByMe")
	proto.RegisterType((*UpdateMessageDelete)(nil), "dialog.UpdateMessageDelete")
	proto.RegisterType((*UpdateChatClear)(nil), "dialog.UpdateChatClear")
	proto.RegisterType((*UpdateChatDelete)(nil), "dialog.UpdateChatDelete")
	proto.RegisterType((*UpdateChatArchive)(nil), "dialog.UpdateChatArchive")
	proto.RegisterType((*UpdateChatGroupsChanged)(nil), "dialog.UpdateChatGroupsChanged")
	proto.RegisterType((*UpdateReactionsUpdate)(nil), "dialog.UpdateReactionsUpdate")
	proto.RegisterType((*UpdateMessageRejectedByHook)(nil), "dialog.UpdateMessageRejectedByHook")
	proto.RegisterType((*UpdateMessageEditRejectedByHook)(nil), "dialog.UpdateMessageEditRejectedByHook")
	proto.RegisterType((*ReferencedMessages)(nil), "dialog.ReferencedMessages")
	proto.RegisterType((*HistoryMessage)(nil), "dialog.HistoryMessage")
	proto.RegisterType((*RequestLoadHistory)(nil), "dialog.RequestLoadHistory")
	proto.RegisterType((*ResponseLoadHistory)(nil), "dialog.ResponseLoadHistory")
	proto.RegisterType((*Dialog)(nil), "dialog.Dialog")
	proto.RegisterType((*RequestLoadDialogs)(nil), "dialog.RequestLoadDialogs")
	proto.RegisterType((*ResponseLoadDialogs)(nil), "dialog.ResponseLoadDialogs")
	proto.RegisterType((*DialogIndex)(nil), "dialog.DialogIndex")
	proto.RegisterType((*RequestFetchDialogIndex)(nil), "dialog.RequestFetchDialogIndex")
	proto.RegisterType((*ResponseFetchDialogIndex)(nil), "dialog.ResponseFetchDialogIndex")
	proto.RegisterType((*RequestLoadArchived)(nil), "dialog.RequestLoadArchived")
	proto.RegisterType((*ResponseLoadArchived)(nil), "dialog.ResponseLoadArchived")
	proto.RegisterType((*RequestLoadGroupedDialogs)(nil), "dialog.RequestLoadGroupedDialogs")
	proto.RegisterType((*ResponseLoadGroupedDialogs)(nil), "dialog.ResponseLoadGroupedDialogs")
	proto.RegisterType((*ResponseDialogsOrder)(nil), "dialog.ResponseDialogsOrder")
	proto.RegisterType((*RequestHideDialog)(nil), "dialog.RequestHideDialog")
	proto.RegisterType((*RequestShowDialog)(nil), "dialog.RequestShowDialog")
	proto.RegisterType((*RequestFavouriteDialog)(nil), "dialog.RequestFavouriteDialog")
	proto.RegisterType((*RequestUnfavouriteDialog)(nil), "dialog.RequestUnfavouriteDialog")
	proto.RegisterType((*UpdateDialogFavouriteChanged)(nil), "dialog.UpdateDialogFavouriteChanged")
	proto.RegisterType((*RequestNotifyDialogOpened)(nil), "dialog.RequestNotifyDialogOpened")
	proto.RegisterType((*PinnedMessages)(nil), "dialog.PinnedMessages")
	proto.RegisterType((*RequestPinMessage)(nil), "dialog.RequestPinMessage")
	proto.RegisterType((*RequestUnpinMessage)(nil), "dialog.RequestUnpinMessage")
	proto.RegisterType((*UpdatePinnedMessagesChanged)(nil), "dialog.UpdatePinnedMessagesChanged")
	proto.RegisterEnum("dialog.InteractiveMediaStyle", InteractiveMediaStyle_name, InteractiveMediaStyle_value)
	proto.RegisterEnum("dialog.MessageState", MessageState_name, MessageState_value)
	proto.RegisterEnum("dialog.ListLoadMode", ListLoadMode_name, ListLoadMode_value)
	proto.RegisterEnum("dialog.DialogsFilter", DialogsFilter_name, DialogsFilter_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Messaging service

type MessagingClient interface {
	// / Interact with a message media (click on button for example)
	DoInteractiveMediaAction(ctx context.Context, in *RequestDoInteractiveMediaAction, opts ...grpc.CallOption) (*ResponseVoid, error)
	SendMessage(ctx context.Context, in *RequestSendMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error)
	UpdateMessage(ctx context.Context, in *RequestUpdateMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error)
	// / Mark message as received by self
	MessageReceived(ctx context.Context, in *RequestMessageReceived, opts ...grpc.CallOption) (*ResponseVoid, error)
	// / Mark message as read by self
	MessageRead(ctx context.Context, in *RequestMessageRead, opts ...grpc.CallOption) (*ResponseVoid, error)
	// / deprecated
	DeleteMessageObsolete(ctx context.Context, in *RequestDeleteMessageObsolete, opts ...grpc.CallOption) (*ResponseSeq, error)
	// / Clear chat history
	ClearChat(ctx context.Context, in *RequestClearChat, opts ...grpc.CallOption) (*ResponseSeq, error)
	DeleteChat(ctx context.Context, in *RequestDeleteChat, opts ...grpc.CallOption) (*ResponseSeq, error)
	// / deprecated
	ArchiveChat(ctx context.Context, in *RequestArchiveChat, opts ...grpc.CallOption) (*ResponseSeq, error)
	// / Add reaction on message (emoji)
	MessageSetReaction(ctx context.Context, in *RequestMessageSetReaction, opts ...grpc.CallOption) (*ResponseReactionsResponse, error)
	MessageRemoveReaction(ctx context.Context, in *RequestMessageRemoveReaction, opts ...grpc.CallOption) (*ResponseReactionsResponse, error)
	// / Load conversation history
	LoadHistory(ctx context.Context, in *RequestLoadHistory, opts ...grpc.CallOption) (*ResponseLoadHistory, error)
	// / Load user's dialogs
	LoadDialogs(ctx context.Context, in *RequestLoadDialogs, opts ...grpc.CallOption) (*ResponseLoadDialogs, error)
	// / Load short info about all user's dialogs
	FetchDialogIndex(ctx context.Context, in *RequestFetchDialogIndex, opts ...grpc.CallOption) (*ResponseFetchDialogIndex, error)
	// / deprecated
	LoadArchived(ctx context.Context, in *RequestLoadArchived, opts ...grpc.CallOption) (*ResponseLoadArchived, error)
	// / deprecated
	LoadGroupedDialogs(ctx context.Context, in *RequestLoadGroupedDialogs, opts ...grpc.CallOption) (*ResponseLoadGroupedDialogs, error)
	// / deprecated
	HideDialog(ctx context.Context, in *RequestHideDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error)
	// / deprecated
	ShowDialog(ctx context.Context, in *RequestShowDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error)
	FavouriteDialog(ctx context.Context, in *RequestFavouriteDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error)
	UnfavouriteDialog(ctx context.Context, in *RequestUnfavouriteDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error)
	NotifyDialogOpened(ctx context.Context, in *RequestNotifyDialogOpened, opts ...grpc.CallOption) (*ResponseVoid, error)
	PinMessage(ctx context.Context, in *RequestPinMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error)
	UnpinMessage(ctx context.Context, in *RequestUnpinMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error)
}

type messagingClient struct {
	cc *grpc.ClientConn
}

func NewMessagingClient(cc *grpc.ClientConn) MessagingClient {
	return &messagingClient{cc}
}

func (c *messagingClient) DoInteractiveMediaAction(ctx context.Context, in *RequestDoInteractiveMediaAction, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := grpc.Invoke(ctx, "/dialog.Messaging/DoInteractiveMediaAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) SendMessage(ctx context.Context, in *RequestSendMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error) {
	out := new(ResponseSeqDate)
	err := grpc.Invoke(ctx, "/dialog.Messaging/SendMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) UpdateMessage(ctx context.Context, in *RequestUpdateMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error) {
	out := new(ResponseSeqDate)
	err := grpc.Invoke(ctx, "/dialog.Messaging/UpdateMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) MessageReceived(ctx context.Context, in *RequestMessageReceived, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := grpc.Invoke(ctx, "/dialog.Messaging/MessageReceived", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) MessageRead(ctx context.Context, in *RequestMessageRead, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := grpc.Invoke(ctx, "/dialog.Messaging/MessageRead", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) DeleteMessageObsolete(ctx context.Context, in *RequestDeleteMessageObsolete, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := grpc.Invoke(ctx, "/dialog.Messaging/DeleteMessageObsolete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) ClearChat(ctx context.Context, in *RequestClearChat, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := grpc.Invoke(ctx, "/dialog.Messaging/ClearChat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) DeleteChat(ctx context.Context, in *RequestDeleteChat, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := grpc.Invoke(ctx, "/dialog.Messaging/DeleteChat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) ArchiveChat(ctx context.Context, in *RequestArchiveChat, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := grpc.Invoke(ctx, "/dialog.Messaging/ArchiveChat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) MessageSetReaction(ctx context.Context, in *RequestMessageSetReaction, opts ...grpc.CallOption) (*ResponseReactionsResponse, error) {
	out := new(ResponseReactionsResponse)
	err := grpc.Invoke(ctx, "/dialog.Messaging/MessageSetReaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) MessageRemoveReaction(ctx context.Context, in *RequestMessageRemoveReaction, opts ...grpc.CallOption) (*ResponseReactionsResponse, error) {
	out := new(ResponseReactionsResponse)
	err := grpc.Invoke(ctx, "/dialog.Messaging/MessageRemoveReaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) LoadHistory(ctx context.Context, in *RequestLoadHistory, opts ...grpc.CallOption) (*ResponseLoadHistory, error) {
	out := new(ResponseLoadHistory)
	err := grpc.Invoke(ctx, "/dialog.Messaging/LoadHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) LoadDialogs(ctx context.Context, in *RequestLoadDialogs, opts ...grpc.CallOption) (*ResponseLoadDialogs, error) {
	out := new(ResponseLoadDialogs)
	err := grpc.Invoke(ctx, "/dialog.Messaging/LoadDialogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) FetchDialogIndex(ctx context.Context, in *RequestFetchDialogIndex, opts ...grpc.CallOption) (*ResponseFetchDialogIndex, error) {
	out := new(ResponseFetchDialogIndex)
	err := grpc.Invoke(ctx, "/dialog.Messaging/FetchDialogIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) LoadArchived(ctx context.Context, in *RequestLoadArchived, opts ...grpc.CallOption) (*ResponseLoadArchived, error) {
	out := new(ResponseLoadArchived)
	err := grpc.Invoke(ctx, "/dialog.Messaging/LoadArchived", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) LoadGroupedDialogs(ctx context.Context, in *RequestLoadGroupedDialogs, opts ...grpc.CallOption) (*ResponseLoadGroupedDialogs, error) {
	out := new(ResponseLoadGroupedDialogs)
	err := grpc.Invoke(ctx, "/dialog.Messaging/LoadGroupedDialogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) HideDialog(ctx context.Context, in *RequestHideDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error) {
	out := new(ResponseDialogsOrder)
	err := grpc.Invoke(ctx, "/dialog.Messaging/HideDialog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) ShowDialog(ctx context.Context, in *RequestShowDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error) {
	out := new(ResponseDialogsOrder)
	err := grpc.Invoke(ctx, "/dialog.Messaging/ShowDialog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) FavouriteDialog(ctx context.Context, in *RequestFavouriteDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error) {
	out := new(ResponseDialogsOrder)
	err := grpc.Invoke(ctx, "/dialog.Messaging/FavouriteDialog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) UnfavouriteDialog(ctx context.Context, in *RequestUnfavouriteDialog, opts ...grpc.CallOption) (*ResponseDialogsOrder, error) {
	out := new(ResponseDialogsOrder)
	err := grpc.Invoke(ctx, "/dialog.Messaging/UnfavouriteDialog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) NotifyDialogOpened(ctx context.Context, in *RequestNotifyDialogOpened, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := grpc.Invoke(ctx, "/dialog.Messaging/NotifyDialogOpened", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) PinMessage(ctx context.Context, in *RequestPinMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error) {
	out := new(ResponseSeqDate)
	err := grpc.Invoke(ctx, "/dialog.Messaging/PinMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) UnpinMessage(ctx context.Context, in *RequestUnpinMessage, opts ...grpc.CallOption) (*ResponseSeqDate, error) {
	out := new(ResponseSeqDate)
	err := grpc.Invoke(ctx, "/dialog.Messaging/UnpinMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Messaging service

type MessagingServer interface {
	// / Interact with a message media (click on button for example)
	DoInteractiveMediaAction(context.Context, *RequestDoInteractiveMediaAction) (*ResponseVoid, error)
	SendMessage(context.Context, *RequestSendMessage) (*ResponseSeqDate, error)
	UpdateMessage(context.Context, *RequestUpdateMessage) (*ResponseSeqDate, error)
	// / Mark message as received by self
	MessageReceived(context.Context, *RequestMessageReceived) (*ResponseVoid, error)
	// / Mark message as read by self
	MessageRead(context.Context, *RequestMessageRead) (*ResponseVoid, error)
	// / deprecated
	DeleteMessageObsolete(context.Context, *RequestDeleteMessageObsolete) (*ResponseSeq, error)
	// / Clear chat history
	ClearChat(context.Context, *RequestClearChat) (*ResponseSeq, error)
	DeleteChat(context.Context, *RequestDeleteChat) (*ResponseSeq, error)
	// / deprecated
	ArchiveChat(context.Context, *RequestArchiveChat) (*ResponseSeq, error)
	// / Add reaction on message (emoji)
	MessageSetReaction(context.Context, *RequestMessageSetReaction) (*ResponseReactionsResponse, error)
	MessageRemoveReaction(context.Context, *RequestMessageRemoveReaction) (*ResponseReactionsResponse, error)
	// / Load conversation history
	LoadHistory(context.Context, *RequestLoadHistory) (*ResponseLoadHistory, error)
	// / Load user's dialogs
	LoadDialogs(context.Context, *RequestLoadDialogs) (*ResponseLoadDialogs, error)
	// / Load short info about all user's dialogs
	FetchDialogIndex(context.Context, *RequestFetchDialogIndex) (*ResponseFetchDialogIndex, error)
	// / deprecated
	LoadArchived(context.Context, *RequestLoadArchived) (*ResponseLoadArchived, error)
	// / deprecated
	LoadGroupedDialogs(context.Context, *RequestLoadGroupedDialogs) (*ResponseLoadGroupedDialogs, error)
	// / deprecated
	HideDialog(context.Context, *RequestHideDialog) (*ResponseDialogsOrder, error)
	// / deprecated
	ShowDialog(context.Context, *RequestShowDialog) (*ResponseDialogsOrder, error)
	FavouriteDialog(context.Context, *RequestFavouriteDialog) (*ResponseDialogsOrder, error)
	UnfavouriteDialog(context.Context, *RequestUnfavouriteDialog) (*ResponseDialogsOrder, error)
	NotifyDialogOpened(context.Context, *RequestNotifyDialogOpened) (*ResponseVoid, error)
	PinMessage(context.Context, *RequestPinMessage) (*ResponseSeqDate, error)
	UnpinMessage(context.Context, *RequestUnpinMessage) (*ResponseSeqDate, error)
}

func RegisterMessagingServer(s *grpc.Server, srv MessagingServer) {
	s.RegisterService(&_Messaging_serviceDesc, srv)
}

func _Messaging_DoInteractiveMediaAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDoInteractiveMediaAction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).DoInteractiveMediaAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/DoInteractiveMediaAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).DoInteractiveMediaAction(ctx, req.(*RequestDoInteractiveMediaAction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).SendMessage(ctx, req.(*RequestSendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_UpdateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUpdateMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).UpdateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/UpdateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).UpdateMessage(ctx, req.(*RequestUpdateMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_MessageReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessageReceived)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).MessageReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/MessageReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).MessageReceived(ctx, req.(*RequestMessageReceived))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_MessageRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessageRead)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).MessageRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/MessageRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).MessageRead(ctx, req.(*RequestMessageRead))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_DeleteMessageObsolete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeleteMessageObsolete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).DeleteMessageObsolete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/DeleteMessageObsolete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).DeleteMessageObsolete(ctx, req.(*RequestDeleteMessageObsolete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_ClearChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClearChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).ClearChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/ClearChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).ClearChat(ctx, req.(*RequestClearChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_DeleteChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeleteChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).DeleteChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/DeleteChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).DeleteChat(ctx, req.(*RequestDeleteChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_ArchiveChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestArchiveChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).ArchiveChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/ArchiveChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).ArchiveChat(ctx, req.(*RequestArchiveChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_MessageSetReaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessageSetReaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).MessageSetReaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/MessageSetReaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).MessageSetReaction(ctx, req.(*RequestMessageSetReaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_MessageRemoveReaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessageRemoveReaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).MessageRemoveReaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/MessageRemoveReaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).MessageRemoveReaction(ctx, req.(*RequestMessageRemoveReaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_LoadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).LoadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/LoadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).LoadHistory(ctx, req.(*RequestLoadHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_LoadDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).LoadDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/LoadDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).LoadDialogs(ctx, req.(*RequestLoadDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_FetchDialogIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestFetchDialogIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).FetchDialogIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/FetchDialogIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).FetchDialogIndex(ctx, req.(*RequestFetchDialogIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_LoadArchived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadArchived)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).LoadArchived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/LoadArchived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).LoadArchived(ctx, req.(*RequestLoadArchived))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_LoadGroupedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadGroupedDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).LoadGroupedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/LoadGroupedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).LoadGroupedDialogs(ctx, req.(*RequestLoadGroupedDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_HideDialog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHideDialog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).HideDialog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/HideDialog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).HideDialog(ctx, req.(*RequestHideDialog))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_ShowDialog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestShowDialog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).ShowDialog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/ShowDialog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).ShowDialog(ctx, req.(*RequestShowDialog))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_FavouriteDialog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestFavouriteDialog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).FavouriteDialog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/FavouriteDialog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).FavouriteDialog(ctx, req.(*RequestFavouriteDialog))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_UnfavouriteDialog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUnfavouriteDialog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).UnfavouriteDialog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/UnfavouriteDialog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).UnfavouriteDialog(ctx, req.(*RequestUnfavouriteDialog))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_NotifyDialogOpened_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNotifyDialogOpened)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).NotifyDialogOpened(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/NotifyDialogOpened",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).NotifyDialogOpened(ctx, req.(*RequestNotifyDialogOpened))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_PinMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPinMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).PinMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/PinMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).PinMessage(ctx, req.(*RequestPinMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_UnpinMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUnpinMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).UnpinMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Messaging/UnpinMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).UnpinMessage(ctx, req.(*RequestUnpinMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Messaging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.Messaging",
	HandlerType: (*MessagingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoInteractiveMediaAction",
			Handler:    _Messaging_DoInteractiveMediaAction_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Messaging_SendMessage_Handler,
		},
		{
			MethodName: "UpdateMessage",
			Handler:    _Messaging_UpdateMessage_Handler,
		},
		{
			MethodName: "MessageReceived",
			Handler:    _Messaging_MessageReceived_Handler,
		},
		{
			MethodName: "MessageRead",
			Handler:    _Messaging_MessageRead_Handler,
		},
		{
			MethodName: "DeleteMessageObsolete",
			Handler:    _Messaging_DeleteMessageObsolete_Handler,
		},
		{
			MethodName: "ClearChat",
			Handler:    _Messaging_ClearChat_Handler,
		},
		{
			MethodName: "DeleteChat",
			Handler:    _Messaging_DeleteChat_Handler,
		},
		{
			MethodName: "ArchiveChat",
			Handler:    _Messaging_ArchiveChat_Handler,
		},
		{
			MethodName: "MessageSetReaction",
			Handler:    _Messaging_MessageSetReaction_Handler,
		},
		{
			MethodName: "MessageRemoveReaction",
			Handler:    _Messaging_MessageRemoveReaction_Handler,
		},
		{
			MethodName: "LoadHistory",
			Handler:    _Messaging_LoadHistory_Handler,
		},
		{
			MethodName: "LoadDialogs",
			Handler:    _Messaging_LoadDialogs_Handler,
		},
		{
			MethodName: "FetchDialogIndex",
			Handler:    _Messaging_FetchDialogIndex_Handler,
		},
		{
			MethodName: "LoadArchived",
			Handler:    _Messaging_LoadArchived_Handler,
		},
		{
			MethodName: "LoadGroupedDialogs",
			Handler:    _Messaging_LoadGroupedDialogs_Handler,
		},
		{
			MethodName: "HideDialog",
			Handler:    _Messaging_HideDialog_Handler,
		},
		{
			MethodName: "ShowDialog",
			Handler:    _Messaging_ShowDialog_Handler,
		},
		{
			MethodName: "FavouriteDialog",
			Handler:    _Messaging_FavouriteDialog_Handler,
		},
		{
			MethodName: "UnfavouriteDialog",
			Handler:    _Messaging_UnfavouriteDialog_Handler,
		},
		{
			MethodName: "NotifyDialogOpened",
			Handler:    _Messaging_NotifyDialogOpened_Handler,
		},
		{
			MethodName: "PinMessage",
			Handler:    _Messaging_PinMessage_Handler,
		},
		{
			MethodName: "UnpinMessage",
			Handler:    _Messaging_UnpinMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messaging.proto",
}

func init() { proto.RegisterFile("messaging.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 5719 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x7c, 0xdd, 0x6f, 0x1b, 0xd9,
	0x75, 0xb8, 0x86, 0x14, 0x25, 0xf1, 0x90, 0xa2, 0xa4, 0x6b, 0xc9, 0x96, 0x65, 0xaf, 0x3f, 0xc6,
	0xbb, 0xbf, 0xf5, 0x2a, 0xbb, 0x92, 0x57, 0x8e, 0xbd, 0x58, 0x7b, 0x37, 0x36, 0x2d, 0x51, 0x26,
	0x77, 0x25, 0x4b, 0xa1, 0x24, 0x6f, 0x8c, 0xe0, 0x57, 0x76, 0xc4, 0xb9, 0x22, 0xc7, 0x26, 0x67,
	0xe8, 0x99, 0xa1, 0x64, 0xa5, 0x40, 0x5b, 0x14, 0x6d, 0x83, 0x04, 0x09, 0xd0, 0xa0, 0x0d, 0xd0,
	0x3e, 0x24, 0x6d, 0xfa, 0x52, 0x20, 0x7f, 0x40, 0xd3, 0xd7, 0x7e, 0x00, 0x41, 0x81, 0xa0, 0x45,
	0x91, 0xbe, 0xb6, 0x0f, 0x8b, 0x3e, 0x05, 0x28, 0x02, 0xf4, 0x21, 0x2f, 0x0d, 0x8a, 0xe2, 0x7e,
	0xcd, 0xdc, 0xf9, 0xe2, 0x97, 0xe3, 0xee, 0xb6, 0x4f, 0xd2, 0xcc, 0xf9, 0xbc, 0xe7, 0x9e, 0x73,
	0xee, 0x39, 0xf7, 0xde, 0x21, 0xcc, 0xb4, 0xb1, 0xe3, 0x68, 0x0d, 0xc3, 0x6c, 0xac, 0x74, 0x6c,
	0xcb, 0xb5, 0xd0, 0x84, 0x6e, 0x68, 0x2d, 0xab, 0xb1, 0x74, 0xa9, 0x61, 0x59, 0x8d, 0x16, 0x5e,
	0xa5, 0x6f, 0x0f, 0xbb, 0x47, 0xab, 0x27, 0xb6, 0xd6, 0xe9, 0x60, 0xdb, 0x61, 0x78, 0x4b, 0x17,
	0x39, 0x5c, 0xeb, 0x18, 0xab, 0x9a, 0x69, 0x5a, 0xae, 0xe6, 0x1a, 0x96, 0x29, 0xa0, 0x73, 0x3a,
	0x3e, 0x32, 0x4c, 0x43, 0x7e, 0x75, 0xa6, 0x6d, 0x38, 0x75, 0xdc, 0x6a, 0x69, 0x26, 0xb6, 0xba,
	0xe2, 0x65, 0xbe, 0x61, 0x5b, 0xdd, 0x8e, 0x78, 0xca, 0x75, 0xb0, 0x2f, 0x60, 0xa1, 0x8d, 0x75,
	0x43, 0xab, 0x69, 0xa6, 0x5e, 0x3b, 0x32, 0x5a, 0xd8, 0xc3, 0xe9, 0x3a, 0x12, 0x8e, 0x53, 0xd7,
	0x5a, 0x5a, 0xe7, 0x70, 0x95, 0xff, 0x65, 0xaf, 0xd5, 0x7f, 0x4a, 0xc1, 0xdc, 0x36, 0x1d, 0x17,
	0x2e, 0xba, 0xae, 0x6d, 0x1c, 0x76, 0x5d, 0xec, 0xa0, 0x2d, 0xc8, 0x1b, 0x4e, 0xad, 0x8d, 0x4d,
	0xa2, 0x15, 0xd6, 0x17, 0x95, 0x2b, 0xca, 0xf5, 0xdc, 0xda, 0xd2, 0x0a, 0x1b, 0xc8, 0x8a, 0x18,
	0xe8, 0xca, 0x03, 0xcb, 0x6a, 0x3d, 0xd6, 0x5a, 0x5d, 0xfc, 0x60, 0xfa, 0x9b, 0x3f, 0xbb, 0x91,
	0x85, 0xc9, 0x63, 0xc3, 0x31, 0x0e, 0x5b, 0xb8, 0x9a, 0x33, 0x9c, 0x6d, 0x41, 0x8d, 0x76, 0xa1,
	0x60, 0x38, 0xb5, 0xa6, 0xd1, 0x68, 0xb6, 0x8c, 0x46, 0xd3, 0xc5, 0xfa, 0x62, 0x6a, 0x58, 0x7e,
	0xd3, 0x86, 0x53, 0xf6, 0xe9, 0xd1, 0x47, 0x90, 0x33, 0x9c, 0x9a, 0x69, 0xb9, 0xc6, 0x91, 0x81,
	0xf5, 0xc5, 0xf4, 0xb0, 0xec, 0xc0, 0x70, 0x1e, 0x71, 0x62, 0xb4, 0x0b, 0x33, 0x86, 0x53, 0xb3,
	0xcc, 0xd6, 0x69, 0xed, 0xc8, 0xb2, 0x6b, 0xa7, 0x56, 0x77, 0x71, 0x7c, 0x58, 0x7e, 0x79, 0xc3,
	0xd9, 0x31, 0x5b, 0xa7, 0x9b, 0x96, 0xfd, 0xc4, 0xea, 0xaa, 0x7f, 0x95, 0x82, 0xe9, 0x2f, 0x77,
	0x2d, 0x17, 0xeb, 0xdc, 0xb2, 0xe8, 0x6d, 0x00, 0xe6, 0x3c, 0xb8, 0x66, 0x30, 0x6b, 0xa6, 0xc3,
	0x2c, 0xb2, 0x1c, 0xa1, 0xa2, 0xa3, 0x5b, 0x30, 0xd3, 0xe9, 0x1e, 0xb6, 0x8c, 0x7a, 0x8d, 0x4e,
	0x39, 0x21, 0x21, 0x06, 0xcb, 0x44, 0x8c, 0xc2, 0xb0, 0x1e, 0x12, 0xa4, 0x8a, 0x8e, 0x6e, 0x42,
	0xc1, 0xc1, 0xa6, 0x8e, 0xed, 0x1a, 0x99, 0x77, 0x42, 0x95, 0x8e, 0xa3, 0xca, 0x33, 0xa4, 0x03,
	0x07, 0xdb, 0x15, 0x1d, 0xdd, 0x80, 0xbc, 0xd0, 0x4c, 0xd7, 0x5c, 0x4c, 0x87, 0x1e, 0xd1, 0x2d,
	0xc7, 0x51, 0x36, 0x34, 0x17, 0xa3, 0xaf, 0xc2, 0xd9, 0xe7, 0x74, 0x70, 0x35, 0x41, 0x58, 0xb7,
	0x4c, 0x17, 0x9b, 0xee, 0x62, 0x86, 0x9a, 0xed, 0xec, 0x0a, 0x0b, 0x8b, 0x15, 0x3e, 0xf8, 0x75,
	0x06, 0x0d, 0xf3, 0x9c, 0x7f, 0x2e, 0x5b, 0x88, 0x23, 0xa9, 0x5f, 0x4f, 0x41, 0x9e, 0xbf, 0xda,
	0x26, 0x3e, 0x8d, 0x3e, 0x84, 0xc9, 0x13, 0x7c, 0xd8, 0xd1, 0x1a, 0x98, 0x3b, 0xe1, 0xbc, 0x60,
	0xff, 0x09, 0x7b, 0x4d, 0xd1, 0xc2, 0xcc, 0x05, 0x0d, 0x7a, 0x0f, 0x32, 0x46, 0x9b, 0x10, 0x33,
	0x8f, 0x43, 0x82, 0xb8, 0xd2, 0x4e, 0x22, 0x65, 0xf8, 0x84, 0x50, 0xeb, 0xea, 0x86, 0xc5, 0x7d,
	0xcb, 0x23, 0x2c, 0x92, 0x97, 0xf1, 0x84, 0x14, 0x1f, 0x6d, 0xc2, 0xa4, 0x56, 0xa7, 0xc1, 0xbc,
	0x38, 0x71, 0x25, 0x7d, 0x3d, 0xb7, 0xf6, 0x9a, 0x27, 0xd3, 0x74, 0xb1, 0x4d, 0x60, 0xc7, 0x4c,
	0x32, 0x9d, 0xb7, 0x88, 0xe6, 0x9c, 0x58, 0xfd, 0xe3, 0x14, 0xe4, 0xe5, 0x21, 0xa2, 0x0f, 0x20,
	0xdd, 0xb5, 0x5b, 0xdc, 0x0a, 0x17, 0x23, 0xbe, 0xb9, 0xe7, 0xda, 0x86, 0xd9, 0x60, 0xde, 0x99,
	0xff, 0xe6, 0xcf, 0x6e, 0x4c, 0xc1, 0x44, 0xd3, 0xd0, 0x75, 0x6c, 0x56, 0x09, 0x19, 0xba, 0x0f,
	0x19, 0xd7, 0x70, 0x5b, 0xc2, 0x10, 0xc3, 0xd0, 0x33, 0x42, 0xb4, 0x05, 0x39, 0x1d, 0x3b, 0x75,
	0xdb, 0xe8, 0x10, 0x05, 0xb9, 0x5d, 0x86, 0xe1, 0x23, 0x93, 0xa3, 0x3b, 0x62, 0x62, 0x58, 0xac,
	0x2d, 0x04, 0x26, 0x66, 0xcb, 0xaa, 0xd3, 0x14, 0x19, 0x3f, 0x37, 0x6a, 0x19, 0xc0, 0x9f, 0x3f,
	0x9f, 0x93, 0x32, 0x12, 0x27, 0x7f, 0x42, 0x09, 0x27, 0x36, 0xe7, 0x21, 0x4e, 0x14, 0x25, 0x91,
	0x13, 0x25, 0x51, 0xff, 0x59, 0x81, 0xb3, 0xe1, 0x09, 0xfe, 0xc4, 0xd0, 0x1b, 0xd8, 0x45, 0x5f,
	0x81, 0xb3, 0x46, 0x08, 0xf2, 0xa0, 0xeb, 0xba, 0x96, 0xc9, 0xe5, 0x5c, 0x4a, 0x72, 0x10, 0x86,
	0x55, 0x1e, 0xab, 0x26, 0xd0, 0xc7, 0x71, 0xde, 0xc3, 0x2d, 0x5c, 0x77, 0xf9, 0x2c, 0x27, 0x72,
	0x66, 0x58, 0x71, 0x9c, 0x19, 0xe4, 0xc1, 0x04, 0x8c, 0x1f, 0x5a, 0xfa, 0xa9, 0xfa, 0xdb, 0x31,
	0xc3, 0xe2, 0xc2, 0xaf, 0x41, 0xe6, 0x98, 0xcc, 0x32, 0x1d, 0x45, 0x36, 0x62, 0x16, 0x0a, 0x43,
	0x45, 0xc8, 0xb4, 0xb4, 0x43, 0xdc, 0x1a, 0xc8, 0xed, 0xc2, 0x2c, 0x28, 0xa5, 0xfa, 0xcb, 0x18,
	0x15, 0x98, 0x96, 0x68, 0x1b, 0x26, 0xad, 0x0e, 0x8b, 0x35, 0x85, 0xc6, 0xda, 0xeb, 0xbd, 0x07,
	0xbc, 0xd3, 0x89, 0x9b, 0x41, 0xc1, 0xe3, 0x57, 0xa0, 0x2c, 0xda, 0x85, 0x69, 0x1d, 0x1f, 0x69,
	0xdd, 0x96, 0x5b, 0x63, 0xc6, 0x49, 0x0f, 0xcf, 0x2a, 0xcf, 0x39, 0x50, 0xa0, 0xda, 0x84, 0x8b,
	0xbd, 0x06, 0x33, 0xd8, 0x34, 0x5c, 0x93, 0x47, 0x96, 0x4d, 0x30, 0xf4, 0xef, 0xa7, 0x60, 0x36,
	0x2c, 0x0a, 0xbd, 0x06, 0x29, 0xbe, 0x62, 0x45, 0xc8, 0x52, 0x86, 0x8e, 0x4a, 0x30, 0x71, 0x42,
	0xbd, 0xbc, 0x9f, 0xc7, 0xb1, 0x58, 0x08, 0xb3, 0xe0, 0xc4, 0xe8, 0x01, 0x64, 0x1c, 0xf7, 0xb4,
	0xc5, 0xcc, 0x55, 0x48, 0x4e, 0x99, 0x7b, 0x04, 0x29, 0xa2, 0x3e, 0x25, 0x45, 0x65, 0x98, 0xac,
	0x5b, 0xe6, 0x91, 0x61, 0xb7, 0x79, 0x4e, 0xb9, 0x9c, 0xc4, 0x65, 0x9d, 0xa1, 0x45, 0xfc, 0x80,
	0x93, 0xab, 0x1a, 0x5c, 0x08, 0x93, 0xec, 0xdb, 0x9a, 0xe9, 0xb4, 0x68, 0x02, 0xe8, 0x67, 0x12,
	0x6f, 0x42, 0x52, 0xc9, 0x13, 0xa2, 0x7e, 0x4f, 0x81, 0x2b, 0x3d, 0x64, 0xd0, 0xa5, 0x01, 0xbd,
	0x05, 0x53, 0x2d, 0xcd, 0x6c, 0x74, 0x45, 0x72, 0x8b, 0x30, 0xf3, 0xc0, 0xe8, 0x11, 0x4c, 0xf1,
	0xd5, 0xd8, 0x59, 0x4c, 0xd1, 0x50, 0xb8, 0x96, 0x34, 0x7a, 0x49, 0x4c, 0x84, 0x9f, 0xe0, 0xa1,
	0xfe, 0x38, 0x05, 0x0b, 0xb1, 0xeb, 0x15, 0x2a, 0xfa, 0xeb, 0x1b, 0x8b, 0xb9, 0xc5, 0xc4, 0xf4,
	0x95, 0xb0, 0xb4, 0x7d, 0xee, 0xd6, 0xa2, 0xaf, 0x42, 0xde, 0xf5, 0x8d, 0xe2, 0x2c, 0x8e, 0xd3,
	0x71, 0x5d, 0x1f, 0xc0, 0x80, 0xb1, 0x4b, 0x78, 0x80, 0x99, 0xfa, 0x83, 0x14, 0x9c, 0x4b, 0x70,
	0x40, 0x74, 0x0f, 0xc6, 0x5d, 0xfc, 0xc2, 0x1d, 0x68, 0x4d, 0x0f, 0x09, 0xa1, 0x84, 0x24, 0x63,
	0x0d, 0x6e, 0xc9, 0xb0, 0x27, 0x32, 0x53, 0xde, 0x85, 0x94, 0xf5, 0x6c, 0x94, 0x34, 0x95, 0xb2,
	0x9e, 0xa1, 0x12, 0x4c, 0xea, 0x86, 0xd3, 0x36, 0x1c, 0x87, 0xc7, 0xdc, 0x50, 0x1c, 0x04, 0xad,
	0xfa, 0x97, 0x0a, 0x5c, 0x38, 0xe8, 0x90, 0xfa, 0x33, 0x6c, 0xa9, 0xd2, 0x31, 0x36, 0x5d, 0xb4,
	0x06, 0xe9, 0xb6, 0x21, 0xba, 0x90, 0x39, 0x31, 0x2f, 0x07, 0x07, 0x95, 0x8d, 0x58, 0xbe, 0x04,
	0x99, 0x47, 0x69, 0xaa, 0x6f, 0x94, 0xa6, 0x7b, 0xa4, 0xcd, 0xcb, 0x90, 0xee, 0x1a, 0x3a, 0x1d,
	0x5a, 0xa4, 0x8c, 0x26, 0x10, 0xf5, 0x47, 0x0a, 0x5c, 0xae, 0xe2, 0xe7, 0x5d, 0xec, 0xb8, 0x1b,
	0x56, 0x58, 0xf7, 0x22, 0x75, 0xf7, 0xcf, 0x4a, 0xf9, 0x3b, 0x17, 0x3f, 0xbd, 0x77, 0x1e, 0xce,
	0x19, 0xed, 0x15, 0xbd, 0xd5, 0x58, 0x69, 0xd8, 0x9d, 0xfa, 0xca, 0x43, 0xbb, 0x53, 0xe7, 0xda,
	0xaa, 0xff, 0x3a, 0x0e, 0x85, 0x60, 0xed, 0x8d, 0xde, 0x83, 0x1c, 0x71, 0x2a, 0xfe, 0x96, 0x2b,
	0x7c, 0x46, 0x28, 0xbc, 0xef, 0x83, 0xca, 0x63, 0x55, 0x19, 0x13, 0xdd, 0x27, 0x8d, 0x87, 0x7d,
	0x6c, 0xd4, 0xb1, 0xa0, 0x4d, 0x05, 0x3b, 0x81, 0xbd, 0x00, 0xb4, 0x3c, 0x56, 0x0d, 0xe1, 0xa3,
	0x75, 0x98, 0xd1, 0xad, 0x7a, 0x97, 0x34, 0x9c, 0x82, 0x05, 0xf3, 0xc8, 0x73, 0x82, 0xc5, 0x46,
	0x10, 0x5c, 0x1e, 0xab, 0x86, 0x29, 0x88, 0xfe, 0x4f, 0x1d, 0xcb, 0x14, 0x0c, 0xc6, 0x83, 0xfa,
	0x7f, 0xe4, 0x83, 0x88, 0xfe, 0x12, 0x26, 0xda, 0x02, 0xd4, 0x35, 0x9d, 0x6e, 0xa7, 0x63, 0xd9,
	0x7e, 0x47, 0xc2, 0xbb, 0x99, 0x25, 0x6f, 0xc2, 0x22, 0x18, 0xe5, 0xb1, 0x6a, 0x0c, 0x1d, 0xb5,
	0x86, 0x6b, 0xd4, 0x9f, 0x61, 0x5b, 0x70, 0x9a, 0x08, 0x59, 0x23, 0x00, 0xa5, 0xd6, 0x08, 0xbc,
	0x41, 0x1f, 0xc2, 0xf4, 0xa1, 0x61, 0x6a, 0xf6, 0xa9, 0x60, 0x30, 0x19, 0xac, 0x47, 0x1f, 0xc8,
	0xc0, 0xf2, 0x58, 0x35, 0x88, 0x8d, 0xee, 0x40, 0x1e, 0xb7, 0x3b, 0xae, 0x47, 0x3d, 0x15, 0xec,
	0x9b, 0x4a, 0x12, 0xac, 0x3c, 0x56, 0x0d, 0xe0, 0x12, 0xe5, 0x75, 0xdc, 0xc2, 0x92, 0x19, 0xb2,
	0x41, 0xe5, 0x37, 0x02, 0x50, 0xa2, 0x7c, 0x10, 0xdf, 0xab, 0x1c, 0xbf, 0x91, 0x82, 0x9c, 0xe4,
	0x33, 0xe8, 0x8a, 0x94, 0xeb, 0xb2, 0xa1, 0x6c, 0xcc, 0x92, 0xd9, 0x5b, 0x64, 0x0d, 0x33, 0x59,
	0x0a, 0x26, 0x6b, 0x58, 0x26, 0x66, 0x79, 0x62, 0x60, 0x74, 0x1b, 0xd2, 0x84, 0x57, 0x3a, 0x68,
	0x17, 0x49, 0x5c, 0xe9, 0x45, 0x24, 0xae, 0x88, 0x88, 0xf7, 0x21, 0x43, 0xb7, 0x4a, 0x78, 0x8a,
	0x9f, 0x0f, 0xb5, 0xaa, 0xf1, 0x7d, 0x5d, 0x9b, 0x37, 0x07, 0x80, 0x5f, 0xb8, 0xd8, 0x74, 0xa8,
	0x7e, 0x19, 0x4a, 0x9f, 0xf3, 0x3a, 0x04, 0xf3, 0x34, 0xb2, 0xc5, 0xe0, 0x63, 0xab, 0xff, 0xa2,
	0xc0, 0x74, 0x40, 0x39, 0x62, 0x67, 0x32, 0xe6, 0xd2, 0x8b, 0x6d, 0xcd, 0x7e, 0xa6, 0x5b, 0x27,
	0xa2, 0x17, 0x38, 0x2b, 0x8f, 0xc5, 0x87, 0x12, 0x3b, 0x07, 0xf1, 0x51, 0x05, 0xe6, 0x68, 0x0c,
	0x5a, 0x3a, 0xb6, 0xcd, 0x60, 0xdc, 0x9d, 0x0f, 0x18, 0x44, 0x46, 0x28, 0x8f, 0x55, 0xa3, 0x54,
	0x22, 0xf0, 0xd7, 0xad, 0x76, 0x5b, 0x33, 0xc5, 0x6e, 0x4a, 0x20, 0xf0, 0x39, 0x48, 0x04, 0x3e,
	0x7f, 0xf4, 0xe6, 0xfa, 0x0e, 0x14, 0x82, 0xfa, 0xa2, 0xeb, 0x30, 0xd5, 0x16, 0x23, 0x4b, 0xc5,
	0xcc, 0xb8, 0x07, 0x55, 0xbf, 0x9e, 0x86, 0xb9, 0x88, 0x9e, 0xe8, 0x4b, 0x43, 0xac, 0x8c, 0x71,
	0xbe, 0xf4, 0xff, 0x61, 0x9e, 0xef, 0x85, 0x98, 0x5a, 0x1b, 0xd7, 0xac, 0x63, 0x6c, 0xdb, 0x86,
	0x3e, 0xd2, 0x3a, 0x89, 0x18, 0xa3, 0x47, 0x5a, 0x1b, 0xef, 0x70, 0x36, 0xe8, 0xcb, 0xb0, 0xc0,
	0xd9, 0x77, 0x9a, 0x96, 0x6b, 0xf9, 0xfc, 0x99, 0xed, 0x0a, 0x9e, 0x5f, 0x1c, 0x6b, 0xae, 0x66,
	0x87, 0x39, 0x9e, 0x61, 0xb4, 0xbb, 0x84, 0xd4, 0x63, 0x79, 0x57, 0x94, 0xc0, 0xe3, 0x41, 0x47,
	0xd8, 0xd5, 0x6c, 0xad, 0x61, 0x6b, 0x9d, 0x66, 0xaf, 0xda, 0x77, 0x1d, 0xa6, 0x34, 0xd7, 0xd5,
	0xea, 0x4d, 0x2c, 0x5c, 0x73, 0x31, 0xea, 0x03, 0x45, 0x8a, 0x11, 0x09, 0x2a, 0x41, 0xa8, 0x7e,
	0xaa, 0x40, 0x21, 0x28, 0x0d, 0xed, 0x42, 0xc1, 0x69, 0x5a, 0x27, 0xb5, 0x8e, 0x78, 0x3d, 0xfc,
	0x4e, 0xe0, 0x34, 0x61, 0xe0, 0xb1, 0x45, 0x25, 0x98, 0xf1, 0x98, 0xd5, 0xea, 0x56, 0xcb, 0xb2,
	0xf9, 0x9c, 0x4c, 0x0b, 0x85, 0xd7, 0xc9, 0xcb, 0x30, 0x97, 0x82, 0x47, 0x44, 0xc1, 0xe8, 0x3d,
	0x98, 0x3a, 0x6c, 0x70, 0xfa, 0xf4, 0x00, 0xf4, 0x93, 0x87, 0x0d, 0xfa, 0x5e, 0xfd, 0x4e, 0x1a,
	0x66, 0xc3, 0x26, 0xf1, 0x0b, 0x52, 0x65, 0xd4, 0x82, 0xb4, 0x0c, 0x59, 0xfa, 0x4f, 0xad, 0x6b,
	0x8f, 0xd4, 0x3e, 0x4e, 0x51, 0xea, 0x03, 0xbb, 0x85, 0xd6, 0x01, 0x18, 0x27, 0xa3, 0xee, 0x55,
	0xb6, 0x83, 0xed, 0x69, 0x30, 0x0d, 0x2a, 0x75, 0xcb, 0xf4, 0xc2, 0x67, 0x7c, 0xc4, 0xf0, 0xf1,
	0x9c, 0x31, 0x33, 0x82, 0x33, 0xae, 0xc2, 0xc4, 0x91, 0x81, 0x5b, 0xba, 0xd8, 0x00, 0x3b, 0x17,
	0x75, 0xc5, 0x4d, 0x02, 0xaf, 0x72, 0x34, 0xf5, 0x07, 0x0a, 0xcc, 0x84, 0x60, 0xa4, 0xc4, 0xf1,
	0xa7, 0x24, 0x9b, 0x50, 0xbb, 0x0e, 0xd2, 0x6a, 0xa1, 0x0d, 0x98, 0x32, 0x9c, 0x9a, 0xd3, 0xb4,
	0x6c, 0x77, 0xf8, 0x8d, 0xe2, 0x49, 0xc3, 0xd9, 0x23, 0x94, 0xea, 0x13, 0xb6, 0x9a, 0xf1, 0xcc,
	0x87, 0xde, 0x24, 0xcd, 0x26, 0x4b, 0x97, 0xb1, 0x0a, 0x0a, 0x28, 0xba, 0x0a, 0xe3, 0x9a, 0xdd,
	0x70, 0xe2, 0x35, 0xa4, 0x20, 0xf5, 0x08, 0x0a, 0xc1, 0x02, 0x69, 0x80, 0xb5, 0x72, 0x4d, 0x5e,
	0x00, 0xe7, 0x42, 0x75, 0x96, 0xbf, 0xf8, 0xd5, 0xad, 0x76, 0x47, 0xab, 0xbb, 0x74, 0xf1, 0x53,
	0xbf, 0x35, 0x05, 0x59, 0x0f, 0x03, 0xdd, 0x07, 0x7a, 0x3c, 0x50, 0x31, 0x8f, 0x0d, 0xd7, 0xdb,
	0xe1, 0xbf, 0x18, 0xe1, 0x74, 0xe0, 0xe3, 0x90, 0xec, 0x2f, 0x91, 0xa0, 0x0f, 0x01, 0xc8, 0xe3,
	0x47, 0x96, 0x61, 0x7a, 0x5b, 0xfa, 0x17, 0x62, 0x19, 0x30, 0x94, 0xf2, 0x58, 0x55, 0x22, 0x10,
	0xe4, 0x1f, 0x93, 0xd2, 0x47, 0x2c, 0x3a, 0xf1, 0xe4, 0x0c, 0x45, 0x90, 0xb3, 0x27, 0x92, 0x01,
	0xc8, 0xd3, 0x16, 0x3e, 0x12, 0x6e, 0x7e, 0x3e, 0x96, 0x98, 0x20, 0x94, 0xc7, 0xaa, 0x1e, 0x32,
	0x5a, 0x07, 0x76, 0x92, 0xb2, 0x6e, 0x63, 0x8d, 0x8c, 0x9c, 0xb9, 0xf8, 0x6b, 0x11, 0xe2, 0x87,
	0x12, 0x12, 0xa9, 0x93, 0x64, 0x22, 0xc2, 0xa4, 0xde, 0xd4, 0xcc, 0x06, 0xd6, 0xf7, 0xa9, 0x97,
	0x4e, 0x24, 0x30, 0x59, 0x97, 0x90, 0x08, 0x13, 0x99, 0x48, 0x66, 0x62, 0x75, 0x8c, 0x3a, 0x2f,
	0xf3, 0x92, 0x99, 0x10, 0x24, 0x99, 0x09, 0x79, 0x96, 0x98, 0x14, 0x0f, 0xad, 0xae, 0xcb, 0xab,
	0xbd, 0x44, 0x26, 0x14, 0x49, 0x62, 0x42, 0x9f, 0xd1, 0x26, 0x4c, 0x8b, 0x67, 0xba, 0x62, 0xf1,
	0xaa, 0xef, 0x52, 0x22, 0x17, 0x8a, 0x45, 0x4a, 0xcf, 0x00, 0x19, 0xaa, 0xc2, 0x5c, 0xdd, 0x32,
	0x5d, 0xe2, 0x72, 0xb8, 0x61, 0x38, 0x2e, 0xb6, 0xb1, 0xbe, 0x08, 0x94, 0x97, 0x1a, 0xe5, 0x15,
	0xc6, 0x24, 0xd5, 0x49, 0x84, 0x9c, 0x38, 0x6a, 0xa7, 0x69, 0x99, 0x78, 0xdb, 0x70, 0x1c, 0xac,
	0x2f, 0xe6, 0x12, 0x1c, 0x75, 0xd7, 0xc7, 0x21, 0x8e, 0x2a, 0x91, 0xa0, 0x3b, 0x90, 0xa5, 0x8f,
	0xeb, 0x5a, 0xab, 0xb5, 0x98, 0x0f, 0x96, 0xf5, 0x41, 0x7a, 0x82, 0x51, 0x1e, 0xab, 0xfa, 0xe8,
	0xc4, 0x32, 0xf4, 0xa1, 0x8a, 0x9f, 0xe2, 0x3a, 0x71, 0x97, 0xe9, 0x04, 0xcb, 0xec, 0xca, 0x58,
	0xc4, 0x32, 0x01, 0x32, 0x3e, 0x4d, 0x6e, 0xd1, 0xae, 0x37, 0x8d, 0x63, 0xac, 0x2f, 0x16, 0x92,
	0xa7, 0xc9, 0x43, 0xe2, 0xd3, 0xe4, 0x3d, 0x0b, 0x26, 0x55, 0xec, 0xb8, 0x16, 0xb1, 0xec, 0x4c,
	0x0f, 0x26, 0x02, 0x49, 0x30, 0x11, 0xcf, 0x5e, 0xd1, 0xb6, 0x09, 0xf3, 0x71, 0x51, 0x8e, 0x56,
	0x20, 0x67, 0xb0, 0x7f, 0x6b, 0x5d, 0xde, 0xb7, 0x66, 0xa2, 0xe7, 0x67, 0x0c, 0xe3, 0xc0, 0xd0,
	0xd5, 0x05, 0x38, 0x13, 0x13, 0xec, 0xea, 0x7a, 0xe8, 0x35, 0x0f, 0xdb, 0xb7, 0x01, 0x9e, 0xd1,
	0xff, 0x92, 0x99, 0x67, 0x19, 0x02, 0xe1, 0x7d, 0x06, 0xe6, 0x22, 0xc1, 0xac, 0x9e, 0x83, 0x85,
	0xd8, 0x20, 0x55, 0xef, 0x4a, 0x00, 0x39, 0xf0, 0x90, 0x1a, 0x5c, 0x4c, 0xe2, 0x56, 0x70, 0xf5,
	0x49, 0x0c, 0x31, 0x0d, 0x30, 0x52, 0x1c, 0xd0, 0xf0, 0x1c, 0xa5, 0x38, 0x20, 0x84, 0x71, 0xac,
	0x59, 0xd8, 0xdd, 0x87, 0x8c, 0x46, 0x83, 0x76, 0x04, 0xd6, 0x94, 0x50, 0xdd, 0x81, 0xb3, 0xf1,
	0xb1, 0x89, 0x6e, 0xc1, 0x84, 0xc6, 0x62, 0x59, 0xe9, 0x55, 0x93, 0x8a, 0x15, 0x82, 0x23, 0xab,
	0x1f, 0xc2, 0x52, 0x72, 0x80, 0x8a, 0x0d, 0x11, 0x25, 0x71, 0x43, 0xe4, 0xac, 0xe4, 0x54, 0x52,
	0x44, 0xaa, 0xf7, 0x00, 0x45, 0x23, 0x8d, 0x74, 0x7c, 0x7a, 0xd7, 0xa6, 0xc5, 0x4c, 0x3c, 0x4f,
	0x0f, 0xac, 0x2e, 0x4a, 0x03, 0x0d, 0x84, 0x5a, 0xc0, 0x1d, 0xe4, 0xe8, 0x89, 0x00, 0x44, 0x04,
	0xa8, 0xff, 0x98, 0x82, 0x99, 0xd0, 0x7e, 0x02, 0xfa, 0x7f, 0x30, 0x79, 0x64, 0xb4, 0x92, 0x8f,
	0x67, 0x27, 0x08, 0xb4, 0xa2, 0xa3, 0x77, 0x20, 0xa7, 0xd5, 0xeb, 0xd8, 0x71, 0x6a, 0x4d, 0xcd,
	0x69, 0xd2, 0x55, 0x2f, 0x2d, 0xa6, 0x46, 0x27, 0xf6, 0xb7, 0xab, 0xc0, 0x10, 0xca, 0x9a, 0xd3,
	0x44, 0xcb, 0x90, 0xa5, 0x6c, 0x1d, 0xe3, 0x6b, 0x38, 0xfe, 0x38, 0x76, 0x8a, 0xc0, 0xf7, 0x8c,
	0xaf, 0xd1, 0x55, 0x9f, 0x34, 0x2b, 0x74, 0x35, 0x8b, 0xac, 0xfa, 0x04, 0x42, 0xb8, 0xb5, 0x8d,
	0x36, 0xae, 0xb9, 0xa7, 0x1d, 0x56, 0x9a, 0x45, 0x77, 0x84, 0x09, 0x7c, 0xff, 0xb4, 0x83, 0xd1,
	0x6d, 0xc8, 0xb8, 0xcd, 0x6e, 0xfb, 0x90, 0x2f, 0x4d, 0x5e, 0x8d, 0xb0, 0xa9, 0x39, 0xee, 0x3e,
	0x01, 0x84, 0x3d, 0x80, 0xa1, 0xa3, 0x9b, 0xac, 0xb2, 0x98, 0x0a, 0x1e, 0x7b, 0x0a, 0x73, 0x25,
	0x94, 0x16, 0x7f, 0xa1, 0x00, 0xf8, 0x28, 0x68, 0x15, 0x32, 0xb4, 0x2f, 0xe2, 0xae, 0x77, 0x2e,
	0xca, 0x85, 0xf6, 0x3e, 0xe5, 0xb1, 0x2a, 0xc3, 0x23, 0x04, 0xc7, 0x86, 0x8e, 0x2d, 0x5e, 0x45,
	0xc4, 0x10, 0x3c, 0x26, 0x60, 0x42, 0x40, 0xf1, 0x28, 0x81, 0x65, 0xd4, 0x13, 0xb7, 0x89, 0x4a,
	0x2f, 0x1e, 0x13, 0x30, 0x25, 0x20, 0xff, 0x78, 0x59, 0xef, 0x63, 0x7f, 0xea, 0xb9, 0x16, 0xe8,
	0x02, 0x28, 0x27, 0xf1, 0xee, 0xa7, 0x9c, 0x10, 0x60, 0x33, 0xfe, 0xf4, 0x5d, 0x69, 0xaa, 0xc7,
	0x32, 0x33, 0xaa, 0xe1, 0xe8, 0xcc, 0x02, 0xc1, 0x90, 0xee, 0x1d, 0x0c, 0x1f, 0x04, 0xe4, 0x92,
	0xf1, 0x0d, 0x13, 0x4a, 0xb7, 0x21, 0x27, 0x6d, 0x86, 0xa1, 0x37, 0x61, 0xca, 0xd6, 0x4e, 0x6a,
	0x4f, 0x1d, 0x4e, 0x19, 0x76, 0xbd, 0x49, 0x5b, 0x3b, 0x21, 0xf8, 0xea, 0x3c, 0xa0, 0xe8, 0x26,
	0x98, 0xfa, 0xb7, 0xe3, 0x50, 0x08, 0xee, 0x68, 0xa1, 0x0a, 0x00, 0xdf, 0xd1, 0xaa, 0x79, 0x1b,
	0x9f, 0x17, 0x22, 0xb9, 0xad, 0x62, 0xba, 0x37, 0xd7, 0x62, 0x8b, 0xee, 0x2c, 0xa7, 0xae, 0xe8,
	0x68, 0x1b, 0xf2, 0x47, 0x9a, 0xe3, 0xd6, 0x3a, 0x36, 0x3e, 0x36, 0xf0, 0x89, 0x57, 0x65, 0x46,
	0x0a, 0xf8, 0x53, 0x17, 0x3b, 0xf1, 0x37, 0x51, 0x08, 0xfd, 0x2e, 0x23, 0x47, 0x45, 0xc8, 0xd2,
	0x83, 0xdf, 0xda, 0xad, 0x77, 0xd7, 0x86, 0xea, 0xad, 0xa6, 0x28, 0xd9, 0xad, 0x77, 0xd7, 0x7c,
	0x16, 0x6b, 0xb7, 0x6e, 0x0f, 0x75, 0x78, 0xcd, 0x58, 0xac, 0xdd, 0xba, 0x8d, 0x7e, 0x0d, 0x16,
	0x84, 0x7d, 0xea, 0x56, 0xab, 0x85, 0xe9, 0x3e, 0x31, 0x31, 0x55, 0x66, 0x68, 0x53, 0x9d, 0xe1,
	0x8c, 0xd6, 0x3d, 0x3e, 0x15, 0x1d, 0x59, 0x70, 0x29, 0x86, 0xbf, 0x9c, 0xb6, 0x26, 0x92, 0x05,
	0xdd, 0xfe, 0x62, 0xac, 0xa0, 0x0b, 0x11, 0x41, 0x45, 0x3f, 0xcb, 0xdd, 0x87, 0x0c, 0x6e, 0x5b,
	0x4f, 0x0d, 0x5e, 0xc1, 0x0e, 0xb5, 0x8e, 0x51, 0x42, 0xf5, 0xd7, 0x61, 0x3a, 0xb0, 0xab, 0x49,
	0xaa, 0x10, 0x7e, 0xad, 0xa4, 0xe6, 0x6a, 0x8d, 0xf8, 0x26, 0x0b, 0x38, 0xc6, 0xbe, 0xd6, 0x20,
	0x2b, 0x53, 0xdb, 0x69, 0x50, 0xff, 0xc8, 0x47, 0x52, 0x54, 0xdb, 0x69, 0xa8, 0x05, 0xc8, 0xcb,
	0x3b, 0x9f, 0xea, 0x63, 0x28, 0x04, 0xf7, 0x32, 0x79, 0xa3, 0xd8, 0xb2, 0xea, 0x5a, 0x6b, 0xf0,
	0x6d, 0x0e, 0x21, 0x63, 0xd2, 0x70, 0xc8, 0xc4, 0xb7, 0xd4, 0x6f, 0x2a, 0x90, 0xdb, 0xa0, 0xee,
	0x40, 0x1b, 0x47, 0xb4, 0x0a, 0xe3, 0x1d, 0x8c, 0xc5, 0x2a, 0x9c, 0xf7, 0x3a, 0x69, 0x8c, 0x23,
	0x9b, 0x14, 0x14, 0x91, 0xb5, 0x96, 0x5d, 0xd3, 0xc5, 0x76, 0x7c, 0xaa, 0x10, 0x50, 0xd2, 0x5a,
	0x26, 0x5f, 0xd9, 0xa1, 0x20, 0xf5, 0x0f, 0x3c, 0x65, 0xd8, 0xe1, 0xdd, 0x00, 0x85, 0x10, 0xb1,
	0xe4, 0x33, 0x7c, 0x1a, 0xdf, 0xb0, 0x12, 0x08, 0xfa, 0x00, 0x26, 0xd9, 0x20, 0x9c, 0xc5, 0x34,
	0x6d, 0xf0, 0xbd, 0xad, 0x42, 0x69, 0xdc, 0x31, 0x67, 0x3d, 0x94, 0x44, 0x7d, 0x02, 0x33, 0xdc,
	0xe0, 0x55, 0xcc, 0x0e, 0x04, 0x49, 0x1b, 0x4f, 0x6f, 0xaa, 0xd1, 0x03, 0xc5, 0xc8, 0x78, 0x19,
	0x8c, 0x8c, 0xb6, 0x6e, 0xe9, 0x09, 0xad, 0x3e, 0x05, 0x11, 0xd6, 0x7b, 0x58, 0xb3, 0xeb, 0xcd,
	0x5d, 0x1b, 0xeb, 0x46, 0x5d, 0x73, 0xbd, 0xc1, 0x28, 0x89, 0x83, 0x79, 0x03, 0x26, 0xe8, 0x36,
	0x01, 0xdb, 0x72, 0x8e, 0xe0, 0x70, 0xa0, 0xfa, 0xc3, 0x71, 0x40, 0xfc, 0xe8, 0x64, 0x0f, 0x9b,
	0x9e, 0xcb, 0xac, 0x05, 0x26, 0x77, 0x46, 0xd8, 0x61, 0xa7, 0xeb, 0x26, 0xcf, 0xef, 0x65, 0x48,
	0xdb, 0xfc, 0x6e, 0x56, 0x64, 0xd6, 0x08, 0x04, 0xdd, 0x83, 0xc9, 0x76, 0xe0, 0x0c, 0x63, 0xc0,
	0x1b, 0x55, 0x82, 0x0a, 0xdd, 0x86, 0x59, 0xf9, 0x46, 0x1b, 0xb1, 0x1f, 0x4d, 0x2d, 0x99, 0x98,
	0x5b, 0x75, 0xfc, 0xda, 0x1a, 0x29, 0xae, 0xd1, 0x3a, 0x4c, 0x1e, 0x59, 0xf6, 0x89, 0x66, 0xeb,
	0x7c, 0xf9, 0xf7, 0xba, 0xa4, 0x2a, 0x3e, 0xc2, 0x36, 0x36, 0xeb, 0x5e, 0xb0, 0x38, 0x11, 0xe1,
	0x9c, 0x12, 0xdd, 0x83, 0x8c, 0x8d, 0x3b, 0xad, 0x53, 0xde, 0x42, 0x0e, 0xc1, 0x82, 0xd1, 0xa1,
	0x4d, 0x80, 0x8e, 0x98, 0x3f, 0x67, 0x11, 0x82, 0x5b, 0x48, 0xa1, 0xf9, 0x8d, 0x64, 0x04, 0x9f,
	0x92, 0x74, 0x1a, 0x27, 0x4d, 0xc3, 0xc5, 0xb5, 0x96, 0xe1, 0xb8, 0x8b, 0xb9, 0x38, 0xd7, 0xca,
	0x52, 0x84, 0x2d, 0xc3, 0x71, 0x09, 0xf6, 0x61, 0x4b, 0xab, 0x3f, 0x63, 0xd8, 0xf9, 0x58, 0x6c,
	0x8a, 0x40, 0xb0, 0xfb, 0x9c, 0xad, 0xfd, 0xbb, 0x02, 0xf3, 0xfc, 0x7f, 0x76, 0xaa, 0xe9, 0xbb,
	0x0b, 0x3d, 0x0a, 0x4c, 0x0d, 0x73, 0x14, 0xf8, 0x08, 0x66, 0xba, 0x94, 0x89, 0x77, 0xdf, 0x8e,
	0x2f, 0x5c, 0x03, 0x7a, 0x45, 0x81, 0x53, 0x0b, 0x1d, 0x6e, 0x42, 0xa1, 0x45, 0x56, 0x54, 0xac,
	0xd3, 0x16, 0x4f, 0x73, 0xe3, 0xf3, 0x47, 0x9e, 0x20, 0x95, 0x28, 0x4e, 0xb1, 0xdf, 0x78, 0xbf,
	0xad, 0xc0, 0x59, 0xfe, 0xbf, 0x17, 0xda, 0x75, 0x4c, 0x3b, 0xd6, 0x51, 0x02, 0x44, 0xe4, 0xb5,
	0x74, 0x62, 0x5e, 0xeb, 0xa3, 0xcf, 0x37, 0x14, 0x2f, 0x58, 0xfd, 0x54, 0xf3, 0x19, 0xe9, 0x62,
	0xc3, 0x45, 0x71, 0x40, 0x4c, 0x57, 0x1b, 0xae, 0xd0, 0xce, 0xa1, 0x63, 0x91, 0x47, 0xf4, 0x45,
	0x18, 0x6f, 0x1b, 0xba, 0xc8, 0xa4, 0xfd, 0x7d, 0x82, 0x62, 0xf7, 0x91, 0xf9, 0xa7, 0x0a, 0xcc,
	0xf2, 0xff, 0xd7, 0x5b, 0x58, 0xb3, 0x49, 0xf3, 0x33, 0xd2, 0xe8, 0xdf, 0x87, 0x39, 0xea, 0x2b,
	0x81, 0x1b, 0xa2, 0xa9, 0x38, 0x53, 0xcc, 0x10, 0xbc, 0x6d, 0xff, 0x96, 0x68, 0x1f, 0x0d, 0xff,
	0x4c, 0x81, 0xb9, 0x80, 0x59, 0x3e, 0x7f, 0x2a, 0x1e, 0x79, 0x3e, 0xc4, 0x1b, 0xca, 0x51, 0x55,
	0xec, 0x23, 0xe7, 0xef, 0x14, 0x38, 0x1f, 0x74, 0xd6, 0x3d, 0xec, 0x7a, 0x4b, 0xe3, 0x28, 0x26,
	0xe1, 0x59, 0x66, 0x7c, 0x98, 0x2c, 0x23, 0x56, 0xd7, 0x74, 0xe2, 0xea, 0xda, 0x67, 0x18, 0x3f,
	0x56, 0x3c, 0x47, 0xf7, 0x62, 0xae, 0x6d, 0x1d, 0xe3, 0xff, 0x7d, 0x23, 0xf9, 0x13, 0x3a, 0x21,
	0x4e, 0xc7, 0x32, 0x1d, 0x4f, 0x7b, 0x47, 0xbc, 0x40, 0xb3, 0x90, 0x76, 0xf0, 0x73, 0xd6, 0x62,
	0x55, 0xc9, 0xbf, 0x68, 0x1e, 0x32, 0x8e, 0x2b, 0xbc, 0x2e, 0x5f, 0x65, 0x0f, 0xe8, 0x16, 0x64,
	0x6d, 0x41, 0xcc, 0x83, 0xfb, 0x5c, 0x28, 0x61, 0x0b, 0xe6, 0x55, 0x1f, 0xf3, 0xce, 0x6b, 0x9f,
	0xde, 0x5b, 0x82, 0xc5, 0xa8, 0x6a, 0x4c, 0xba, 0xfa, 0xf3, 0x71, 0x98, 0x0e, 0x2e, 0x29, 0x43,
	0x97, 0x97, 0x6f, 0x03, 0x88, 0x5b, 0xe2, 0x49, 0xf7, 0xca, 0xb3, 0xfc, 0x86, 0x38, 0xb3, 0x66,
	0x9f, 0xfc, 0x27, 0x26, 0x69, 0x6a, 0x98, 0x49, 0x92, 0x4a, 0x9c, 0xcc, 0x48, 0x25, 0x4e, 0x19,
	0x40, 0xf3, 0x3e, 0x57, 0xe0, 0xed, 0xcc, 0xf9, 0x10, 0x0f, 0xff, 0x7b, 0x86, 0x48, 0x99, 0xe0,
	0xd3, 0xa2, 0x92, 0x5f, 0xf4, 0x0c, 0x5b, 0xb1, 0x94, 0xc7, 0xfc, 0xb2, 0xa7, 0x28, 0xca, 0x1e,
	0x18, 0x9e, 0x09, 0x2f, 0x7c, 0xd6, 0x21, 0x4f, 0xdb, 0x5c, 0xab, 0xeb, 0xd4, 0x88, 0x45, 0x73,
	0x03, 0x5a, 0x34, 0x27, 0xa8, 0xb6, 0x0d, 0x1d, 0x6d, 0xf8, 0xdd, 0x43, 0x7e, 0xe8, 0x6e, 0x52,
	0x90, 0x3e, 0x98, 0x82, 0x09, 0x76, 0x2c, 0xac, 0xfe, 0xdc, 0xbb, 0x9a, 0x15, 0x9c, 0x19, 0xbe,
	0xd9, 0x38, 0xbc, 0xff, 0x8d, 0x12, 0xd3, 0x92, 0xbb, 0xa4, 0x47, 0x72, 0x97, 0x65, 0xc8, 0xfa,
	0xf5, 0x4e, 0x26, 0xce, 0x97, 0xa7, 0x30, 0xaf, 0x75, 0xd4, 0x9f, 0xa4, 0x60, 0x2e, 0x30, 0xe2,
	0x3d, 0x6c, 0x8e, 0xd0, 0xc6, 0xf1, 0x32, 0x3f, 0x95, 0x58, 0xe6, 0x0f, 0x1e, 0x5a, 0x43, 0xd9,
	0xea, 0x2e, 0x4c, 0x11, 0x7f, 0xa0, 0x1e, 0x94, 0x19, 0x90, 0x70, 0x92, 0x50, 0x10, 0xef, 0xf9,
	0x32, 0x14, 0xba, 0xa6, 0x8d, 0x35, 0xbd, 0x26, 0x9c, 0x68, 0x62, 0x68, 0x27, 0x9a, 0x66, 0x1c,
	0xd6, 0x19, 0x03, 0xf5, 0x87, 0x0a, 0x2c, 0x04, 0xcc, 0xe9, 0xd5, 0x86, 0x23, 0xa5, 0x2e, 0x57,
	0xb3, 0xdd, 0x1e, 0x8b, 0x7c, 0x96, 0x22, 0x6c, 0x30, 0xe3, 0x4d, 0xdb, 0x5c, 0x54, 0x2d, 0xd9,
	0xd0, 0x79, 0x81, 0x43, 0x68, 0xd4, 0xef, 0x2b, 0xa1, 0xb9, 0xa7, 0x85, 0xe3, 0x2b, 0x56, 0x74,
	0x99, 0x2e, 0x15, 0xbd, 0x94, 0x9c, 0x22, 0x70, 0xaa, 0xe0, 0xdf, 0x47, 0xad, 0xa9, 0xe9, 0x0f,
	0x4e, 0xb7, 0xf1, 0xab, 0x56, 0x32, 0xea, 0x19, 0xe9, 0x97, 0xf5, 0x8c, 0xff, 0x50, 0xe0, 0x4c,
	0x60, 0x2c, 0xac, 0x14, 0x1c, 0x7e, 0x24, 0x23, 0xd5, 0xd0, 0x72, 0xa6, 0x1c, 0x1f, 0x39, 0x53,
	0xa2, 0x15, 0xc8, 0xb1, 0xb5, 0x9b, 0x99, 0x31, 0x36, 0xb7, 0x00, 0xc3, 0xa0, 0x13, 0x68, 0xc3,
	0x0c, 0x1b, 0x33, 0x29, 0x27, 0x69, 0x75, 0x3e, 0xfc, 0x78, 0x43, 0x32, 0x53, 0xfd, 0x64, 0x3a,
	0x30, 0xeb, 0xcb, 0x1c, 0xd5, 0xc8, 0xc3, 0x0a, 0xdd, 0x10, 0x91, 0x24, 0x9d, 0xc9, 0x0c, 0x2d,
	0x55, 0xfd, 0x04, 0xce, 0xf9, 0x5c, 0xe8, 0x1e, 0x96, 0x23, 0x56, 0x1e, 0x69, 0x1b, 0x4a, 0x89,
	0xdb, 0x86, 0x8a, 0xff, 0xbc, 0x4a, 0x6c, 0x43, 0xfd, 0x8d, 0x17, 0x48, 0x5e, 0x8d, 0xc7, 0x1e,
	0xff, 0x67, 0x56, 0xb4, 0x8d, 0xc1, 0xcb, 0xc3, 0x48, 0x50, 0x7a, 0x84, 0xea, 0x7f, 0x85, 0x17,
	0x67, 0x71, 0x28, 0xf6, 0xe0, 0xb4, 0x6c, 0x59, 0xcf, 0x3e, 0x9b, 0x45, 0xeb, 0x0d, 0x98, 0x68,
	0x5a, 0xd6, 0xb3, 0x8a, 0xce, 0x0f, 0xb2, 0xc2, 0x3b, 0x6a, 0x0c, 0x88, 0xd6, 0x61, 0xc2, 0xc6,
	0x9a, 0x63, 0x99, 0x7c, 0x95, 0x1a, 0xea, 0xba, 0x14, 0x27, 0x55, 0xbf, 0x9b, 0x82, 0xcb, 0x01,
	0x03, 0x94, 0x74, 0xc3, 0x7d, 0x59, 0x23, 0x8c, 0xb2, 0x4b, 0xf3, 0x39, 0xb3, 0xcb, 0x47, 0xa4,
	0x79, 0x0d, 0x17, 0x9e, 0x5e, 0x9e, 0x54, 0xfa, 0xe4, 0x49, 0xb1, 0xa7, 0x4d, 0xb1, 0xd5, 0xff,
	0xcc, 0x40, 0xa1, 0x6c, 0x38, 0xae, 0xe5, 0x6f, 0xce, 0x07, 0x7b, 0x08, 0xa5, 0x4f, 0x0f, 0x71,
	0x03, 0x72, 0xe2, 0xb2, 0x24, 0x99, 0x87, 0x99, 0xd8, 0x06, 0xb0, 0xca, 0x39, 0x92, 0xff, 0xd1,
	0x5d, 0xc8, 0x36, 0x2d, 0xc7, 0x65, 0xf8, 0xf9, 0x81, 0x1a, 0xc6, 0x29, 0x42, 0xb0, 0x2b, 0x4d,
	0x1f, 0x0c, 0x33, 0x7d, 0x6f, 0x4b, 0x45, 0xd3, 0x5c, 0x02, 0xa1, 0x5f, 0x25, 0x0d, 0x30, 0xd9,
	0x2f, 0xdd, 0xe0, 0xbc, 0x2f, 0xba, 0xca, 0x09, 0xfa, 0x45, 0x54, 0xf8, 0xa6, 0xf2, 0x9e, 0x1b,
	0xb3, 0xfb, 0xc9, 0x5b, 0xcf, 0x40, 0x6e, 0x99, 0x1c, 0x31, 0xb7, 0xa0, 0x4d, 0xc8, 0x7a, 0x5d,
	0x12, 0x6f, 0xee, 0x06, 0x6f, 0xb0, 0x7c, 0x52, 0x74, 0xdb, 0xef, 0xaf, 0xa6, 0xfb, 0xb5, 0x46,
	0x72, 0x43, 0xb5, 0x26, 0x1a, 0xaa, 0xc2, 0x00, 0x54, 0xbc, 0x83, 0x7a, 0x28, 0x97, 0xf9, 0xb3,
	0x43, 0x9f, 0x71, 0x79, 0x3d, 0x80, 0xd4, 0xff, 0xfc, 0x75, 0xca, 0xdb, 0x07, 0xda, 0xb2, 0x34,
	0x9d, 0x07, 0xc2, 0x2b, 0xda, 0x4b, 0x44, 0xf7, 0x21, 0xdb, 0xb2, 0x34, 0xbd, 0xd6, 0xb6, 0x74,
	0xe6, 0x38, 0xd2, 0xcc, 0x6f, 0x19, 0x4c, 0x85, 0x6d, 0x4b, 0x8f, 0x6a, 0xde, 0xe2, 0x00, 0xfa,
	0xa5, 0x9f, 0xd1, 0x36, 0xdc, 0xf8, 0x8f, 0x56, 0x18, 0x0c, 0xed, 0xc0, 0xb4, 0xd5, 0x71, 0x8d,
	0xb6, 0xf1, 0x35, 0xcd, 0xff, 0x52, 0xb9, 0x20, 0x7d, 0xeb, 0x40, 0x53, 0xea, 0x8e, 0x84, 0x12,
	0x29, 0xe5, 0x02, 0xf4, 0x7d, 0x76, 0x54, 0x7e, 0x91, 0x82, 0x33, 0x62, 0x0b, 0x43, 0x36, 0xe2,
	0x0d, 0x98, 0x6c, 0xb2, 0x7f, 0x79, 0x4a, 0xf2, 0x82, 0x24, 0x98, 0x6f, 0xaa, 0x02, 0x0d, 0xa9,
	0xe2, 0xa4, 0x88, 0x7d, 0xe3, 0xe6, 0x25, 0xf3, 0x03, 0x07, 0xdb, 0xe2, 0xa0, 0x68, 0x8d, 0xdd,
	0x2b, 0xa4, 0xc9, 0x43, 0x7c, 0xcb, 0x75, 0x46, 0x46, 0x14, 0x19, 0x27, 0x4b, 0xd0, 0xc8, 0x7f,
	0x0e, 0xc9, 0xcd, 0xec, 0xd7, 0x15, 0xf8, 0xed, 0x69, 0xef, 0x32, 0x31, 0x2d, 0x22, 0xaa, 0x1c,
	0x88, 0x6e, 0x41, 0x8e, 0x7d, 0x91, 0xcf, 0x78, 0x4f, 0x04, 0x3f, 0x22, 0xa0, 0xb8, 0x5e, 0x3a,
	0xa3, 0x88, 0x8c, 0xfb, 0x2d, 0xbf, 0xd2, 0x9c, 0xec, 0x5b, 0x69, 0xca, 0xe7, 0x7b, 0x79, 0xfe,
	0x2f, 0x2b, 0xb9, 0x48, 0x10, 0xa6, 0xab, 0x39, 0xfe, 0x8e, 0x6e, 0x61, 0xf6, 0xd9, 0x2e, 0xfa,
	0x65, 0x06, 0x26, 0x58, 0x31, 0x34, 0xfc, 0x2a, 0x78, 0x03, 0xf2, 0x72, 0xc1, 0x1f, 0x7f, 0x25,
	0x21, 0x27, 0x55, 0xf4, 0xa4, 0x8f, 0x71, 0x2c, 0xd1, 0x4f, 0xc4, 0x1e, 0x2a, 0x4c, 0x11, 0x38,
	0x6d, 0x27, 0x82, 0x2b, 0x48, 0xa6, 0xcf, 0x0a, 0xc2, 0x7e, 0x8e, 0xe2, 0x48, 0x3b, 0xb6, 0xba,
	0xb6, 0xe1, 0x62, 0x2f, 0x91, 0x0c, 0xf3, 0x73, 0x14, 0x9b, 0x82, 0x5a, 0x2c, 0x10, 0xf9, 0x51,
	0xd6, 0xf7, 0xc9, 0x81, 0x52, 0xfe, 0xd4, 0x88, 0x9b, 0x14, 0x3c, 0xe5, 0x67, 0x93, 0x53, 0xbe,
	0xc8, 0xf1, 0xef, 0xc3, 0xdc, 0x91, 0x61, 0x3b, 0x6e, 0x8d, 0xcf, 0x11, 0x55, 0x0e, 0x62, 0xb7,
	0xbd, 0x29, 0xde, 0x81, 0x29, 0x5a, 0xc8, 0xd0, 0xd6, 0x59, 0xee, 0x25, 0xb6, 0xce, 0x1e, 0xc1,
	0x4c, 0xc7, 0x30, 0x4d, 0xff, 0x64, 0xca, 0xe1, 0xc9, 0xda, 0xbf, 0x2f, 0x4e, 0xc1, 0x49, 0x07,
	0x7e, 0x85, 0x4e, 0x00, 0x4c, 0xf8, 0xf1, 0x40, 0xf7, 0x8e, 0xba, 0x66, 0x82, 0xfc, 0x82, 0x79,
	0x21, 0xc2, 0xaf, 0x19, 0x00, 0xab, 0x3f, 0x0d, 0xe6, 0x6e, 0x16, 0x09, 0x0e, 0xfd, 0x36, 0xc5,
	0xe0, 0x6d, 0x4c, 0xec, 0x5d, 0xaf, 0xc9, 0xb6, 0x41, 0x7b, 0x18, 0x3f, 0x99, 0xa6, 0x86, 0x49,
	0xa6, 0xe9, 0x97, 0x4b, 0xa6, 0xe8, 0x4b, 0xf4, 0x2a, 0x9a, 0x2b, 0xb2, 0x57, 0xc1, 0xbf, 0x5f,
	0xc2, 0x47, 0xb0, 0x49, 0xa1, 0xd1, 0x13, 0x58, 0x46, 0x84, 0xee, 0xc1, 0x34, 0xcd, 0x4f, 0x35,
	0xd7, 0xaa, 0x91, 0x75, 0x81, 0xe7, 0xb4, 0x9e, 0x31, 0xcf, 0x7e, 0x4e, 0x66, 0xdf, 0x22, 0x76,
	0xea, 0x93, 0xcd, 0xff, 0x28, 0x94, 0xcd, 0x85, 0x59, 0xfd, 0x1c, 0xaa, 0xf4, 0xca, 0xa1, 0x83,
	0xa4, 0xf0, 0xeb, 0xe1, 0x1b, 0x06, 0x85, 0xa0, 0x05, 0xbc, 0x36, 0x6e, 0xa4, 0x64, 0x1f, 0xca,
	0xe2, 0x99, 0xc1, 0xb2, 0x78, 0xbf, 0x5c, 0xfb, 0x4c, 0xdc, 0xb4, 0xa8, 0x98, 0x3a, 0x7e, 0x31,
	0x7c, 0xbe, 0xfd, 0x02, 0x64, 0x5d, 0xa3, 0x8d, 0x1d, 0x57, 0x6b, 0x77, 0x12, 0x76, 0x63, 0x3c,
	0xb8, 0xfa, 0x1e, 0x9c, 0xe3, 0xd3, 0xb1, 0x89, 0xdd, 0x7a, 0x53, 0x12, 0xdc, 0x67, 0xf2, 0xba,
	0xb0, 0x28, 0x34, 0x0e, 0x53, 0xa2, 0x3b, 0x50, 0x60, 0x5a, 0xd6, 0x0c, 0x53, 0x37, 0xea, 0x38,
	0xa1, 0xaf, 0xa6, 0xc8, 0xd5, 0x69, 0x5d, 0x3c, 0x10, 0xcc, 0x7e, 0xc6, 0xf9, 0x85, 0x42, 0x7c,
	0xc6, 0x8b, 0x44, 0xef, 0x42, 0xf3, 0xc7, 0x90, 0x33, 0xf1, 0x0b, 0xb7, 0x66, 0x1d, 0x1d, 0x39,
	0xd8, 0x4d, 0xbc, 0x2a, 0x16, 0xbd, 0xdd, 0x25, 0x5a, 0x14, 0x20, 0xe4, 0x3b, 0x94, 0xfa, 0xb3,
	0x89, 0xd6, 0x3e, 0xf6, 0xfe, 0x69, 0x0a, 0xe6, 0xe5, 0x60, 0xf1, 0x46, 0xfe, 0x39, 0x88, 0x96,
	0xcc, 0x28, 0xd1, 0x32, 0x68, 0xcd, 0xf3, 0x41, 0x70, 0x66, 0xc7, 0xfb, 0xce, 0xac, 0x3c, 0x95,
	0xfd, 0xdc, 0xe9, 0x37, 0xbc, 0x23, 0x53, 0x62, 0x53, 0xaa, 0x03, 0xf6, 0xf2, 0xd0, 0xfd, 0xf0,
	0x0c, 0x2b, 0xfd, 0x66, 0x78, 0xb8, 0x29, 0xfd, 0x7e, 0x1a, 0x96, 0xe4, 0x29, 0x0d, 0x89, 0x7f,
	0x67, 0x90, 0x6d, 0x29, 0x7f, 0x4a, 0x06, 0x99, 0x60, 0xdf, 0x57, 0xd2, 0xbd, 0x7c, 0xe5, 0x1e,
	0xd0, 0x6f, 0xed, 0x6a, 0x9a, 0xf8, 0xc6, 0xa0, 0xef, 0xcf, 0x58, 0x55, 0xf3, 0x84, 0xc0, 0xf3,
	0xc9, 0xbb, 0x90, 0xa3, 0x0c, 0xd8, 0xe5, 0x7e, 0xef, 0x03, 0xe8, 0x64, 0x72, 0x20, 0xe8, 0xec,
	0xbb, 0x81, 0x90, 0x6f, 0x4d, 0x8c, 0xe2, 0x5b, 0x93, 0xbf, 0x9a, 0x4c, 0xfc, 0x23, 0xc5, 0x8f,
	0x39, 0x3e, 0x2b, 0x3b, 0xb6, 0xce, 0x76, 0xb7, 0xbc, 0xb3, 0xdb, 0x48, 0x95, 0xe7, 0xe0, 0xe7,
	0x24, 0x83, 0x48, 0x47, 0xb9, 0x09, 0xed, 0xf5, 0x9d, 0xd0, 0x6c, 0x0c, 0xb2, 0xed, 0xc8, 0x29,
	0xfa, 0x69, 0x8e, 0xbd, 0x5b, 0x11, 0x65, 0x43, 0xe7, 0xba, 0xbf, 0x82, 0x2b, 0x07, 0x8f, 0x3d,
	0x31, 0x7b, 0x4d, 0xeb, 0x84, 0x8b, 0xb9, 0xd6, 0x53, 0xcc, 0x40, 0x7c, 0x9f, 0x7a, 0xd7, 0x80,
	0xbc, 0x62, 0xfb, 0x95, 0x8d, 0xa1, 0x45, 0x16, 0x32, 0x76, 0xc5, 0xca, 0x3c, 0x7a, 0xe5, 0xd2,
	0xbe, 0xa7, 0xc0, 0x45, 0x96, 0x37, 0x98, 0x08, 0x6f, 0x7c, 0x23, 0x1f, 0x83, 0x86, 0x5b, 0x9a,
	0xd4, 0xcb, 0xb4, 0x34, 0x6a, 0xdb, 0x4b, 0x88, 0xf4, 0x67, 0xed, 0x4e, 0x99, 0x96, 0x3b, 0x1d,
	0x6c, 0x8e, 0x76, 0x07, 0xab, 0x8f, 0x39, 0x36, 0xa1, 0x10, 0xac, 0xec, 0x07, 0xde, 0x5a, 0x0c,
	0x1c, 0xc1, 0xa8, 0x3f, 0xf1, 0xaf, 0x01, 0xed, 0x1a, 0xe6, 0xcb, 0x5c, 0xaa, 0x1c, 0x65, 0xcf,
	0xf6, 0x5d, 0x98, 0xa6, 0x57, 0x87, 0x3a, 0xa2, 0x19, 0x88, 0xdd, 0x98, 0xc9, 0x11, 0x9c, 0x5d,
	0xd6, 0x10, 0xf4, 0x31, 0xcb, 0x3f, 0xf8, 0x55, 0xce, 0x81, 0xd9, 0xf9, 0xbf, 0x31, 0x20, 0x7e,
	0xbe, 0x10, 0x9c, 0xee, 0x91, 0xbd, 0x3e, 0xa6, 0x63, 0x4c, 0xbd, 0x4c, 0xc7, 0x18, 0x3a, 0x94,
	0x4a, 0xf7, 0x39, 0x94, 0x5a, 0xfe, 0x73, 0x25, 0xfa, 0xb3, 0x46, 0xec, 0x4b, 0xf7, 0xab, 0xf0,
	0x5a, 0xe5, 0xd1, 0x7e, 0xa9, 0x5a, 0x5c, 0xdf, 0xaf, 0x3c, 0x2e, 0x6d, 0x97, 0x36, 0x2a, 0xc5,
	0xbd, 0xfd, 0x27, 0x5b, 0xa5, 0xda, 0xc1, 0xa3, 0x8f, 0x1f, 0xed, 0x7c, 0xf2, 0x68, 0x76, 0x2c,
	0x19, 0x65, 0xa3, 0xb4, 0x59, 0x3c, 0xd8, 0xda, 0x9f, 0x55, 0x92, 0x51, 0x76, 0xab, 0x95, 0xed,
	0x62, 0xf5, 0xc9, 0x6c, 0x0a, 0x5d, 0x81, 0x8b, 0x09, 0x5c, 0x8a, 0x8f, 0x1e, 0x96, 0xaa, 0xb3,
	0xe9, 0xe5, 0xe7, 0xde, 0x4f, 0x20, 0xd2, 0x96, 0x1f, 0x2d, 0xc2, 0xfc, 0x76, 0x69, 0x6f, 0xaf,
	0xf8, 0xb0, 0xb4, 0xb7, 0x5f, 0xdc, 0x97, 0x35, 0x5a, 0x80, 0xb9, 0x00, 0x64, 0xaf, 0xf4, 0x88,
	0x68, 0x71, 0x1e, 0x16, 0x02, 0xaf, 0xab, 0xa5, 0xf5, 0x52, 0xe5, 0x71, 0x69, 0x63, 0x36, 0x15,
	0xa1, 0xa8, 0x96, 0x8a, 0x1b, 0xb3, 0xe9, 0x65, 0x17, 0xf2, 0xf2, 0xf6, 0x22, 0x11, 0xb9, 0x55,
	0xd9, 0xdb, 0xdf, 0xda, 0x29, 0x6e, 0x6c, 0xef, 0x6c, 0xc8, 0x22, 0xc3, 0x90, 0xcd, 0x9d, 0xea,
	0x27, 0xc5, 0xea, 0x06, 0x93, 0x1a, 0x80, 0x3c, 0x28, 0xae, 0x7f, 0x4c, 0x41, 0x54, 0x6a, 0x10,
	0xb4, 0xb3, 0x5f, 0x9e, 0x4d, 0x2f, 0xdb, 0x30, 0x1d, 0xe8, 0x68, 0x09, 0x8b, 0x8d, 0x4a, 0x71,
	0x6b, 0xe7, 0xe1, 0xde, 0x66, 0x65, 0x6b, 0xbf, 0x54, 0x95, 0xe4, 0x5e, 0x83, 0xcb, 0x41, 0x50,
	0xe9, 0x2b, 0xeb, 0x5b, 0x07, 0xc4, 0xf2, 0x8f, 0x77, 0x0e, 0xaa, 0x95, 0xfd, 0xd2, 0x1e, 0x33,
	0x7f, 0x2c, 0x52, 0xb1, 0xba, 0x5e, 0x66, 0x06, 0x58, 0xfb, 0xf6, 0x59, 0xc8, 0x6e, 0x8b, 0xdf,
	0x71, 0x45, 0xdf, 0x51, 0x60, 0x31, 0xf1, 0x87, 0x7b, 0xde, 0xf4, 0xb7, 0x9c, 0x7b, 0xfe, 0xc2,
	0xcf, 0xd2, 0xbc, 0x8f, 0xc8, 0x16, 0xf2, 0xc7, 0x96, 0xa1, 0xab, 0xb7, 0x7f, 0xe7, 0xa7, 0xff,
	0xf6, 0x87, 0xa9, 0x1b, 0xea, 0x17, 0x56, 0x8f, 0xdf, 0x5d, 0x25, 0xa1, 0xb5, 0xea, 0xc9, 0x5d,
	0x4d, 0x62, 0x75, 0x47, 0x59, 0x46, 0x6d, 0xc8, 0xc9, 0x57, 0xcc, 0x97, 0x42, 0x5a, 0x48, 0xb0,
	0xa5, 0x73, 0x61, 0xc1, 0x7b, 0xf8, 0x39, 0x3d, 0x7c, 0x7d, 0x8b, 0xca, 0xbe, 0xa6, 0x5e, 0x8a,
	0x91, 0x2d, 0x31, 0x20, 0xe2, 0x9c, 0xf0, 0x8d, 0xb2, 0x8b, 0x21, 0x81, 0x01, 0x68, 0xb2, 0xc8,
	0x2f, 0x50, 0x91, 0x6f, 0xa8, 0x57, 0x62, 0x44, 0x06, 0x58, 0x10, 0xa1, 0xc7, 0xd2, 0x47, 0x00,
	0xfc, 0x36, 0xc8, 0xa5, 0x90, 0xd8, 0x10, 0x3c, 0xc1, 0xc8, 0xef, 0x50, 0xa9, 0x6f, 0xaa, 0x6a,
	0x8c, 0xd4, 0x10, 0x07, 0x22, 0xf7, 0x29, 0xe4, 0xe4, 0x8b, 0x1d, 0x4b, 0x49, 0x32, 0xb5, 0x24,
	0x79, 0xbd, 0x0c, 0x2b, 0x51, 0x13, 0x59, 0x5f, 0x57, 0x60, 0x21, 0xfe, 0xce, 0xef, 0xeb, 0x61,
	0xc7, 0x8a, 0xc3, 0x5a, 0x3a, 0x13, 0x63, 0x69, 0xf5, 0x26, 0x95, 0xff, 0x8e, 0x7a, 0x3d, 0xce,
	0xa9, 0xe2, 0xd8, 0x10, 0x4d, 0xea, 0x90, 0xf5, 0xef, 0x01, 0x2f, 0x86, 0x84, 0x7b, 0x90, 0x78,
	0x81, 0x6f, 0x52, 0x81, 0x57, 0xd5, 0x8b, 0x31, 0x02, 0x3d, 0x52, 0x22, 0xe4, 0x08, 0x40, 0xba,
	0xca, 0x7b, 0x3e, 0x76, 0x88, 0xc9, 0x62, 0xae, 0x53, 0x31, 0xaa, 0xfa, 0x5a, 0xe2, 0xb8, 0x84,
	0x1c, 0x03, 0x72, 0xf2, 0x85, 0xdc, 0xf0, 0x14, 0x4a, 0xb0, 0x78, 0x49, 0xbd, 0x66, 0x50, 0x22,
	0x26, 0xa2, 0xbe, 0xa5, 0x00, 0x8a, 0xb9, 0x93, 0x7b, 0x35, 0xde, 0x6b, 0x24, 0x94, 0xa5, 0xab,
	0x61, 0xc9, 0x91, 0x8b, 0xa4, 0xea, 0x0d, 0xaa, 0xc7, 0xb2, 0xfa, 0x46, 0xb2, 0x27, 0x49, 0x1c,
	0x89, 0x3a, 0xdf, 0x55, 0x60, 0x21, 0xfe, 0x6e, 0xed, 0xeb, 0x49, 0x7e, 0x2c, 0x63, 0x0d, 0xa2,
	0x54, 0x2f, 0xf7, 0x8a, 0x65, 0x4a, 0xf4, 0x7a, 0x0e, 0x39, 0xf9, 0x54, 0x27, 0x3c, 0x23, 0x12,
	0x6c, 0xe9, 0x42, 0x58, 0x05, 0x09, 0xd8, 0x73, 0x66, 0x24, 0x3c, 0x49, 0xa4, 0xe8, 0xb9, 0xe3,
	0x44, 0x72, 0x58, 0xbc, 0x48, 0x0e, 0xec, 0x2b, 0x92, 0xe3, 0x11, 0x91, 0xbf, 0xa7, 0xc0, 0x6c,
	0x64, 0xcb, 0xec, 0x72, 0x48, 0x70, 0x18, 0x61, 0xe9, 0x4a, 0x58, 0x7a, 0x18, 0x43, 0x5d, 0xa1,
	0x2a, 0x5c, 0x57, 0xaf, 0xc5, 0xa8, 0x10, 0xd9, 0xdc, 0x53, 0x96, 0x51, 0x17, 0xf2, 0x81, 0x8d,
	0xa4, 0x0b, 0x31, 0x63, 0x17, 0xc0, 0xa5, 0x8b, 0x71, 0x83, 0xf7, 0x3e, 0x90, 0x5e, 0xa6, 0xa2,
	0x5f, 0x57, 0x2f, 0x27, 0x8c, 0x5e, 0x20, 0x12, 0xb1, 0xdf, 0x56, 0x00, 0xc5, 0xec, 0x76, 0x5c,
	0x8d, 0x91, 0x1e, 0x44, 0x59, 0x52, 0xe3, 0x74, 0x08, 0xe2, 0xf4, 0x0c, 0x86, 0x28, 0x3a, 0xd1,
	0xc7, 0x02, 0x90, 0x7a, 0xe4, 0x70, 0xba, 0xf1, 0x41, 0x51, 0x13, 0xc8, 0x5b, 0x02, 0x3d, 0xf3,
	0x8e, 0xcf, 0x84, 0x0b, 0x94, 0xba, 0xe5, 0xb0, 0x40, 0x1f, 0xf4, 0x12, 0x02, 0x7d, 0x26, 0x44,
	0xe0, 0x6f, 0xc2, 0x4c, 0xb8, 0x8d, 0x0e, 0xaf, 0x91, 0x21, 0x78, 0x1f, 0xd1, 0xbd, 0xd6, 0xca,
	0x10, 0x27, 0x22, 0xff, 0x77, 0x15, 0x98, 0x8b, 0xf6, 0xd6, 0x57, 0xc2, 0xd5, 0x41, 0x18, 0xa3,
	0x8f, 0x12, 0xab, 0x54, 0x89, 0xb7, 0xd4, 0xd7, 0xe3, 0xca, 0x84, 0x30, 0x2f, 0xa2, 0xc6, 0x6f,
	0x01, 0x8a, 0xe9, 0x69, 0xc3, 0x7e, 0x17, 0x45, 0x49, 0x58, 0xc0, 0x7b, 0x79, 0x5a, 0x94, 0x09,
	0xab, 0x19, 0x40, 0x6a, 0x4e, 0xc3, 0x13, 0xef, 0x83, 0x92, 0x4b, 0xa3, 0x5e, 0x73, 0xee, 0xd3,
	0x13, 0x59, 0x1d, 0xc8, 0x07, 0x3a, 0xc7, 0x0b, 0x11, 0x6b, 0x77, 0x06, 0x90, 0xd7, 0x2b, 0xae,
	0x65, 0x0e, 0x77, 0x94, 0xe5, 0x07, 0xe7, 0x3f, 0xbd, 0x77, 0x16, 0xe6, 0xe5, 0x06, 0x90, 0xff,
	0x34, 0xa3, 0x73, 0x38, 0x41, 0x37, 0x21, 0x6e, 0xfe, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11,
	0xfb, 0xe3, 0x06, 0xf8, 0x60, 0x00, 0x00,
}
