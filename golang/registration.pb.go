// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registration.proto

package dialog

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthorizationMethod int32

const (
	AuthorizationMethod_nothing        AuthorizationMethod = 0
	AuthorizationMethod_login_password AuthorizationMethod = 1
	AuthorizationMethod_phone          AuthorizationMethod = 2
	AuthorizationMethod_email          AuthorizationMethod = 3
	AuthorizationMethod_certificate    AuthorizationMethod = 4
)

var AuthorizationMethod_name = map[int32]string{
	0: "nothing",
	1: "login_password",
	2: "phone",
	3: "email",
	4: "certificate",
}

var AuthorizationMethod_value = map[string]int32{
	"nothing":        0,
	"login_password": 1,
	"phone":          2,
	"email":          3,
	"certificate":    4,
}

func (x AuthorizationMethod) String() string {
	return proto.EnumName(AuthorizationMethod_name, int32(x))
}

func (AuthorizationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_199f7aef77c18626, []int{0}
}

type RequestRegisterDevice struct {
	ClientPk             []byte   `protobuf:"bytes,1,opt,name=client_pk,json=clientPk,proto3" json:"client_pk,omitempty"`
	AppId                int32    `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppTitle             string   `protobuf:"bytes,3,opt,name=app_title,json=appTitle,proto3" json:"app_title,omitempty"`
	DeviceTitle          string   `protobuf:"bytes,4,opt,name=device_title,json=deviceTitle,proto3" json:"device_title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRegisterDevice) Reset()         { *m = RequestRegisterDevice{} }
func (m *RequestRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*RequestRegisterDevice) ProtoMessage()    {}
func (*RequestRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_199f7aef77c18626, []int{0}
}

func (m *RequestRegisterDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRegisterDevice.Unmarshal(m, b)
}
func (m *RequestRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRegisterDevice.Marshal(b, m, deterministic)
}
func (m *RequestRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRegisterDevice.Merge(m, src)
}
func (m *RequestRegisterDevice) XXX_Size() int {
	return xxx_messageInfo_RequestRegisterDevice.Size(m)
}
func (m *RequestRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRegisterDevice proto.InternalMessageInfo

func (m *RequestRegisterDevice) GetClientPk() []byte {
	if m != nil {
		return m.ClientPk
	}
	return nil
}

func (m *RequestRegisterDevice) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *RequestRegisterDevice) GetAppTitle() string {
	if m != nil {
		return m.AppTitle
	}
	return ""
}

func (m *RequestRegisterDevice) GetDeviceTitle() string {
	if m != nil {
		return m.DeviceTitle
	}
	return ""
}

type ResponseDeviceRequest struct {
	ServerPk             []byte                `protobuf:"bytes,1,opt,name=server_pk,json=serverPk,proto3" json:"server_pk,omitempty"`
	AuthId               int64                 `protobuf:"varint,2,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	Token                string                `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	AuthMethodSeq        []AuthorizationMethod `protobuf:"varint,4,rep,packed,name=auth_method_seq,json=authMethodSeq,proto3,enum=dialog.AuthorizationMethod" json:"auth_method_seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResponseDeviceRequest) Reset()         { *m = ResponseDeviceRequest{} }
func (m *ResponseDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ResponseDeviceRequest) ProtoMessage()    {}
func (*ResponseDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199f7aef77c18626, []int{1}
}

func (m *ResponseDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDeviceRequest.Unmarshal(m, b)
}
func (m *ResponseDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ResponseDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDeviceRequest.Merge(m, src)
}
func (m *ResponseDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ResponseDeviceRequest.Size(m)
}
func (m *ResponseDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDeviceRequest proto.InternalMessageInfo

func (m *ResponseDeviceRequest) GetServerPk() []byte {
	if m != nil {
		return m.ServerPk
	}
	return nil
}

func (m *ResponseDeviceRequest) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *ResponseDeviceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResponseDeviceRequest) GetAuthMethodSeq() []AuthorizationMethod {
	if m != nil {
		return m.AuthMethodSeq
	}
	return nil
}

type RegisterDeprecatedDeviceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterDeprecatedDeviceRequest) Reset()         { *m = RegisterDeprecatedDeviceRequest{} }
func (m *RegisterDeprecatedDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterDeprecatedDeviceRequest) ProtoMessage()    {}
func (*RegisterDeprecatedDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199f7aef77c18626, []int{2}
}

func (m *RegisterDeprecatedDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterDeprecatedDeviceRequest.Unmarshal(m, b)
}
func (m *RegisterDeprecatedDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterDeprecatedDeviceRequest.Marshal(b, m, deterministic)
}
func (m *RegisterDeprecatedDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterDeprecatedDeviceRequest.Merge(m, src)
}
func (m *RegisterDeprecatedDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterDeprecatedDeviceRequest.Size(m)
}
func (m *RegisterDeprecatedDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterDeprecatedDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterDeprecatedDeviceRequest proto.InternalMessageInfo

type RequestExchangeAuthIdForToken struct {
	AuthId               int64    `protobuf:"varint,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestExchangeAuthIdForToken) Reset()         { *m = RequestExchangeAuthIdForToken{} }
func (m *RequestExchangeAuthIdForToken) String() string { return proto.CompactTextString(m) }
func (*RequestExchangeAuthIdForToken) ProtoMessage()    {}
func (*RequestExchangeAuthIdForToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_199f7aef77c18626, []int{3}
}

func (m *RequestExchangeAuthIdForToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestExchangeAuthIdForToken.Unmarshal(m, b)
}
func (m *RequestExchangeAuthIdForToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestExchangeAuthIdForToken.Marshal(b, m, deterministic)
}
func (m *RequestExchangeAuthIdForToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestExchangeAuthIdForToken.Merge(m, src)
}
func (m *RequestExchangeAuthIdForToken) XXX_Size() int {
	return xxx_messageInfo_RequestExchangeAuthIdForToken.Size(m)
}
func (m *RequestExchangeAuthIdForToken) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestExchangeAuthIdForToken.DiscardUnknown(m)
}

var xxx_messageInfo_RequestExchangeAuthIdForToken proto.InternalMessageInfo

func (m *RequestExchangeAuthIdForToken) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *RequestExchangeAuthIdForToken) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterEnum("dialog.AuthorizationMethod", AuthorizationMethod_name, AuthorizationMethod_value)
	proto.RegisterType((*RequestRegisterDevice)(nil), "dialog.RequestRegisterDevice")
	proto.RegisterType((*ResponseDeviceRequest)(nil), "dialog.ResponseDeviceRequest")
	proto.RegisterType((*RegisterDeprecatedDeviceRequest)(nil), "dialog.RegisterDeprecatedDeviceRequest")
	proto.RegisterType((*RequestExchangeAuthIdForToken)(nil), "dialog.RequestExchangeAuthIdForToken")
}

func init() { proto.RegisterFile("registration.proto", fileDescriptor_199f7aef77c18626) }

var fileDescriptor_199f7aef77c18626 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x86, 0x3f, 0x37, 0x4d, 0xda, 0x4c, 0xf3, 0xb5, 0xd1, 0xd0, 0x1f, 0x37, 0x4d, 0x44, 0x6a,
	0x81, 0x08, 0x11, 0xb2, 0xd5, 0x76, 0x81, 0xc8, 0x26, 0x2a, 0xbf, 0xea, 0x02, 0xa9, 0x32, 0x15,
	0x3b, 0x14, 0x4d, 0xed, 0x83, 0x3d, 0x8a, 0x33, 0x33, 0x99, 0x99, 0x04, 0xc4, 0x06, 0x89, 0x5b,
	0x60, 0xc1, 0x8a, 0x0b, 0xe0, 0x4a, 0x10, 0x6b, 0xee, 0x20, 0xe2, 0x42, 0x90, 0xc7, 0xae, 0x92,
	0x94, 0xb4, 0x59, 0x79, 0xe6, 0xbc, 0x67, 0xce, 0x3c, 0xef, 0xf1, 0xb1, 0x11, 0x96, 0x10, 0x51,
	0xa5, 0x25, 0xd1, 0x94, 0x33, 0x57, 0x48, 0xae, 0x39, 0x2e, 0x85, 0x94, 0x24, 0x3c, 0xaa, 0xed,
	0xa8, 0x80, 0x24, 0x44, 0x5c, 0x7a, 0xf9, 0x33, 0x93, 0x6b, 0xf5, 0x88, 0xf3, 0x28, 0x01, 0x8f,
	0x08, 0xea, 0x11, 0xc6, 0xb8, 0x36, 0x67, 0x55, 0xa6, 0x3a, 0x3f, 0x2c, 0xb4, 0xe3, 0xc3, 0x70,
	0x04, 0x4a, 0xfb, 0xa6, 0x34, 0xc8, 0xe7, 0x30, 0xa6, 0x01, 0xe0, 0x03, 0x54, 0x0e, 0x12, 0x0a,
	0x4c, 0xf7, 0x44, 0xdf, 0xb6, 0x9a, 0x56, 0xab, 0xe2, 0xaf, 0x67, 0x81, 0xf3, 0x3e, 0xde, 0x41,
	0x25, 0x22, 0x44, 0x8f, 0x86, 0xf6, 0x4a, 0xd3, 0x6a, 0x15, 0xfd, 0x22, 0x11, 0xe2, 0x2c, 0x4c,
	0xcf, 0xa4, 0x61, 0x4d, 0x75, 0x02, 0x76, 0xa1, 0x69, 0xb5, 0xca, 0xfe, 0x3a, 0x11, 0xe2, 0x22,
	0xdd, 0xe3, 0x43, 0x54, 0x09, 0x4d, 0xe9, 0x5c, 0x5f, 0x35, 0xfa, 0x46, 0x16, 0x33, 0x29, 0x9d,
	0xfa, 0xa4, 0xbb, 0x8f, 0xf6, 0xe8, 0xc0, 0x0d, 0x93, 0xc8, 0x8d, 0xa4, 0x08, 0xdc, 0x57, 0x52,
	0x04, 0x39, 0x9f, 0xf3, 0xd3, 0xb0, 0x2a, 0xc1, 0x99, 0x82, 0x0c, 0x32, 0x57, 0xd2, 0x7b, 0x15,
	0xc8, 0x31, 0xc8, 0x19, 0xd6, 0x2c, 0x70, 0xde, 0xc7, 0x7b, 0x68, 0x8d, 0x8c, 0x74, 0x7c, 0x05,
	0x5b, 0xf0, 0x4b, 0xe9, 0xf6, 0x2c, 0xc4, 0xdb, 0xa8, 0xa8, 0x79, 0x1f, 0x58, 0x4e, 0x9a, 0x6d,
	0xf0, 0x33, 0xb4, 0x65, 0xd2, 0x07, 0xa0, 0x63, 0x1e, 0xf6, 0x14, 0x0c, 0xed, 0xd5, 0x66, 0xa1,
	0xb5, 0x79, 0x7c, 0xe0, 0x66, 0x8d, 0x76, 0x4f, 0x47, 0x3a, 0xe6, 0x92, 0x7e, 0x32, 0x8d, 0x7c,
	0x6d, 0xd2, 0xfc, 0xff, 0xd3, 0x33, 0xd9, 0xfa, 0x0d, 0x0c, 0x3b, 0x8d, 0x49, 0xb7, 0x86, 0xec,
	0x7f, 0x8d, 0x64, 0xf0, 0xce, 0x21, 0xba, 0x3b, 0xed, 0xb6, 0x90, 0x10, 0x10, 0x0d, 0xe1, 0x9c,
	0x25, 0xe7, 0x2d, 0x6a, 0xe4, 0xcb, 0x17, 0x1f, 0x83, 0x98, 0xb0, 0x08, 0x4e, 0x0d, 0xf5, 0x4b,
	0x2e, 0x2f, 0x0c, 0xe7, 0x8c, 0x2d, 0x6b, 0xce, 0x56, 0x1d, 0x95, 0x15, 0x8d, 0x18, 0xd1, 0x23,
	0x09, 0xc6, 0x71, 0xc5, 0x9f, 0x06, 0xda, 0xef, 0xd0, 0x9d, 0x05, 0xfc, 0x78, 0x03, 0xad, 0x31,
	0xae, 0x63, 0xca, 0xa2, 0xea, 0x7f, 0x18, 0xa3, 0xcd, 0x84, 0x47, 0x94, 0xf5, 0x04, 0x51, 0xea,
	0x03, 0x97, 0x61, 0xd5, 0xc2, 0x65, 0x54, 0x14, 0x31, 0x67, 0x50, 0x5d, 0x49, 0x97, 0x30, 0x20,
	0x34, 0xa9, 0x16, 0xf0, 0x16, 0xda, 0x08, 0x40, 0x6a, 0xfa, 0x9e, 0xa6, 0x16, 0xaa, 0xab, 0xc7,
	0xbf, 0x0a, 0xa8, 0xe2, 0xcf, 0xcc, 0x28, 0xfe, 0x66, 0xa1, 0xdd, 0x1b, 0x1c, 0xdc, 0xbf, 0x6a,
	0xe8, 0xad, 0x46, 0x6b, 0x8d, 0x69, 0xda, 0x82, 0x77, 0xef, 0x3c, 0xfe, 0xf2, 0xfb, 0xcf, 0xd7,
	0x95, 0x23, 0xe7, 0x91, 0x37, 0x3e, 0xf2, 0xd2, 0x56, 0x7b, 0xb3, 0xf7, 0x7b, 0x8b, 0x8b, 0x76,
	0xac, 0x36, 0xfe, 0x8c, 0x36, 0xaf, 0x8d, 0x7c, 0xe3, 0x1a, 0xd0, 0xbc, 0xbc, 0x0c, 0xc4, 0x33,
	0x20, 0x0f, 0x9d, 0x7b, 0x8b, 0x41, 0xe6, 0x8b, 0xa5, 0x00, 0xdf, 0x2d, 0x64, 0xdf, 0x34, 0x06,
	0xf8, 0xc1, 0xf4, 0xb2, 0x5b, 0x07, 0x65, 0x19, 0xd5, 0x13, 0x43, 0x75, 0xe2, 0xb8, 0xcb, 0xa8,
	0xe6, 0xab, 0x77, 0xac, 0xf6, 0xd3, 0xfd, 0x49, 0x77, 0x17, 0x6d, 0xcf, 0x0e, 0x71, 0xfa, 0x4d,
	0xd1, 0x00, 0xd4, 0x65, 0xc9, 0xfc, 0x3d, 0x4e, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x07, 0x19,
	0x86, 0x86, 0x90, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	ExchangeAuthIdForToken(ctx context.Context, in *RequestExchangeAuthIdForToken, opts ...grpc.CallOption) (*ResponseDeviceRequest, error)
	/// register device to get auth token
	RegisterDevice(ctx context.Context, in *RequestRegisterDevice, opts ...grpc.CallOption) (*ResponseDeviceRequest, error)
	// deprecated
	RegisterDeprecatedDevice(ctx context.Context, in *RegisterDeprecatedDeviceRequest, opts ...grpc.CallOption) (*ResponseDeviceRequest, error)
}

type registrationClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationClient(cc *grpc.ClientConn) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) ExchangeAuthIdForToken(ctx context.Context, in *RequestExchangeAuthIdForToken, opts ...grpc.CallOption) (*ResponseDeviceRequest, error) {
	out := new(ResponseDeviceRequest)
	err := c.cc.Invoke(ctx, "/dialog.Registration/ExchangeAuthIdForToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) RegisterDevice(ctx context.Context, in *RequestRegisterDevice, opts ...grpc.CallOption) (*ResponseDeviceRequest, error) {
	out := new(ResponseDeviceRequest)
	err := c.cc.Invoke(ctx, "/dialog.Registration/RegisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) RegisterDeprecatedDevice(ctx context.Context, in *RegisterDeprecatedDeviceRequest, opts ...grpc.CallOption) (*ResponseDeviceRequest, error) {
	out := new(ResponseDeviceRequest)
	err := c.cc.Invoke(ctx, "/dialog.Registration/RegisterDeprecatedDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	ExchangeAuthIdForToken(context.Context, *RequestExchangeAuthIdForToken) (*ResponseDeviceRequest, error)
	/// register device to get auth token
	RegisterDevice(context.Context, *RequestRegisterDevice) (*ResponseDeviceRequest, error)
	// deprecated
	RegisterDeprecatedDevice(context.Context, *RegisterDeprecatedDeviceRequest) (*ResponseDeviceRequest, error)
}

// UnimplementedRegistrationServer can be embedded to have forward compatible implementations.
type UnimplementedRegistrationServer struct {
}

func (*UnimplementedRegistrationServer) ExchangeAuthIdForToken(ctx context.Context, req *RequestExchangeAuthIdForToken) (*ResponseDeviceRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeAuthIdForToken not implemented")
}
func (*UnimplementedRegistrationServer) RegisterDevice(ctx context.Context, req *RequestRegisterDevice) (*ResponseDeviceRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterDevice not implemented")
}
func (*UnimplementedRegistrationServer) RegisterDeprecatedDevice(ctx context.Context, req *RegisterDeprecatedDeviceRequest) (*ResponseDeviceRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterDeprecatedDevice not implemented")
}

func RegisterRegistrationServer(s *grpc.Server, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_ExchangeAuthIdForToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExchangeAuthIdForToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).ExchangeAuthIdForToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Registration/ExchangeAuthIdForToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).ExchangeAuthIdForToken(ctx, req.(*RequestExchangeAuthIdForToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_RegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRegisterDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).RegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Registration/RegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).RegisterDevice(ctx, req.(*RequestRegisterDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_RegisterDeprecatedDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterDeprecatedDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).RegisterDeprecatedDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Registration/RegisterDeprecatedDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).RegisterDeprecatedDevice(ctx, req.(*RegisterDeprecatedDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExchangeAuthIdForToken",
			Handler:    _Registration_ExchangeAuthIdForToken_Handler,
		},
		{
			MethodName: "RegisterDevice",
			Handler:    _Registration_RegisterDevice_Handler,
		},
		{
			MethodName: "RegisterDeprecatedDevice",
			Handler:    _Registration_RegisterDeprecatedDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registration.proto",
}
