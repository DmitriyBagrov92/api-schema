// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: authentication.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Authentication.pbrpc.h"
#import "Authentication.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBEmpty.pbobjc.h>
#else
#import "GPBEmpty.pbobjc.h"
#endif
#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBWrappers.pbobjc.h>
#else
#import "GPBWrappers.pbobjc.h"
#endif
#import "google/api/Annotations.pbobjc.h"
#import "Definitions.pbobjc.h"
#import "Miscellaneous.pbobjc.h"
#import "Peers.pbobjc.h"
#import "Users.pbobjc.h"
#import "scalapb/Scalapb.pbobjc.h"

@implementation Authentication

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"Authentication"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"Authentication"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark StartPhoneAuth(RequestStartPhoneAuth) returns (ResponseStartPhoneAuth)

/**
 * / Start authorization by phone
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startPhoneAuthWithRequest:(RequestStartPhoneAuth *)request handler:(void(^)(ResponseStartPhoneAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToStartPhoneAuthWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Start authorization by phone
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartPhoneAuthWithRequest:(RequestStartPhoneAuth *)request handler:(void(^)(ResponseStartPhoneAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"StartPhoneAuth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseStartPhoneAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Start authorization by phone
 */
- (GRPCUnaryProtoCall *)startPhoneAuthWithMessage:(RequestStartPhoneAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"StartPhoneAuth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseStartPhoneAuth class]];
}

#pragma mark SendCodeByPhoneCall(RequestSendCodeByPhoneCall) returns (ResponseVoid)

/**
 * / Resend code by transaction hash
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)sendCodeByPhoneCallWithRequest:(RequestSendCodeByPhoneCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSendCodeByPhoneCallWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Resend code by transaction hash
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSendCodeByPhoneCallWithRequest:(RequestSendCodeByPhoneCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SendCodeByPhoneCall"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Resend code by transaction hash
 */
- (GRPCUnaryProtoCall *)sendCodeByPhoneCallWithMessage:(RequestSendCodeByPhoneCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SendCodeByPhoneCall"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark StartEmailAuth(RequestStartEmailAuth) returns (ResponseStartEmailAuth)

/**
 * / Start email authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startEmailAuthWithRequest:(RequestStartEmailAuth *)request handler:(void(^)(ResponseStartEmailAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToStartEmailAuthWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Start email authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartEmailAuthWithRequest:(RequestStartEmailAuth *)request handler:(void(^)(ResponseStartEmailAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"StartEmailAuth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseStartEmailAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Start email authorization process
 */
- (GRPCUnaryProtoCall *)startEmailAuthWithMessage:(RequestStartEmailAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"StartEmailAuth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseStartEmailAuth class]];
}

#pragma mark StartAnonymousAuth(RequestStartAnonymousAuth) returns (ResponseAuth)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startAnonymousAuthWithRequest:(RequestStartAnonymousAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToStartAnonymousAuthWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartAnonymousAuthWithRequest:(RequestStartAnonymousAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"StartAnonymousAuth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)startAnonymousAuthWithMessage:(RequestStartAnonymousAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"StartAnonymousAuth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark StartTokenAuth(RequestStartTokenAuth) returns (ResponseAuth)

/**
 * / Start token auth authorization (actual for bots)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startTokenAuthWithRequest:(RequestStartTokenAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToStartTokenAuthWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Start token auth authorization (actual for bots)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartTokenAuthWithRequest:(RequestStartTokenAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"StartTokenAuth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Start token auth authorization (actual for bots)
 */
- (GRPCUnaryProtoCall *)startTokenAuthWithMessage:(RequestStartTokenAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"StartTokenAuth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark StartUsernameAuth(RequestStartUsernameAuth) returns (ResponseStartUsernameAuth)

/**
 * / Start login/password authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startUsernameAuthWithRequest:(RequestStartUsernameAuth *)request handler:(void(^)(ResponseStartUsernameAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToStartUsernameAuthWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Start login/password authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartUsernameAuthWithRequest:(RequestStartUsernameAuth *)request handler:(void(^)(ResponseStartUsernameAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"StartUsernameAuth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseStartUsernameAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Start login/password authorization process
 */
- (GRPCUnaryProtoCall *)startUsernameAuthWithMessage:(RequestStartUsernameAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"StartUsernameAuth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseStartUsernameAuth class]];
}

#pragma mark ValidateCode(RequestValidateCode) returns (ResponseAuth)

/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)validateCodeWithRequest:(RequestValidateCode *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToValidateCodeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToValidateCodeWithRequest:(RequestValidateCode *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ValidateCode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 */
- (GRPCUnaryProtoCall *)validateCodeWithMessage:(RequestValidateCode *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ValidateCode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark ResendCode(RequestResendCode) returns (ResponseVoid)

/**
 * / Resend code if you don't receive it with first attempt
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)resendCodeWithRequest:(RequestResendCode *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToResendCodeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Resend code if you don't receive it with first attempt
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToResendCodeWithRequest:(RequestResendCode *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ResendCode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Resend code if you don't receive it with first attempt
 */
- (GRPCUnaryProtoCall *)resendCodeWithMessage:(RequestResendCode *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ResendCode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark ValidatePassword(RequestValidatePassword) returns (ResponseAuth)

/**
 * / Validate your passwword
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)validatePasswordWithRequest:(RequestValidatePassword *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToValidatePasswordWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Validate your passwword
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToValidatePasswordWithRequest:(RequestValidatePassword *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ValidatePassword"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Validate your passwword
 */
- (GRPCUnaryProtoCall *)validatePasswordWithMessage:(RequestValidatePassword *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ValidatePassword"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark GetOAuth2Params(RequestGetOAuth2Params) returns (ResponseGetOAuth2Params)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getOAuth2ParamsWithRequest:(RequestGetOAuth2Params *)request handler:(void(^)(ResponseGetOAuth2Params *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetOAuth2ParamsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetOAuth2ParamsWithRequest:(RequestGetOAuth2Params *)request handler:(void(^)(ResponseGetOAuth2Params *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetOAuth2Params"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetOAuth2Params class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)getOAuth2ParamsWithMessage:(RequestGetOAuth2Params *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetOAuth2Params"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetOAuth2Params class]];
}

#pragma mark CompleteOAuth2(RequestCompleteOAuth2) returns (ResponseAuth)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)completeOAuth2WithRequest:(RequestCompleteOAuth2 *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCompleteOAuth2WithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCompleteOAuth2WithRequest:(RequestCompleteOAuth2 *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CompleteOAuth2"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)completeOAuth2WithMessage:(RequestCompleteOAuth2 *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CompleteOAuth2"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark SignUp(RequestSignUp) returns (ResponseAuth)

/**
 * / Sign up existed user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signUpWithRequest:(RequestSignUp *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSignUpWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Sign up existed user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignUpWithRequest:(RequestSignUp *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SignUp"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Sign up existed user
 */
- (GRPCUnaryProtoCall *)signUpWithMessage:(RequestSignUp *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SignUp"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark GetAuthSessions(RequestGetAuthSessions) returns (ResponseGetAuthSessions)

/**
 * / Returns all authorized user's sessions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getAuthSessionsWithRequest:(RequestGetAuthSessions *)request handler:(void(^)(ResponseGetAuthSessions *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetAuthSessionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Returns all authorized user's sessions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetAuthSessionsWithRequest:(RequestGetAuthSessions *)request handler:(void(^)(ResponseGetAuthSessions *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetAuthSessions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetAuthSessions class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Returns all authorized user's sessions
 */
- (GRPCUnaryProtoCall *)getAuthSessionsWithMessage:(RequestGetAuthSessions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetAuthSessions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetAuthSessions class]];
}

#pragma mark TerminateSession(RequestTerminateSession) returns (ResponseVoid)

/**
 * / Deprecated. Does not produce any effect.
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)terminateSessionWithRequest:(RequestTerminateSession *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToTerminateSessionWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated. Does not produce any effect.
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToTerminateSessionWithRequest:(RequestTerminateSession *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"TerminateSession"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated. Does not produce any effect.
 */
- (GRPCUnaryProtoCall *)terminateSessionWithMessage:(RequestTerminateSession *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"TerminateSession"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark TerminateAllSessions(RequestTerminateAllSessions) returns (ResponseVoid)

/**
 * / Log out user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)terminateAllSessionsWithRequest:(RequestTerminateAllSessions *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToTerminateAllSessionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Log out user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToTerminateAllSessionsWithRequest:(RequestTerminateAllSessions *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"TerminateAllSessions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Log out user
 */
- (GRPCUnaryProtoCall *)terminateAllSessionsWithMessage:(RequestTerminateAllSessions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"TerminateAllSessions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark SignOut(RequestSignOut) returns (ResponseVoid)

/**
 * / Log out current session
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signOutWithRequest:(RequestSignOut *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSignOutWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Log out current session
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignOutWithRequest:(RequestSignOut *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SignOut"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Log out current session
 */
- (GRPCUnaryProtoCall *)signOutWithMessage:(RequestSignOut *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SignOut"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark SignInObsolete(RequestSignInObsolete) returns (ResponseAuth)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signInObsoleteWithRequest:(RequestSignInObsolete *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSignInObsoleteWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignInObsoleteWithRequest:(RequestSignInObsolete *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SignInObsolete"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)signInObsoleteWithMessage:(RequestSignInObsolete *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SignInObsolete"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark SignUpObsolete(RequestSignUpObsolete) returns (ResponseAuth)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signUpObsoleteWithRequest:(RequestSignUpObsolete *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSignUpObsoleteWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignUpObsoleteWithRequest:(RequestSignUpObsolete *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SignUpObsolete"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseAuth class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)signUpObsoleteWithMessage:(RequestSignUpObsolete *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SignUpObsolete"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseAuth class]];
}

#pragma mark SendAuthCodeObsolete(RequestSendAuthCodeObsolete) returns (ResponseSendAuthCodeObsolete)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)sendAuthCodeObsoleteWithRequest:(RequestSendAuthCodeObsolete *)request handler:(void(^)(ResponseSendAuthCodeObsolete *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSendAuthCodeObsoleteWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSendAuthCodeObsoleteWithRequest:(RequestSendAuthCodeObsolete *)request handler:(void(^)(ResponseSendAuthCodeObsolete *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SendAuthCodeObsolete"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseSendAuthCodeObsolete class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)sendAuthCodeObsoleteWithMessage:(RequestSendAuthCodeObsolete *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SendAuthCodeObsolete"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseSendAuthCodeObsolete class]];
}

#pragma mark SendAuthCallObsolete(RequestSendAuthCallObsolete) returns (ResponseVoid)

/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)sendAuthCallObsoleteWithRequest:(RequestSendAuthCallObsolete *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSendAuthCallObsoleteWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSendAuthCallObsoleteWithRequest:(RequestSendAuthCallObsolete *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SendAuthCallObsolete"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Deprecated
 */
- (GRPCUnaryProtoCall *)sendAuthCallObsoleteWithMessage:(RequestSendAuthCallObsolete *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SendAuthCallObsolete"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark ChangePassword(RequestChangePassword) returns (ResponseVoid)

- (void)changePasswordWithRequest:(RequestChangePassword *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToChangePasswordWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToChangePasswordWithRequest:(RequestChangePassword *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ChangePassword"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)changePasswordWithMessage:(RequestChangePassword *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ChangePassword"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark GetSelf(Empty) returns (ResponseGetSelf)

- (void)getSelfWithRequest:(GPBEmpty *)request handler:(void(^)(ResponseGetSelf *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetSelfWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetSelfWithRequest:(GPBEmpty *)request handler:(void(^)(ResponseGetSelf *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetSelf"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetSelf class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getSelfWithMessage:(GPBEmpty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetSelf"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetSelf class]];
}

@end
#endif
