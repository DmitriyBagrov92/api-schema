// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: media_and_files.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "MediaAndFiles.pbrpc.h"
#import "MediaAndFiles.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBWrappers.pbobjc.h>
#else
#import "GPBWrappers.pbobjc.h"
#endif
#import "google/api/Annotations.pbobjc.h"
#import "Definitions.pbobjc.h"
#import "scalapb/Scalapb.pbobjc.h"

@implementation MediaAndFiles

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"MediaAndFiles"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"MediaAndFiles"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark GetFileUrl(RequestGetFileUrl) returns (ResponseGetFileUrl)

/**
 * / Get link to file for downloading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getFileUrlWithRequest:(RequestGetFileUrl *)request handler:(void(^)(ResponseGetFileUrl *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetFileUrlWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Get link to file for downloading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetFileUrlWithRequest:(RequestGetFileUrl *)request handler:(void(^)(ResponseGetFileUrl *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetFileUrl"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetFileUrl class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Get link to file for downloading
 */
- (GRPCUnaryProtoCall *)getFileUrlWithMessage:(RequestGetFileUrl *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetFileUrl"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetFileUrl class]];
}

#pragma mark GetFileUrls(RequestGetFileUrls) returns (ResponseGetFileUrls)

/**
 * / Get link to files for downloading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getFileUrlsWithRequest:(RequestGetFileUrls *)request handler:(void(^)(ResponseGetFileUrls *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetFileUrlsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Get link to files for downloading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetFileUrlsWithRequest:(RequestGetFileUrls *)request handler:(void(^)(ResponseGetFileUrls *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetFileUrls"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetFileUrls class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Get link to files for downloading
 */
- (GRPCUnaryProtoCall *)getFileUrlsWithMessage:(RequestGetFileUrls *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetFileUrls"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetFileUrls class]];
}

#pragma mark GetFileUrlBuilder(RequestGetFileUrlBuilder) returns (ResponseGetFileUrlBuilder)

/**
 * / Create builder for file url
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getFileUrlBuilderWithRequest:(RequestGetFileUrlBuilder *)request handler:(void(^)(ResponseGetFileUrlBuilder *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetFileUrlBuilderWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Create builder for file url
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetFileUrlBuilderWithRequest:(RequestGetFileUrlBuilder *)request handler:(void(^)(ResponseGetFileUrlBuilder *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetFileUrlBuilder"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetFileUrlBuilder class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Create builder for file url
 */
- (GRPCUnaryProtoCall *)getFileUrlBuilderWithMessage:(RequestGetFileUrlBuilder *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetFileUrlBuilder"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetFileUrlBuilder class]];
}

#pragma mark GetFileUploadUrl(RequestGetFileUploadUrl) returns (ResponseGetFileUploadUrl)

/**
 * / Get url for uploading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getFileUploadUrlWithRequest:(RequestGetFileUploadUrl *)request handler:(void(^)(ResponseGetFileUploadUrl *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetFileUploadUrlWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Get url for uploading
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetFileUploadUrlWithRequest:(RequestGetFileUploadUrl *)request handler:(void(^)(ResponseGetFileUploadUrl *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetFileUploadUrl"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetFileUploadUrl class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Get url for uploading
 */
- (GRPCUnaryProtoCall *)getFileUploadUrlWithMessage:(RequestGetFileUploadUrl *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetFileUploadUrl"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetFileUploadUrl class]];
}

#pragma mark CommitFileUpload(RequestCommitFileUpload) returns (ResponseCommitFileUpload)

/**
 * / Finish uploading a file
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)commitFileUploadWithRequest:(RequestCommitFileUpload *)request handler:(void(^)(ResponseCommitFileUpload *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCommitFileUploadWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Finish uploading a file
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCommitFileUploadWithRequest:(RequestCommitFileUpload *)request handler:(void(^)(ResponseCommitFileUpload *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CommitFileUpload"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseCommitFileUpload class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Finish uploading a file
 */
- (GRPCUnaryProtoCall *)commitFileUploadWithMessage:(RequestCommitFileUpload *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CommitFileUpload"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseCommitFileUpload class]];
}

#pragma mark GetFileUploadPartUrl(RequestGetFileUploadPartUrl) returns (ResponseGetFileUploadPartUrl)

/**
 * / Get url for uploading chunk of file
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getFileUploadPartUrlWithRequest:(RequestGetFileUploadPartUrl *)request handler:(void(^)(ResponseGetFileUploadPartUrl *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetFileUploadPartUrlWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * / Get url for uploading chunk of file
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetFileUploadPartUrlWithRequest:(RequestGetFileUploadPartUrl *)request handler:(void(^)(ResponseGetFileUploadPartUrl *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetFileUploadPartUrl"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetFileUploadPartUrl class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * / Get url for uploading chunk of file
 */
- (GRPCUnaryProtoCall *)getFileUploadPartUrlWithMessage:(RequestGetFileUploadPartUrl *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetFileUploadPartUrl"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetFileUploadPartUrl class]];
}

@end
#endif
