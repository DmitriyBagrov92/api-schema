// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obsolete.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Obsolete.pbobjc.h"
#import "scalapb/Scalapb.pbobjc.h"
#import "google/api/Annotations.pbobjc.h"
#import "SequenceAndUpdates.pbobjc.h"
#import "Definitions.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(GPBBytesValue);
GPBObjCClassDeclaration(GPBEmpty);
GPBObjCClassDeclaration(GPBInt32Value);
GPBObjCClassDeclaration(GPBInt64Value);
GPBObjCClassDeclaration(GPBStringValue);
GPBObjCClassDeclaration(ObsoleteOutPeer);
GPBObjCClassDeclaration(ObsoletePeer);
GPBObjCClassDeclaration(ObsoletePeersList);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping);
GPBObjCClassDeclaration(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen);
GPBObjCClassDeclaration(ObsoleteWeakUpdateCommand);
GPBObjCClassDeclaration(ObsoleteWeakUpdateCommand_ObsoleteMyOnline);
GPBObjCClassDeclaration(ObsoleteWeakUpdateCommand_ObsoleteMyTyping);
GPBObjCClassDeclaration(UpdateSeqUpdate);

#pragma mark - ObsoleteRoot

@implementation ObsoleteRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    registry = [[GPBExtensionRegistry alloc] init];
    // Merge in the imports (direct or indirect) that defined extensions.
    [registry addExtensions:[GAPIAnnotationsRoot extensionRegistry]];
    [registry addExtensions:[DefinitionsRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - ObsoleteRoot_FileDescriptor

static GPBFileDescriptor *ObsoleteRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"dialog"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum ObsoleteTypingType

GPBEnumDescriptor *ObsoleteTypingType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ObsoleteTypingtypeUnknown\000ObsoleteTyping"
        "typeText\000";
    static const int32_t values[] = {
        ObsoleteTypingType_ObsoleteTypingtypeUnknown,
        ObsoleteTypingType_ObsoleteTypingtypeText,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ObsoleteTypingType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ObsoleteTypingType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ObsoleteTypingType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ObsoleteTypingType_ObsoleteTypingtypeUnknown:
    case ObsoleteTypingType_ObsoleteTypingtypeText:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ObsoletePeer

@implementation ObsoletePeer

@dynamic type;
@dynamic id_p;
@dynamic hasStrId, strId;
@dynamic accessHash;

typedef struct ObsoletePeer__storage_ {
  uint32_t _has_storage_[1];
  ObsoletePeer_ObsoletePeerType type;
  int32_t id_p;
  GPBStringValue *strId;
  int64_t accessHash;
} ObsoletePeer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = ObsoletePeer_ObsoletePeerType_EnumDescriptor,
        .number = ObsoletePeer_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoletePeer__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoletePeer_FieldNumber_Id_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoletePeer__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "strId",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBStringValue),
        .number = ObsoletePeer_FieldNumber_StrId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoletePeer__storage_, strId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "accessHash",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoletePeer_FieldNumber_AccessHash,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ObsoletePeer__storage_, accessHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoletePeer class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoletePeer__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ObsoletePeer_Type_RawValue(ObsoletePeer *message) {
  GPBDescriptor *descriptor = [ObsoletePeer descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoletePeer_FieldNumber_Type];
  return GPBGetMessageRawEnumField(message, field);
}

void SetObsoletePeer_Type_RawValue(ObsoletePeer *message, int32_t value) {
  GPBDescriptor *descriptor = [ObsoletePeer descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoletePeer_FieldNumber_Type];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - Enum ObsoletePeer_ObsoletePeerType

GPBEnumDescriptor *ObsoletePeer_ObsoletePeerType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ObsoletePeertypeUnknown\000ObsoletePeertype"
        "Private\000ObsoletePeertypeGroup\000ObsoletePe"
        "ertypeSip\000";
    static const int32_t values[] = {
        ObsoletePeer_ObsoletePeerType_ObsoletePeertypeUnknown,
        ObsoletePeer_ObsoletePeerType_ObsoletePeertypePrivate,
        ObsoletePeer_ObsoletePeerType_ObsoletePeertypeGroup,
        ObsoletePeer_ObsoletePeerType_ObsoletePeertypeSip,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ObsoletePeer_ObsoletePeerType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ObsoletePeer_ObsoletePeerType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ObsoletePeer_ObsoletePeerType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ObsoletePeer_ObsoletePeerType_ObsoletePeertypeUnknown:
    case ObsoletePeer_ObsoletePeerType_ObsoletePeertypePrivate:
    case ObsoletePeer_ObsoletePeerType_ObsoletePeertypeGroup:
    case ObsoletePeer_ObsoletePeerType_ObsoletePeertypeSip:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ObsoleteOutPeer

@implementation ObsoleteOutPeer

@dynamic hasPeer, peer;
@dynamic accessHash;

typedef struct ObsoleteOutPeer__storage_ {
  uint32_t _has_storage_[1];
  ObsoletePeer *peer;
  int64_t accessHash;
} ObsoleteOutPeer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "peer",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeer),
        .number = ObsoleteOutPeer_FieldNumber_Peer,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteOutPeer__storage_, peer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "accessHash",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteOutPeer_FieldNumber_AccessHash,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteOutPeer__storage_, accessHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteOutPeer class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteOutPeer__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoletePeersList

@implementation ObsoletePeersList

@dynamic peersArray, peersArray_Count;

typedef struct ObsoletePeersList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *peersArray;
} ObsoletePeersList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "peersArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeer),
        .number = ObsoletePeersList_FieldNumber_PeersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(ObsoletePeersList__storage_, peersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoletePeersList class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoletePeersList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteGetDifferenceCommand

@implementation ObsoleteGetDifferenceCommand

@dynamic hasSeq, seq;
@dynamic state;
@dynamic configHash;

typedef struct ObsoleteGetDifferenceCommand__storage_ {
  uint32_t _has_storage_[1];
  GPBInt32Value *seq;
  NSData *state;
  int64_t configHash;
} ObsoleteGetDifferenceCommand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "seq",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteGetDifferenceCommand_FieldNumber_Seq,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteGetDifferenceCommand__storage_, seq),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "state",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteGetDifferenceCommand_FieldNumber_State,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteGetDifferenceCommand__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "configHash",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteGetDifferenceCommand_FieldNumber_ConfigHash,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteGetDifferenceCommand__storage_, configHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteGetDifferenceCommand class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteGetDifferenceCommand__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteSeqUpdateBox

@implementation ObsoleteSeqUpdateBox

@dynamic updateboxOneOfCase;
@dynamic seq;
@dynamic state;
@dynamic obsoleteUpdate;

typedef struct ObsoleteSeqUpdateBox__storage_ {
  uint32_t _has_storage_[2];
  int32_t seq;
  NSData *state;
  GPBBytesValue *obsoleteUpdate;
} ObsoleteSeqUpdateBox__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "seq",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteSeqUpdateBox_FieldNumber_Seq,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteSeqUpdateBox__storage_, seq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "state",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteSeqUpdateBox_FieldNumber_State,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteSeqUpdateBox__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "obsoleteUpdate",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBBytesValue),
        .number = ObsoleteSeqUpdateBox_FieldNumber_ObsoleteUpdate,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteSeqUpdateBox__storage_, obsoleteUpdate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteSeqUpdateBox class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteSeqUpdateBox__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "updatebox",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ObsoleteSeqUpdateBox_ClearUpdateboxOneOfCase(ObsoleteSeqUpdateBox *message) {
  GPBDescriptor *descriptor = [ObsoleteSeqUpdateBox descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - ObsoleteWeakUpdateBox

@implementation ObsoleteWeakUpdateBox

@dynamic updateboxOneOfCase;
@dynamic date;
@dynamic typing;
@dynamic userLastSeen;
@dynamic groupOnline;
@dynamic busMessage;
@dynamic busDeviceConnected;
@dynamic busDeviceDisconnected;
@dynamic busDisposed;
@dynamic forceReload;
@dynamic incomingCall;
@dynamic callHandled;
@dynamic callDisposed;
@dynamic hasUpdateAny, updateAny;

typedef struct ObsoleteWeakUpdateBox__storage_ {
  uint32_t _has_storage_[2];
  ObsoleteWeakUpdateBox_ObsoleteUpdateTyping *typing;
  ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen *userLastSeen;
  ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline *groupOnline;
  ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage *busMessage;
  ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected *busDeviceConnected;
  ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected *busDeviceDisconnected;
  ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed *busDisposed;
  ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState *forceReload;
  ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall *incomingCall;
  ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled *callHandled;
  ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed *callDisposed;
  UpdateSeqUpdate *updateAny;
  int64_t date;
} ObsoleteWeakUpdateBox__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_FieldNumber_Date,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "typing",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping),
        .number = ObsoleteWeakUpdateBox_FieldNumber_Typing,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, typing),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "userLastSeen",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen),
        .number = ObsoleteWeakUpdateBox_FieldNumber_UserLastSeen,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, userLastSeen),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groupOnline",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline),
        .number = ObsoleteWeakUpdateBox_FieldNumber_GroupOnline,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, groupOnline),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "busMessage",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage),
        .number = ObsoleteWeakUpdateBox_FieldNumber_BusMessage,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, busMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "busDeviceConnected",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected),
        .number = ObsoleteWeakUpdateBox_FieldNumber_BusDeviceConnected,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, busDeviceConnected),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "busDeviceDisconnected",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected),
        .number = ObsoleteWeakUpdateBox_FieldNumber_BusDeviceDisconnected,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, busDeviceDisconnected),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "busDisposed",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed),
        .number = ObsoleteWeakUpdateBox_FieldNumber_BusDisposed,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, busDisposed),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "forceReload",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState),
        .number = ObsoleteWeakUpdateBox_FieldNumber_ForceReload,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, forceReload),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "incomingCall",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall),
        .number = ObsoleteWeakUpdateBox_FieldNumber_IncomingCall,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, incomingCall),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "callHandled",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled),
        .number = ObsoleteWeakUpdateBox_FieldNumber_CallHandled,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, callHandled),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "callDisposed",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed),
        .number = ObsoleteWeakUpdateBox_FieldNumber_CallDisposed,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, callDisposed),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "updateAny",
        .dataTypeSpecific.clazz = GPBObjCClass(UpdateSeqUpdate),
        .number = ObsoleteWeakUpdateBox_FieldNumber_UpdateAny,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox__storage_, updateAny),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "updatebox",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\003\014\000\004\013\000\005\n\000\006\022\000\007\025\000\010\013\000\t\013\000\n\014\000\013\013\000\014\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ObsoleteWeakUpdateBox_ClearUpdateboxOneOfCase(ObsoleteWeakUpdateBox *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateTyping

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateTyping

@dynamic hasPeer, peer;
@dynamic userId;
@dynamic type;
@dynamic isTyping;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_ {
  uint32_t _has_storage_[1];
  int32_t userId;
  ObsoleteTypingType type;
  ObsoletePeer *peer;
} ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "peer",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeer),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_Peer,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_, peer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = ObsoleteTypingType_EnumDescriptor,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isTyping",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_IsTyping,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateTyping class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\006\000\004\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_Type_RawValue(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox_ObsoleteUpdateTyping descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_Type];
  return GPBGetMessageRawEnumField(message, field);
}

void SetObsoleteWeakUpdateBox_ObsoleteUpdateTyping_Type_RawValue(ObsoleteWeakUpdateBox_ObsoleteUpdateTyping *message, int32_t value) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox_ObsoleteUpdateTyping descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateBox_ObsoleteUpdateTyping_FieldNumber_Type];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen

@dynamic userId;
@dynamic epochMillis;
@dynamic deviceType;
@dynamic deviceCategory;
@dynamic isOnline;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_ {
  uint32_t _has_storage_[1];
  int32_t userId;
  int32_t deviceType;
  NSString *deviceCategory;
  int64_t epochMillis;
} ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "epochMillis",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen_FieldNumber_EpochMillis,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_, epochMillis),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "deviceType",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen_FieldNumber_DeviceType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_, deviceType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "deviceCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen_FieldNumber_DeviceCategory,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_, deviceCategory),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isOnline",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen_FieldNumber_IsOnline,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateUserLastSeen__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\006\000\002\013\000\003\n\000\004\016\000\005\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline

@dynamic groupId;
@dynamic count;
@dynamic clock;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_ {
  uint32_t _has_storage_[1];
  int32_t groupId;
  int32_t count;
  int64_t clock;
} ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "groupId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline_FieldNumber_GroupId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "clock",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline_FieldNumber_Clock,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_, clock),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateGroupOnline__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage

@dynamic busId;
@dynamic hasSenderId, senderId;
@dynamic hasSenderDeviceId, senderDeviceId;
@dynamic message;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *busId;
  GPBInt32Value *senderId;
  GPBInt64Value *senderDeviceId;
  NSData *message;
} ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "busId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage_FieldNumber_BusId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_, busId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "senderId",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage_FieldNumber_SenderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_, senderId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "senderDeviceId",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt64Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage_FieldNumber_SenderDeviceId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_, senderDeviceId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "message",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage_FieldNumber_Message,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_, message),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusMessage__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\005\000\002\010\000\003\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected

@dynamic busId;
@dynamic hasUserId, userId;
@dynamic deviceId;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_ {
  uint32_t _has_storage_[1];
  NSString *busId;
  GPBInt32Value *userId;
  int64_t deviceId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "busId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected_FieldNumber_BusId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_, busId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "deviceId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected_FieldNumber_DeviceId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_, deviceId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceConnected__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\005\000\002\006\000\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected

@dynamic busId;
@dynamic hasUserId, userId;
@dynamic deviceId;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_ {
  uint32_t _has_storage_[1];
  NSString *busId;
  GPBInt32Value *userId;
  int64_t deviceId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "busId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected_FieldNumber_BusId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_, busId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "deviceId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected_FieldNumber_DeviceId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_, deviceId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDeviceDisconnected__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\005\000\002\006\000\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed

@dynamic busId;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed__storage_ {
  uint32_t _has_storage_[1];
  NSString *busId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "busId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed_FieldNumber_BusId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed__storage_, busId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateEventBusDisposed__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall

@dynamic callId;
@dynamic busId;
@dynamic hasPeer, peer;
@dynamic hasDisplayName, displayName;
@dynamic hasAttemptIndex, attemptIndex;
@dynamic hasOutPeer, outPeer;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_ {
  uint32_t _has_storage_[1];
  NSString *busId;
  ObsoletePeer *peer;
  GPBStringValue *displayName;
  GPBInt32Value *attemptIndex;
  ObsoleteOutPeer *outPeer;
  int64_t callId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "callId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_CallId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, callId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "busId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_BusId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, busId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "peer",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeer),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_Peer,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, peer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "displayName",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBStringValue),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_DisplayName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, displayName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "attemptIndex",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_AttemptIndex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, attemptIndex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "outPeer",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteOutPeer),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall_FieldNumber_OutPeer,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_, outPeer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateIncomingCall__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\006\000\002\005\000\004\013\000\005\014\000\006\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled

@dynamic callId;
@dynamic hasAttemptIndex, attemptIndex;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled__storage_ {
  uint32_t _has_storage_[1];
  GPBInt32Value *attemptIndex;
  int64_t callId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "callId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled_FieldNumber_CallId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled__storage_, callId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "attemptIndex",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled_FieldNumber_AttemptIndex,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled__storage_, attemptIndex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallHandled__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\006\000\002\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed

@dynamic callId;
@dynamic hasAttemptIndex, attemptIndex;
@dynamic reason;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_ {
  uint32_t _has_storage_[1];
  ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason reason;
  GPBInt32Value *attemptIndex;
  int64_t callId;
} ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "callId",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_FieldNumber_CallId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_, callId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "attemptIndex",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBInt32Value),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_FieldNumber_AttemptIndex,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_, attemptIndex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reason",
        .dataTypeSpecific.enumDescFunc = ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_EnumDescriptor,
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_FieldNumber_Reason,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_, reason),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\006\000\002\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_Reason_RawValue(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_FieldNumber_Reason];
  return GPBGetMessageRawEnumField(message, field);
}

void SetObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_Reason_RawValue(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed *message, int32_t value) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_FieldNumber_Reason];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - Enum ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason

GPBEnumDescriptor *ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ObsoleteDisposalReasonUnknown\000ObsoleteDi"
        "sposalReasonRejected\000ObsoleteDisposalRea"
        "sonBusy\000ObsoleteDisposalReasonEnded\000Obso"
        "leteDisposalReasonAnswerTimeout\000";
    static const int32_t values[] = {
        ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonUnknown,
        ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonRejected,
        ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonBusy,
        ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonEnded,
        ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonAnswerTimeout,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_IsValidValue(int32_t value__) {
  switch (value__) {
    case ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonUnknown:
    case ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonRejected:
    case ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonBusy:
    case ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonEnded:
    case ObsoleteWeakUpdateBox_ObsoleteUpdateCallDisposed_ObsoleteDisposalReason_ObsoleteDisposalReasonAnswerTimeout:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState

@dynamic fieldsArray, fieldsArray_Count;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *fieldsArray;
} ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fieldsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_FieldNumber_FieldsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState__storage_, fieldsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField

@implementation ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField

@dynamic fieldOneOfCase;
@dynamic reloadDialogs;
@dynamic reloadContacts;
@dynamic reloadHistory;

typedef struct ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_ {
  uint32_t _has_storage_[2];
  GPBEmpty *reloadDialogs;
  GPBEmpty *reloadContacts;
  ObsoletePeersList *reloadHistory;
} ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "reloadDialogs",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBEmpty),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField_FieldNumber_ReloadDialogs,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_, reloadDialogs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reloadContacts",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBEmpty),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField_FieldNumber_ReloadContacts,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_, reloadContacts),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "reloadHistory",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeersList),
        .number = ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField_FieldNumber_ReloadHistory,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_, reloadHistory),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "field",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\r\000\002\016\000\003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField_ClearFieldOneOfCase(ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateBox_ObsoleteUpdateForceReloadState_ObsoleteForceReloadField descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - ObsoleteServiceUpdate

@implementation ObsoleteServiceUpdate

@dynamic updateOneOfCase;
@dynamic obsoleteUpdate;

typedef struct ObsoleteServiceUpdate__storage_ {
  uint32_t _has_storage_[2];
  GPBBytesValue *obsoleteUpdate;
} ObsoleteServiceUpdate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "obsoleteUpdate",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBBytesValue),
        .number = ObsoleteServiceUpdate_FieldNumber_ObsoleteUpdate,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteServiceUpdate__storage_, obsoleteUpdate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteServiceUpdate class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteServiceUpdate__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "update",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ObsoleteServiceUpdate_ClearUpdateOneOfCase(ObsoleteServiceUpdate *message) {
  GPBDescriptor *descriptor = [ObsoleteServiceUpdate descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - ObsoleteWeakUpdateCommand

@implementation ObsoleteWeakUpdateCommand

@dynamic commandOneOfCase;
@dynamic subscribeToOnlines;
@dynamic unsubscribeFromOnlines;
@dynamic dropOnlineSubscriptions;
@dynamic myTyping;
@dynamic subscribeToTypings;
@dynamic unsubscribeFromTypings;
@dynamic dropTypingSubscriptions;
@dynamic subscribeToEventBusUpdates;
@dynamic myOnline;

typedef struct ObsoleteWeakUpdateCommand__storage_ {
  uint32_t _has_storage_[2];
  ObsoletePeersList *subscribeToOnlines;
  ObsoletePeersList *unsubscribeFromOnlines;
  GPBEmpty *dropOnlineSubscriptions;
  ObsoleteWeakUpdateCommand_ObsoleteMyTyping *myTyping;
  ObsoletePeersList *subscribeToTypings;
  ObsoletePeersList *unsubscribeFromTypings;
  GPBEmpty *dropTypingSubscriptions;
  GPBEmpty *subscribeToEventBusUpdates;
  ObsoleteWeakUpdateCommand_ObsoleteMyOnline *myOnline;
} ObsoleteWeakUpdateCommand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "subscribeToOnlines",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeersList),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_SubscribeToOnlines,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, subscribeToOnlines),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unsubscribeFromOnlines",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeersList),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_UnsubscribeFromOnlines,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, unsubscribeFromOnlines),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "dropOnlineSubscriptions",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBEmpty),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_DropOnlineSubscriptions,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, dropOnlineSubscriptions),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "myTyping",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateCommand_ObsoleteMyTyping),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_MyTyping,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, myTyping),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "subscribeToTypings",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeersList),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_SubscribeToTypings,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, subscribeToTypings),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unsubscribeFromTypings",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeersList),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_UnsubscribeFromTypings,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, unsubscribeFromTypings),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "dropTypingSubscriptions",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBEmpty),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_DropTypingSubscriptions,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, dropTypingSubscriptions),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "subscribeToEventBusUpdates",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBEmpty),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_SubscribeToEventBusUpdates,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, subscribeToEventBusUpdates),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "myOnline",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoleteWeakUpdateCommand_ObsoleteMyOnline),
        .number = ObsoleteWeakUpdateCommand_FieldNumber_MyOnline,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand__storage_, myOnline),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateCommand class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateCommand__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "command",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001\022\000\002\026\000\003\027\000\007\010\000\010\022\000\t\026\000\n\027\000\013\032\000\014\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ObsoleteWeakUpdateCommand_ClearCommandOneOfCase(ObsoleteWeakUpdateCommand *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateCommand descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - ObsoleteWeakUpdateCommand_ObsoleteMyTyping

@implementation ObsoleteWeakUpdateCommand_ObsoleteMyTyping

@dynamic hasPeer, peer;
@dynamic type;
@dynamic start;

typedef struct ObsoleteWeakUpdateCommand_ObsoleteMyTyping__storage_ {
  uint32_t _has_storage_[1];
  ObsoleteTypingType type;
  ObsoletePeer *peer;
} ObsoleteWeakUpdateCommand_ObsoleteMyTyping__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "peer",
        .dataTypeSpecific.clazz = GPBObjCClass(ObsoletePeer),
        .number = ObsoleteWeakUpdateCommand_ObsoleteMyTyping_FieldNumber_Peer,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand_ObsoleteMyTyping__storage_, peer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = ObsoleteTypingType_EnumDescriptor,
        .number = ObsoleteWeakUpdateCommand_ObsoleteMyTyping_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ObsoleteWeakUpdateCommand_ObsoleteMyTyping__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "start",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateCommand_ObsoleteMyTyping_FieldNumber_Start,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateCommand_ObsoleteMyTyping class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateCommand_ObsoleteMyTyping__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateCommand)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ObsoleteWeakUpdateCommand_ObsoleteMyTyping_Type_RawValue(ObsoleteWeakUpdateCommand_ObsoleteMyTyping *message) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateCommand_ObsoleteMyTyping descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateCommand_ObsoleteMyTyping_FieldNumber_Type];
  return GPBGetMessageRawEnumField(message, field);
}

void SetObsoleteWeakUpdateCommand_ObsoleteMyTyping_Type_RawValue(ObsoleteWeakUpdateCommand_ObsoleteMyTyping *message, int32_t value) {
  GPBDescriptor *descriptor = [ObsoleteWeakUpdateCommand_ObsoleteMyTyping descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ObsoleteWeakUpdateCommand_ObsoleteMyTyping_FieldNumber_Type];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - ObsoleteWeakUpdateCommand_ObsoleteMyOnline

@implementation ObsoleteWeakUpdateCommand_ObsoleteMyOnline

@dynamic online;

typedef struct ObsoleteWeakUpdateCommand_ObsoleteMyOnline__storage_ {
  uint32_t _has_storage_[1];
} ObsoleteWeakUpdateCommand_ObsoleteMyOnline__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "online",
        .dataTypeSpecific.clazz = Nil,
        .number = ObsoleteWeakUpdateCommand_ObsoleteMyOnline_FieldNumber_Online,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ObsoleteWeakUpdateCommand_ObsoleteMyOnline class]
                                     rootClass:[ObsoleteRoot class]
                                          file:ObsoleteRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ObsoleteWeakUpdateCommand_ObsoleteMyOnline__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    [localDescriptor setupContainingMessageClass:GPBObjCClass(ObsoleteWeakUpdateCommand)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
