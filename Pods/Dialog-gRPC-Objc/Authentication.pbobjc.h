// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authentication.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AuthSession;
@class Config;
@class ForceReloadContacts;
@class ForceReloadDialogs;
@class ForceReloadHistory;
@class GPBDoubleValue;
@class GPBInt64Value;
@class GPBStringValue;
@class Peer;
@class User;
GPB_ENUM_FWD_DECLARE(Sex);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PhoneActivationType

/** / Способ активации при регистрации по телефону */
typedef GPB_ENUM(PhoneActivationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PhoneActivationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PhoneActivationType_PhoneActivationTypeUnknown = 0,

  /** / Активация по коду */
  PhoneActivationType_PhoneActivationTypeCode = 1,

  /** / Активация по паролю */
  PhoneActivationType_PhoneActivationTypePassword = 2,
};

GPBEnumDescriptor *PhoneActivationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PhoneActivationType_IsValidValue(int32_t value);

#pragma mark - Enum EmailActivationType

/** / Способ активации при регистрации по email */
typedef GPB_ENUM(EmailActivationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EmailActivationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EmailActivationType_EmailActivationTypeUnknown = 0,

  /** / Активация по коду */
  EmailActivationType_EmailActivationTypeCode = 1,

  /** / Активация по OAuth2 */
  EmailActivationType_EmailActivationTypeOauth2 = 2,

  /** / Активация по паролю */
  EmailActivationType_EmailActivationTypePassword = 3,
};

GPBEnumDescriptor *EmailActivationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EmailActivationType_IsValidValue(int32_t value);

#pragma mark - Enum AuthExtraInfoType

/** / Дополнительные данные о завершенной авторизации */
typedef GPB_ENUM(AuthExtraInfoType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AuthExtraInfoType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AuthExtraInfoType_AuthExtraInfoTypeNone = 0,

  /** / Пароль, использованный при авторизации, должен быть изменён до следующей авторизации */
  AuthExtraInfoType_AuthExtraInfoTypeNeedChangePassword = 1,
};

GPBEnumDescriptor *AuthExtraInfoType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AuthExtraInfoType_IsValidValue(int32_t value);

#pragma mark - Enum AuthHolder

/** / Держатель сессии */
typedef GPB_ENUM(AuthHolder) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AuthHolder_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AuthHolder_AuthHolderUnknown = 0,

  /** Держатель сессии -- текущее устройство пользователя */
  AuthHolder_AuthHolderThisdevice = 1,

  /** / Держатель сессии -- другое устройство пользователя */
  AuthHolder_AuthHolderOtherdevice = 2,
};

GPBEnumDescriptor *AuthHolder_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AuthHolder_IsValidValue(int32_t value);

#pragma mark - AuthenticationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface AuthenticationRoot : GPBRootObject
@end

#pragma mark - RequestStartPhoneAuth

typedef GPB_ENUM(RequestStartPhoneAuth_FieldNumber) {
  RequestStartPhoneAuth_FieldNumber_PhoneNumber = 1,
  RequestStartPhoneAuth_FieldNumber_TimeZone = 2,
  RequestStartPhoneAuth_FieldNumber_PreferredLanguagesArray = 3,
};

/**
 * / Запрос на начало телефонной авторизации
 **/
GPB_FINAL @interface RequestStartPhoneAuth : GPBMessage

/** / Номер телефона использующегося для авторизации */
@property(nonatomic, readwrite) int64_t phoneNumber;

/** / Часовой пояс пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей пользователя (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - ResponseStartPhoneAuth

typedef GPB_ENUM(ResponseStartPhoneAuth_FieldNumber) {
  ResponseStartPhoneAuth_FieldNumber_TransactionHash = 1,
  ResponseStartPhoneAuth_FieldNumber_IsRegistered = 2,
  ResponseStartPhoneAuth_FieldNumber_ActivationType = 3,
};

/**
 * / Ответ на запрос на начало телефонной авторизации
 **/
GPB_FINAL @interface ResponseStartPhoneAuth : GPBMessage

/**
 * / Хэш транзакции -- идентифицирует авторизационную транзакцию начатую вызовом метода RequestStartPhoneAuth
 * / этот хэш необходимо использовать во всех дальнейших вызовах до момента успешной авторизации
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Соответствует ли переданный телефонный номер какому-либо активному пользователю (зарегистрирован ли он) */
@property(nonatomic, readwrite) BOOL isRegistered;

/** / Способ активации авторизации предлагаемый сервером клиенту */
@property(nonatomic, readwrite) PhoneActivationType activationType;

@end

/**
 * Fetches the raw value of a @c ResponseStartPhoneAuth's @c activationType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseStartPhoneAuth_ActivationType_RawValue(ResponseStartPhoneAuth *message);
/**
 * Sets the raw value of an @c ResponseStartPhoneAuth's @c activationType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseStartPhoneAuth_ActivationType_RawValue(ResponseStartPhoneAuth *message, int32_t value);

#pragma mark - RequestSendCodeByPhoneCall

typedef GPB_ENUM(RequestSendCodeByPhoneCall_FieldNumber) {
  RequestSendCodeByPhoneCall_FieldNumber_TransactionHash = 1,
};

/**
 * / Активация авторизации с помощью телефонного звонка
 **/
GPB_FINAL @interface RequestSendCodeByPhoneCall : GPBMessage

/** / Хэш транзакции, полученный на предыдущем шаге из ответа ResponseStartPhoneAuth */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

@end

#pragma mark - RequestStartEmailAuth

typedef GPB_ENUM(RequestStartEmailAuth_FieldNumber) {
  RequestStartEmailAuth_FieldNumber_Email = 1,
  RequestStartEmailAuth_FieldNumber_TimeZone = 2,
  RequestStartEmailAuth_FieldNumber_PreferredLanguagesArray = 3,
};

/**
 * / Запрос на начало авторизации по электронной почте
 **/
GPB_FINAL @interface RequestStartEmailAuth : GPBMessage

/** / Электронная почта использующаяся для авторизации */
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

/** / Часовой пояс пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей пользователя (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - ResponseStartEmailAuth

typedef GPB_ENUM(ResponseStartEmailAuth_FieldNumber) {
  ResponseStartEmailAuth_FieldNumber_TransactionHash = 1,
  ResponseStartEmailAuth_FieldNumber_IsRegistered = 2,
  ResponseStartEmailAuth_FieldNumber_ActivationType = 3,
};

/**
 * / Ответ на запрос на начало авторизации по электронной почте
 **/
GPB_FINAL @interface ResponseStartEmailAuth : GPBMessage

/**
 * / Хэш транзакции -- идентифицирует авторизационную транзакцию начатую вызовом метода RequestStartEmailAuth
 * / этот хэш необходимо использовать во всех дальнейших вызовах до момента успешной авторизации
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Соответствует ли переданная электронная почта какому-либо активному пользователю (зарегистрирован ли он) */
@property(nonatomic, readwrite) BOOL isRegistered;

/** / Способ активации авторизации предлагаемый сервером клиенту */
@property(nonatomic, readwrite) EmailActivationType activationType;

@end

/**
 * Fetches the raw value of a @c ResponseStartEmailAuth's @c activationType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseStartEmailAuth_ActivationType_RawValue(ResponseStartEmailAuth *message);
/**
 * Sets the raw value of an @c ResponseStartEmailAuth's @c activationType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseStartEmailAuth_ActivationType_RawValue(ResponseStartEmailAuth *message, int32_t value);

#pragma mark - RequestStartCertificateAuth

typedef GPB_ENUM(RequestStartCertificateAuth_FieldNumber) {
  RequestStartCertificateAuth_FieldNumber_Name = 1,
  RequestStartCertificateAuth_FieldNumber_TimeZone = 2,
  RequestStartCertificateAuth_FieldNumber_PreferredLanguagesArray = 3,
};

/**
 * / Запрос на начало авторизации с помощью сертификата
 **/
GPB_FINAL @interface RequestStartCertificateAuth : GPBMessage

/** / Предполагаемое имя пользователя, в случае если соответствие сертификата существующему на сервере пользователю не выявлено */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** / Часовой пояс пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей пользователя (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - RequestStartTokenAuth

typedef GPB_ENUM(RequestStartTokenAuth_FieldNumber) {
  RequestStartTokenAuth_FieldNumber_Token = 1,
  RequestStartTokenAuth_FieldNumber_TimeZone = 2,
  RequestStartTokenAuth_FieldNumber_PreferredLanguagesArray = 3,
};

/**
 * / Запрос на начало авторизаци с помощью бот-токена
 **/
GPB_FINAL @interface RequestStartTokenAuth : GPBMessage

/** / Токен выданный при регистрации бота */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

/** / Часовой пояс бота */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей бота (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - RequestStartUsernameAuth

typedef GPB_ENUM(RequestStartUsernameAuth_FieldNumber) {
  RequestStartUsernameAuth_FieldNumber_Username = 1,
  RequestStartUsernameAuth_FieldNumber_TimeZone = 2,
  RequestStartUsernameAuth_FieldNumber_PreferredLanguagesArray = 3,
};

/**
 * / Запрос на начало авторизации по паре логин-пароль
 **/
GPB_FINAL @interface RequestStartUsernameAuth : GPBMessage

/** / Логин пользователя */
@property(nonatomic, readwrite, copy, null_resettable) NSString *username;

/** / Часовой пояс пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей пользователя (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - ResponseStartUsernameAuth

typedef GPB_ENUM(ResponseStartUsernameAuth_FieldNumber) {
  ResponseStartUsernameAuth_FieldNumber_TransactionHash = 1,
  ResponseStartUsernameAuth_FieldNumber_IsRegistered = 2,
};

/**
 * / Ответ на запрос на начало авторизации по паре логин-пароль
 **/
GPB_FINAL @interface ResponseStartUsernameAuth : GPBMessage

/**
 * / Хэш транзакции -- идентифицирует авторизационную транзакцию начатую вызовом метода RequestStartUsernameAuth
 * / этот хэш необходимо использовать во всех дальнейших вызовах до момента успешной авторизации
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Соответствует ли переданный логин какому-либо активному пользователю (зарегистрирован ли он) */
@property(nonatomic, readwrite) BOOL isRegistered;

@end

#pragma mark - RequestApplyExternalSessionAuth

typedef GPB_ENUM(RequestApplyExternalSessionAuth_FieldNumber) {
  RequestApplyExternalSessionAuth_FieldNumber_SessionId = 1,
};

/**
 * / Запрос на перенос авторизованной сессии из внешней доверенной системы
 **/
GPB_FINAL @interface RequestApplyExternalSessionAuth : GPBMessage

/** / Идентификатор сессии во внешней доверенной системе */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@end

#pragma mark - RequestGetIdToken

typedef GPB_ENUM(RequestGetIdToken_FieldNumber) {
  RequestGetIdToken_FieldNumber_Service = 1,
};

/**
 * / Запрос на получение токена сессии для внешней системы
 **/
GPB_FINAL @interface RequestGetIdToken : GPBMessage

/** / Название (идентификатор) внешней системы */
@property(nonatomic, readwrite, copy, null_resettable) NSString *service;

@end

#pragma mark - ResponseGetIdToken

typedef GPB_ENUM(ResponseGetIdToken_FieldNumber) {
  ResponseGetIdToken_FieldNumber_Token = 1,
  ResponseGetIdToken_FieldNumber_ExpirationDate = 2,
};

/**
 * / Ответ на запрос на получение токена сессии для внешней системы
 **/
GPB_FINAL @interface ResponseGetIdToken : GPBMessage

/** / Токен сессии */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

/** / Срок действия токена сессии */
@property(nonatomic, readwrite) int64_t expirationDate;

@end

#pragma mark - RequestStartAuthTransaction

typedef GPB_ENUM(RequestStartAuthTransaction_FieldNumber) {
  RequestStartAuthTransaction_FieldNumber_TimeZone = 1,
  RequestStartAuthTransaction_FieldNumber_PreferredLanguagesArray = 2,
};

/**
 * / Запрос на начало обобщенной авторизации, без указания предпочтительного способа активации
 * / используется для вариантов OAuth и других подобных механизмов
 **/
GPB_FINAL @interface RequestStartAuthTransaction : GPBMessage

/** / Часовой пояс пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *timeZone;
/** Test to see if @c timeZone has been set. */
@property(nonatomic, readwrite) BOOL hasTimeZone;

/** / Список предпочтительных локалей пользователя (в формате ^[a-z]{2}(?:[-_][A-Z]{2})?$) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *preferredLanguagesArray;
/** The number of items in @c preferredLanguagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger preferredLanguagesArray_Count;

@end

#pragma mark - ResponseStartAuthTransaction

typedef GPB_ENUM(ResponseStartAuthTransaction_FieldNumber) {
  ResponseStartAuthTransaction_FieldNumber_TransactionHash = 1,
};

/**
 * / Ответ на запрос на начало обобщенной авторизаци
 **/
GPB_FINAL @interface ResponseStartAuthTransaction : GPBMessage

/**
 * / Хэш транзакции -- идентифицирует авторизационную транзакцию начатую вызовом метода RequestStartAuthTransaction
 * / этот хэш необходимо использовать во всех дальнейших вызовах до момента успешной авторизации
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

@end

#pragma mark - RequestValidateCode

typedef GPB_ENUM(RequestValidateCode_FieldNumber) {
  RequestValidateCode_FieldNumber_TransactionHash = 1,
  RequestValidateCode_FieldNumber_Code = 2,
};

/**
 * / Запрос на валидацию кода внешней активации
 **/
GPB_FINAL @interface RequestValidateCode : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Код, передаваемый серверу в качестве подтверждения прохождения внешней активации */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

#pragma mark - RequestResendCode

typedef GPB_ENUM(RequestResendCode_FieldNumber) {
  RequestResendCode_FieldNumber_TransactionHash = 1,
};

/**
 * / Запрос на перепосылку кода внешней активации
 **/
GPB_FINAL @interface RequestResendCode : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

@end

#pragma mark - RequestValidatePassword

typedef GPB_ENUM(RequestValidatePassword_FieldNumber) {
  RequestValidatePassword_FieldNumber_TransactionHash = 1,
  RequestValidatePassword_FieldNumber_Password = 2,
};

/**
 * / Запрос на прохождение активации по паре логин-пароль
 **/
GPB_FINAL @interface RequestValidatePassword : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Пароль */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@end

#pragma mark - RequestGetOAuth2Params

typedef GPB_ENUM(RequestGetOAuth2Params_FieldNumber) {
  RequestGetOAuth2Params_FieldNumber_TransactionHash = 1,
  RequestGetOAuth2Params_FieldNumber_RedirectURL = 2,
};

/**
 * / Запрос на загрузку параметров OAuth2-платформы
 **/
GPB_FINAL @interface RequestGetOAuth2Params : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / URL для редиректа после успешной авторизации на OAuth2-платформе */
@property(nonatomic, readwrite, copy, null_resettable) NSString *redirectURL;

@end

#pragma mark - ResponseGetOAuth2Params

typedef GPB_ENUM(ResponseGetOAuth2Params_FieldNumber) {
  ResponseGetOAuth2Params_FieldNumber_AuthURL = 1,
};

/**
 * / Ответ на запрос на загрузку параметров OAuth2-платформы
 **/
GPB_FINAL @interface ResponseGetOAuth2Params : GPBMessage

/** / Сформированный URL для аутентификации на OAuth2-платформе */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authURL;

@end

#pragma mark - RequestCompleteOAuth2

typedef GPB_ENUM(RequestCompleteOAuth2_FieldNumber) {
  RequestCompleteOAuth2_FieldNumber_TransactionHash = 1,
  RequestCompleteOAuth2_FieldNumber_Code = 2,
};

/**
 * / Запрос на финализацию аутентификации на OAuth2-платформе
 **/
GPB_FINAL @interface RequestCompleteOAuth2 : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Код активации, полученный после успешной авторизации на OAuth2-платформе */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

#pragma mark - RequestSignUp

typedef GPB_ENUM(RequestSignUp_FieldNumber) {
  RequestSignUp_FieldNumber_TransactionHash = 1,
  RequestSignUp_FieldNumber_Name = 2,
  RequestSignUp_FieldNumber_Sex = 3,
  RequestSignUp_FieldNumber_Password = 4,
};

/**
 * / Запрос на регистрацию пользователя
 **/
GPB_FINAL @interface RequestSignUp : GPBMessage

/** / Полученный ранее хэш транзакции */
@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionHash;

/** / Имя пользователя */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** / Пол пользователя */
@property(nonatomic, readwrite) enum Sex sex;

/** / Желаемый пароль пользователя */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@end

/**
 * Fetches the raw value of a @c RequestSignUp's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestSignUp_Sex_RawValue(RequestSignUp *message);
/**
 * Sets the raw value of an @c RequestSignUp's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestSignUp_Sex_RawValue(RequestSignUp *message, int32_t value);

#pragma mark - ResponseAuth

typedef GPB_ENUM(ResponseAuth_FieldNumber) {
  ResponseAuth_FieldNumber_User = 2,
  ResponseAuth_FieldNumber_Config = 3,
  ResponseAuth_FieldNumber_ConfigHash = 4,
  ResponseAuth_FieldNumber_ExtraInfoArray = 5,
};

/**
 * / Результат авторизации
 **/
GPB_FINAL @interface ResponseAuth : GPBMessage

/** / Структура авторизованного пользователя */
@property(nonatomic, readwrite, strong, null_resettable) User *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** / Конфигруация для авторизованного пользователя */
@property(nonatomic, readwrite, strong, null_resettable) Config *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

/** / Хэш конфигурации */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *configHash;
/** Test to see if @c configHash has been set. */
@property(nonatomic, readwrite) BOOL hasConfigHash;

/** / Дополнительная информация о завершенной авторизации */
// |extraInfoArray| contains |AuthExtraInfoType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *extraInfoArray;
/** The number of items in @c extraInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extraInfoArray_Count;

@end

#pragma mark - AuthSession

typedef GPB_ENUM(AuthSession_FieldNumber) {
  AuthSession_FieldNumber_Id_p = 1,
  AuthSession_FieldNumber_AuthHolder = 2,
  AuthSession_FieldNumber_AppId = 3,
  AuthSession_FieldNumber_AppTitle = 4,
  AuthSession_FieldNumber_DeviceTitle = 5,
  AuthSession_FieldNumber_AuthTime = 6,
  AuthSession_FieldNumber_AuthLocation = 7,
  AuthSession_FieldNumber_Latitude = 8,
  AuthSession_FieldNumber_Longitude = 9,
};

/**
 * / Авторизованная сессия
 **/
GPB_FINAL @interface AuthSession : GPBMessage

/** / Идентификатор сессии */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / Держатель сессии */
@property(nonatomic, readwrite) AuthHolder authHolder;

/** / Идентификатор приложения связанного с сессией */
@property(nonatomic, readwrite) int32_t appId;

/** / Название приложения связанного с сессией */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appTitle;

/** / Название устройства связанного с сессией */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceTitle;

/** / Время создания сессии (от Unix epoch в секундах) */
@property(nonatomic, readwrite) int32_t authTime;

/** / Двубуквенное обозначение страны, из которой была создана сессия */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authLocation;

/** / Географическая широта, из которой была создана сессия */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *latitude;
/** Test to see if @c latitude has been set. */
@property(nonatomic, readwrite) BOOL hasLatitude;

/** / Географическая долгота, из которой была создана сессия */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *longitude;
/** Test to see if @c longitude has been set. */
@property(nonatomic, readwrite) BOOL hasLongitude;

@end

/**
 * Fetches the raw value of a @c AuthSession's @c authHolder property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AuthSession_AuthHolder_RawValue(AuthSession *message);
/**
 * Sets the raw value of an @c AuthSession's @c authHolder property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAuthSession_AuthHolder_RawValue(AuthSession *message, int32_t value);

#pragma mark - RequestGetAuthSessions

/**
 * / Запрос на получение списка сессий
 **/
GPB_FINAL @interface RequestGetAuthSessions : GPBMessage

@end

#pragma mark - ResponseGetAuthSessions

typedef GPB_ENUM(ResponseGetAuthSessions_FieldNumber) {
  ResponseGetAuthSessions_FieldNumber_UserAuthsArray = 1,
};

/**
 * / Ответ на запрос на получение списка сессий
 **/
GPB_FINAL @interface ResponseGetAuthSessions : GPBMessage

/** / Список активных сессий пользователя */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AuthSession*> *userAuthsArray;
/** The number of items in @c userAuthsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userAuthsArray_Count;

@end

#pragma mark - RequestTerminateSession

typedef GPB_ENUM(RequestTerminateSession_FieldNumber) {
  RequestTerminateSession_FieldNumber_Id_p = 1,
};

/**
 * / Запрос на завершение сессии
 **/
GPB_FINAL @interface RequestTerminateSession : GPBMessage

/** / Идентификатор сессии, которую необходимо завершить */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - RequestTerminateAllSessions

/**
 * / Запрос на завершение всех сессий пользователя кроме текущей
 **/
GPB_FINAL @interface RequestTerminateAllSessions : GPBMessage

@end

#pragma mark - RequestSignOut

/**
 * / Запрос на завершение текущей сессии
 **/
GPB_FINAL @interface RequestSignOut : GPBMessage

@end

#pragma mark - ForceReloadField

typedef GPB_ENUM(ForceReloadField_FieldNumber) {
  ForceReloadField_FieldNumber_ForceReloadDialogs = 1,
  ForceReloadField_FieldNumber_ForceReloadContacts = 2,
  ForceReloadField_FieldNumber_ForceReloadHistory = 3,
};

typedef GPB_ENUM(ForceReloadField_Body_OneOfCase) {
  ForceReloadField_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  ForceReloadField_Body_OneOfCase_ForceReloadDialogs = 1,
  ForceReloadField_Body_OneOfCase_ForceReloadContacts = 2,
  ForceReloadField_Body_OneOfCase_ForceReloadHistory = 3,
};

/**
 * / Состояние клиента для принудительного обновления -- при получении WeakUpdate-а UpdateForceReloadState
 * / все соотвтетствующие элементы состояния клиента должны быть перезагружены с сервера
 **/
GPB_FINAL @interface ForceReloadField : GPBMessage

@property(nonatomic, readonly) ForceReloadField_Body_OneOfCase bodyOneOfCase;

/** / Принудительное обновление списка диалогов */
@property(nonatomic, readwrite, strong, null_resettable) ForceReloadDialogs *forceReloadDialogs;

/** / Принудительное обновления списка контактов */
@property(nonatomic, readwrite, strong, null_resettable) ForceReloadContacts *forceReloadContacts;

/** / Принудительное обновление истории чата */
@property(nonatomic, readwrite, strong, null_resettable) ForceReloadHistory *forceReloadHistory;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void ForceReloadField_ClearBodyOneOfCase(ForceReloadField *message);

#pragma mark - ForceReloadDialogs

/**
 * / см. ForceReloadField
 **/
GPB_FINAL @interface ForceReloadDialogs : GPBMessage

@end

#pragma mark - ForceReloadContacts

/**
 * / см. ForceReloadField
 **/
GPB_FINAL @interface ForceReloadContacts : GPBMessage

@end

#pragma mark - ForceReloadHistory

typedef GPB_ENUM(ForceReloadHistory_FieldNumber) {
  ForceReloadHistory_FieldNumber_Peer = 1,
};

/**
 * / см. ForceReloadField
 **/
GPB_FINAL @interface ForceReloadHistory : GPBMessage

/** / Пир чата, историю которого необходимо обновить */
@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestChangePassword

typedef GPB_ENUM(RequestChangePassword_FieldNumber) {
  RequestChangePassword_FieldNumber_OldPassword = 1,
  RequestChangePassword_FieldNumber_NewPassword = 2,
};

/**
 * / Запрос на изменение пароля пользователя
 **/
GPB_FINAL @interface RequestChangePassword : GPBMessage

/** / Старый пароль */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oldPassword;

/** / Новый пароль */
@property(nonatomic, readwrite, copy, null_resettable) NSString *newPassword NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - RequestGetSelf

/**
 * / Запрос на получение структуры текущего пользователя
 **/
GPB_FINAL @interface RequestGetSelf : GPBMessage

@end

#pragma mark - ResponseGetSelf

typedef GPB_ENUM(ResponseGetSelf_FieldNumber) {
  ResponseGetSelf_FieldNumber_User = 1,
};

/**
 * / Ответ на запрос на получение структуры текущего пользователя
 **/
GPB_FINAL @interface ResponseGetSelf : GPBMessage

/** / Структура текущего пользователя */
@property(nonatomic, readwrite, strong, null_resettable) User *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
