// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: web_rtc.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "WebRtc.pbrpc.h"
#import "WebRtc.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#import "Wrappers.pbobjc.h"
#import "Annotations.pbobjc.h"
#import "Definitions.pbobjc.h"
#import "Miscellaneous.pbobjc.h"
#import "Peers.pbobjc.h"
#import "DeviceInfo.pbobjc.h"
#import "Scalapb.pbobjc.h"

@implementation WebRTC

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"WebRTC"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"dialog"
                 serviceName:@"WebRTC"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark GetCallInfo(RequestGetCallInfo) returns (ResponseGetCallInfo)

- (void)getCallInfoWithRequest:(RequestGetCallInfo *)request handler:(void(^)(ResponseGetCallInfo *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetCallInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetCallInfoWithRequest:(RequestGetCallInfo *)request handler:(void(^)(ResponseGetCallInfo *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetCallInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseGetCallInfo class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getCallInfoWithMessage:(RequestGetCallInfo *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetCallInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseGetCallInfo class]];
}

#pragma mark LoadCalls(RequestLoadCalls) returns (ResponseLoadCalls)

- (void)loadCallsWithRequest:(RequestLoadCalls *)request handler:(void(^)(ResponseLoadCalls *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToLoadCallsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToLoadCallsWithRequest:(RequestLoadCalls *)request handler:(void(^)(ResponseLoadCalls *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"LoadCalls"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseLoadCalls class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)loadCallsWithMessage:(RequestLoadCalls *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"LoadCalls"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseLoadCalls class]];
}

#pragma mark DoCall(RequestDoCall) returns (ResponseDoCall)

- (void)doCallWithRequest:(RequestDoCall *)request handler:(void(^)(ResponseDoCall *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToDoCallWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToDoCallWithRequest:(RequestDoCall *)request handler:(void(^)(ResponseDoCall *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"DoCall"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseDoCall class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)doCallWithMessage:(RequestDoCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"DoCall"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseDoCall class]];
}

#pragma mark JoinCall(RequestJoinCall) returns (ResponseVoid)

- (void)joinCallWithRequest:(RequestJoinCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToJoinCallWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToJoinCallWithRequest:(RequestJoinCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"JoinCall"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)joinCallWithMessage:(RequestJoinCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"JoinCall"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark RejectCall(RequestRejectCall) returns (ResponseVoid)

- (void)rejectCallWithRequest:(RequestRejectCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToRejectCallWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToRejectCallWithRequest:(RequestRejectCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"RejectCall"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)rejectCallWithMessage:(RequestRejectCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"RejectCall"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark ChangeCallDisplayName(RequestChangeCallDisplayName) returns (ResponseVoid)

- (void)changeCallDisplayNameWithRequest:(RequestChangeCallDisplayName *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToChangeCallDisplayNameWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToChangeCallDisplayNameWithRequest:(RequestChangeCallDisplayName *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ChangeCallDisplayName"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)changeCallDisplayNameWithMessage:(RequestChangeCallDisplayName *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ChangeCallDisplayName"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

#pragma mark DeleteCall(RequestDeleteCall) returns (ResponseVoid)

- (void)deleteCallWithRequest:(RequestDeleteCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToDeleteCallWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToDeleteCallWithRequest:(RequestDeleteCall *)request handler:(void(^)(ResponseVoid *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"DeleteCall"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ResponseVoid class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)deleteCallWithMessage:(RequestDeleteCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"DeleteCall"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ResponseVoid class]];
}

@end
#endif
