// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: miniappsregistry.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ExtensionPoint;
@class GroupConditions;
@class GroupConditions_GroupCondition;
@class MessageConditions;
@class MessageConditions_MessageCondition;
@class MessageConditions_MessageCondition_DocumentCondition;
@class MiniApp;
@class UUIDValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AppType

/** Defines the type of the app. Currently only WebView supported, but more types can be added in future. */
typedef GPB_ENUM(AppType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AppType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AppType_AppTypeUnknown = 0,

  /** Url which can be opened inside WebView in dialog app */
  AppType_AppTypeWebView = 1,
};

GPBEnumDescriptor *AppType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AppType_IsValidValue(int32_t value);

#pragma mark - Enum UpdateMiniApp_AppLifecycle

typedef GPB_ENUM(UpdateMiniApp_AppLifecycle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UpdateMiniApp_AppLifecycle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UpdateMiniApp_AppLifecycle_AppLifecycleCreated = 0,
  UpdateMiniApp_AppLifecycle_AppLifecycleUpdated = 1,
  UpdateMiniApp_AppLifecycle_AppLifecycleEnabled = 2,
  UpdateMiniApp_AppLifecycle_AppLifecycleDisabled = 3,
  UpdateMiniApp_AppLifecycle_AppLifecycleDeleted = 4,
};

GPBEnumDescriptor *UpdateMiniApp_AppLifecycle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UpdateMiniApp_AppLifecycle_IsValidValue(int32_t value);

#pragma mark - MiniappsregistryRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MiniappsregistryRoot : GPBRootObject
@end

#pragma mark - MiniApp

typedef GPB_ENUM(MiniApp_FieldNumber) {
  MiniApp_FieldNumber_Id_p = 1,
  MiniApp_FieldNumber_AppType = 2,
  MiniApp_FieldNumber_Name = 3,
  MiniApp_FieldNumber_Description_p = 4,
  MiniApp_FieldNumber_Version = 5,
  MiniApp_FieldNumber_Icon = 6,
  MiniApp_FieldNumber_Link = 7,
  MiniApp_FieldNumber_ModifiedAtTs = 8,
  MiniApp_FieldNumber_IsEnabled = 9,
  MiniApp_FieldNumber_Locales = 10,
  MiniApp_FieldNumber_PermissionsArray = 11,
};

GPB_FINAL @interface MiniApp : GPBMessage

/** unique identifier of the app */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** type of the app */
@property(nonatomic, readwrite) AppType appType;

/** name of the app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** additional info, describing this app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** version of app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** icon name for this app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** link to this app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *link;

/** update date/time in millis */
@property(nonatomic, readwrite) int64_t modifiedAtTs;

/** specifies if this app enabled and user can use it, ot not */
@property(nonatomic, readwrite) BOOL isEnabled;

/** supported locales */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *locales;
/** The number of items in @c locales without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger locales_Count;

/** application-level permissions */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@end

/**
 * Fetches the raw value of a @c MiniApp's @c appType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MiniApp_AppType_RawValue(MiniApp *message);
/**
 * Sets the raw value of an @c MiniApp's @c appType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMiniApp_AppType_RawValue(MiniApp *message, int32_t value);

#pragma mark - UpdateMiniApp

typedef GPB_ENUM(UpdateMiniApp_FieldNumber) {
  UpdateMiniApp_FieldNumber_AppLifecycle = 1,
  UpdateMiniApp_FieldNumber_AppData = 2,
  UpdateMiniApp_FieldNumber_PrevClock = 3,
};

/**
 * App update
 **/
GPB_FINAL @interface UpdateMiniApp : GPBMessage

@property(nonatomic, readwrite) UpdateMiniApp_AppLifecycle appLifecycle;

@property(nonatomic, readwrite, strong, null_resettable) MiniApp *appData;
/** Test to see if @c appData has been set. */
@property(nonatomic, readwrite) BOOL hasAppData;

@property(nonatomic, readwrite) int64_t prevClock;

@end

/**
 * Fetches the raw value of a @c UpdateMiniApp's @c appLifecycle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateMiniApp_AppLifecycle_RawValue(UpdateMiniApp *message);
/**
 * Sets the raw value of an @c UpdateMiniApp's @c appLifecycle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateMiniApp_AppLifecycle_RawValue(UpdateMiniApp *message, int32_t value);

#pragma mark - GetAppsRequest

typedef GPB_ENUM(GetAppsRequest_FieldNumber) {
  GetAppsRequest_FieldNumber_FromClock = 1,
};

/**
 * Request to get list of mini-apps
 **/
GPB_FINAL @interface GetAppsRequest : GPBMessage

/** return only apps created/modified since given clock */
@property(nonatomic, readwrite) int64_t fromClock;

@end

#pragma mark - GetAppsResponse

typedef GPB_ENUM(GetAppsResponse_FieldNumber) {
  GetAppsResponse_FieldNumber_AppsArray = 1,
  GetAppsResponse_FieldNumber_Clock = 2,
};

/**
 * List of the mini-app
 **/
GPB_FINAL @interface GetAppsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MiniApp*> *appsArray;
/** The number of items in @c appsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger appsArray_Count;

@property(nonatomic, readwrite) int64_t clock;

@end

#pragma mark - FindAppRequest

typedef GPB_ENUM(FindAppRequest_FieldNumber) {
  FindAppRequest_FieldNumber_AppId = 1,
};

/**
 * Findig mini-app by id
 **/
GPB_FINAL @interface FindAppRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@end

#pragma mark - FindAppResponse

typedef GPB_ENUM(FindAppResponse_FieldNumber) {
  FindAppResponse_FieldNumber_App = 1,
};

/**
 * App found by id (or empty)
 **/
GPB_FINAL @interface FindAppResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) MiniApp *app;
/** Test to see if @c app has been set. */
@property(nonatomic, readwrite) BOOL hasApp;

@end

#pragma mark - IssueAccessTokenRequest

typedef GPB_ENUM(IssueAccessTokenRequest_FieldNumber) {
  IssueAccessTokenRequest_FieldNumber_AppId = 1,
};

/**
 * Issue JWT token for third-party applications
 **/
GPB_FINAL @interface IssueAccessTokenRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@end

#pragma mark - AccessTokenResponse

typedef GPB_ENUM(AccessTokenResponse_FieldNumber) {
  AccessTokenResponse_FieldNumber_AccessToken = 1,
};

GPB_FINAL @interface AccessTokenResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;

@end

#pragma mark - GetExtensionsResponse

typedef GPB_ENUM(GetExtensionsResponse_FieldNumber) {
  GetExtensionsResponse_FieldNumber_MessageExtensionsArray = 1,
  GetExtensionsResponse_FieldNumber_ChatExtensionsArray = 2,
};

GPB_FINAL @interface GetExtensionsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ExtensionPoint*> *messageExtensionsArray;
/** The number of items in @c messageExtensionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageExtensionsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ExtensionPoint*> *chatExtensionsArray;
/** The number of items in @c chatExtensionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatExtensionsArray_Count;

@end

#pragma mark - ExtensionPoint

typedef GPB_ENUM(ExtensionPoint_FieldNumber) {
  ExtensionPoint_FieldNumber_AppId = 1,
  ExtensionPoint_FieldNumber_Action = 2,
  ExtensionPoint_FieldNumber_Label = 3,
  ExtensionPoint_FieldNumber_MessageConditions = 4,
  ExtensionPoint_FieldNumber_GroupConditions = 5,
};

typedef GPB_ENUM(ExtensionPoint_Conditions_OneOfCase) {
  ExtensionPoint_Conditions_OneOfCase_GPBUnsetOneOfCase = 0,
  ExtensionPoint_Conditions_OneOfCase_MessageConditions = 4,
  ExtensionPoint_Conditions_OneOfCase_GroupConditions = 5,
};

GPB_FINAL @interface ExtensionPoint : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@property(nonatomic, readwrite, copy, null_resettable) NSString *label;

@property(nonatomic, readonly) ExtensionPoint_Conditions_OneOfCase conditionsOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) MessageConditions *messageConditions;

@property(nonatomic, readwrite, strong, null_resettable) GroupConditions *groupConditions;

@end

/**
 * Clears whatever value was set for the oneof 'conditions'.
 **/
void ExtensionPoint_ClearConditionsOneOfCase(ExtensionPoint *message);

#pragma mark - MessageConditions

typedef GPB_ENUM(MessageConditions_FieldNumber) {
  MessageConditions_FieldNumber_MessageConditionArray = 1,
};

GPB_FINAL @interface MessageConditions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MessageConditions_MessageCondition*> *messageConditionArray;
/** The number of items in @c messageConditionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageConditionArray_Count;

@end

#pragma mark - MessageConditions_MessageCondition

typedef GPB_ENUM(MessageConditions_MessageCondition_FieldNumber) {
  MessageConditions_MessageCondition_FieldNumber_TextMessage = 1,
  MessageConditions_MessageCondition_FieldNumber_DocumentMessage = 2,
};

GPB_FINAL @interface MessageConditions_MessageCondition : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *textMessage;

@property(nonatomic, readwrite, strong, null_resettable) MessageConditions_MessageCondition_DocumentCondition *documentMessage;
/** Test to see if @c documentMessage has been set. */
@property(nonatomic, readwrite) BOOL hasDocumentMessage;

@end

#pragma mark - MessageConditions_MessageCondition_DocumentCondition

typedef GPB_ENUM(MessageConditions_MessageCondition_DocumentCondition_FieldNumber) {
  MessageConditions_MessageCondition_DocumentCondition_FieldNumber_IsImage = 1,
  MessageConditions_MessageCondition_DocumentCondition_FieldNumber_IsVideo = 2,
  MessageConditions_MessageCondition_DocumentCondition_FieldNumber_IsAudio = 3,
  MessageConditions_MessageCondition_DocumentCondition_FieldNumber_MimeTypeArray = 4,
};

GPB_FINAL @interface MessageConditions_MessageCondition_DocumentCondition : GPBMessage

@property(nonatomic, readwrite) BOOL isImage;

@property(nonatomic, readwrite) BOOL isVideo;

@property(nonatomic, readwrite) BOOL isAudio;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *mimeTypeArray;
/** The number of items in @c mimeTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mimeTypeArray_Count;

@end

#pragma mark - GroupConditions

typedef GPB_ENUM(GroupConditions_FieldNumber) {
  GroupConditions_FieldNumber_GroupConditionArray = 1,
};

GPB_FINAL @interface GroupConditions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupConditions_GroupCondition*> *groupConditionArray;
/** The number of items in @c groupConditionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupConditionArray_Count;

@end

#pragma mark - GroupConditions_GroupCondition

typedef GPB_ENUM(GroupConditions_GroupCondition_FieldNumber) {
  GroupConditions_GroupCondition_FieldNumber_GroupType = 1,
  GroupConditions_GroupCondition_FieldNumber_Visibility = 2,
  GroupConditions_GroupCondition_FieldNumber_PermissionArray = 3,
};

GPB_FINAL @interface GroupConditions_GroupCondition : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *visibility;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *permissionArray;
/** The number of items in @c permissionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
