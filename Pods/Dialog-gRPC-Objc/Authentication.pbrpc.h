// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: authentication.proto

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Authentication.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class GPBEmpty;
@class RequestApplyExternalSessionAuth;
@class RequestChangePassword;
@class RequestCompleteOAuth2;
@class RequestGetAuthSessions;
@class RequestGetIdToken;
@class RequestGetOAuth2Params;
@class RequestGetSelf;
@class RequestResendCode;
@class RequestSendCodeByPhoneCall;
@class RequestSignOut;
@class RequestSignUp;
@class RequestStartAuthTransaction;
@class RequestStartCertificateAuth;
@class RequestStartEmailAuth;
@class RequestStartPhoneAuth;
@class RequestStartTokenAuth;
@class RequestStartUsernameAuth;
@class RequestTerminateAllSessions;
@class RequestTerminateSession;
@class RequestValidateCode;
@class RequestValidatePassword;
@class ResponseAuth;
@class ResponseGetAuthSessions;
@class ResponseGetIdToken;
@class ResponseGetOAuth2Params;
@class ResponseGetSelf;
@class ResponseStartAuthTransaction;
@class ResponseStartEmailAuth;
@class ResponseStartPhoneAuth;
@class ResponseStartUsernameAuth;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
  #import "Empty.pbobjc.h"
  #import "Wrappers.pbobjc.h"
  #import "Annotations.pbobjc.h"
  #import "Definitions.pbobjc.h"
  #import "Miscellaneous.pbobjc.h"
  #import "Peers.pbobjc.h"
  #import "Users.pbobjc.h"
  #import "Scalapb.pbobjc.h"
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol Authentication2 <NSObject>

#pragma mark StartPhoneAuth(RequestStartPhoneAuth) returns (ResponseStartPhoneAuth)

/**
 * / Start authorization by phone
 */
- (GRPCUnaryProtoCall *)startPhoneAuthWithMessage:(RequestStartPhoneAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark SendCodeByPhoneCall(RequestSendCodeByPhoneCall) returns (Empty)

/**
 * / Resend code by transaction hash
 */
- (GRPCUnaryProtoCall *)sendCodeByPhoneCallWithMessage:(RequestSendCodeByPhoneCall *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark StartEmailAuth(RequestStartEmailAuth) returns (ResponseStartEmailAuth)

/**
 * / Start email authorization process
 */
- (GRPCUnaryProtoCall *)startEmailAuthWithMessage:(RequestStartEmailAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark StartCertificateAuth(RequestStartCertificateAuth) returns (ResponseAuth)

- (GRPCUnaryProtoCall *)startCertificateAuthWithMessage:(RequestStartCertificateAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark StartTokenAuth(RequestStartTokenAuth) returns (ResponseAuth)

/**
 * / Start token auth authorization (actual for bots)
 */
- (GRPCUnaryProtoCall *)startTokenAuthWithMessage:(RequestStartTokenAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark StartUsernameAuth(RequestStartUsernameAuth) returns (ResponseStartUsernameAuth)

/**
 * / Start login/password authorization process
 */
- (GRPCUnaryProtoCall *)startUsernameAuthWithMessage:(RequestStartUsernameAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark ApplyExternalSessionAuth(RequestApplyExternalSessionAuth) returns (ResponseAuth)

- (GRPCUnaryProtoCall *)applyExternalSessionAuthWithMessage:(RequestApplyExternalSessionAuth *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetIdToken(RequestGetIdToken) returns (ResponseGetIdToken)

/**
 * Get Id Token for external system
 */
- (GRPCUnaryProtoCall *)getIdTokenWithMessage:(RequestGetIdToken *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark StartAuthTransaction(RequestStartAuthTransaction) returns (ResponseStartAuthTransaction)

- (GRPCUnaryProtoCall *)startAuthTransactionWithMessage:(RequestStartAuthTransaction *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark ValidateCode(RequestValidateCode) returns (ResponseAuth)

/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 */
- (GRPCUnaryProtoCall *)validateCodeWithMessage:(RequestValidateCode *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark ResendCode(RequestResendCode) returns (Empty)

/**
 * / Resend code if you don't receive it with first attempt
 */
- (GRPCUnaryProtoCall *)resendCodeWithMessage:(RequestResendCode *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark ValidatePassword(RequestValidatePassword) returns (ResponseAuth)

/**
 * / Validate your passwword
 */
- (GRPCUnaryProtoCall *)validatePasswordWithMessage:(RequestValidatePassword *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetOAuth2Params(RequestGetOAuth2Params) returns (ResponseGetOAuth2Params)

/**
 * / Get redirect url
 */
- (GRPCUnaryProtoCall *)getOAuth2ParamsWithMessage:(RequestGetOAuth2Params *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark CompleteOAuth2(RequestCompleteOAuth2) returns (ResponseAuth)

/**
 * / Complete OAuth2 Authentication
 */
- (GRPCUnaryProtoCall *)completeOAuth2WithMessage:(RequestCompleteOAuth2 *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark SignUp(RequestSignUp) returns (ResponseAuth)

/**
 * / Sign up existed user
 */
- (GRPCUnaryProtoCall *)signUpWithMessage:(RequestSignUp *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetAuthSessions(RequestGetAuthSessions) returns (ResponseGetAuthSessions)

/**
 * / Returns all authorized user's sessions
 */
- (GRPCUnaryProtoCall *)getAuthSessionsWithMessage:(RequestGetAuthSessions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark TerminateSession(RequestTerminateSession) returns (Empty)

- (GRPCUnaryProtoCall *)terminateSessionWithMessage:(RequestTerminateSession *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark TerminateAllSessions(RequestTerminateAllSessions) returns (Empty)

/**
 * / Log out user
 */
- (GRPCUnaryProtoCall *)terminateAllSessionsWithMessage:(RequestTerminateAllSessions *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark SignOut(RequestSignOut) returns (Empty)

/**
 * / Log out current session
 */
- (GRPCUnaryProtoCall *)signOutWithMessage:(RequestSignOut *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark ChangePassword(RequestChangePassword) returns (Empty)

- (GRPCUnaryProtoCall *)changePasswordWithMessage:(RequestChangePassword *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetSelf(RequestGetSelf) returns (ResponseGetSelf)

- (GRPCUnaryProtoCall *)getSelfWithMessage:(RequestGetSelf *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol Authentication <NSObject>

#pragma mark StartPhoneAuth(RequestStartPhoneAuth) returns (ResponseStartPhoneAuth)

/**
 * / Start authorization by phone
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startPhoneAuthWithRequest:(RequestStartPhoneAuth *)request handler:(void(^)(ResponseStartPhoneAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Start authorization by phone
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartPhoneAuthWithRequest:(RequestStartPhoneAuth *)request handler:(void(^)(ResponseStartPhoneAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark SendCodeByPhoneCall(RequestSendCodeByPhoneCall) returns (Empty)

/**
 * / Resend code by transaction hash
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)sendCodeByPhoneCallWithRequest:(RequestSendCodeByPhoneCall *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Resend code by transaction hash
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSendCodeByPhoneCallWithRequest:(RequestSendCodeByPhoneCall *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark StartEmailAuth(RequestStartEmailAuth) returns (ResponseStartEmailAuth)

/**
 * / Start email authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startEmailAuthWithRequest:(RequestStartEmailAuth *)request handler:(void(^)(ResponseStartEmailAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Start email authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartEmailAuthWithRequest:(RequestStartEmailAuth *)request handler:(void(^)(ResponseStartEmailAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark StartCertificateAuth(RequestStartCertificateAuth) returns (ResponseAuth)

- (void)startCertificateAuthWithRequest:(RequestStartCertificateAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToStartCertificateAuthWithRequest:(RequestStartCertificateAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark StartTokenAuth(RequestStartTokenAuth) returns (ResponseAuth)

/**
 * / Start token auth authorization (actual for bots)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startTokenAuthWithRequest:(RequestStartTokenAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Start token auth authorization (actual for bots)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartTokenAuthWithRequest:(RequestStartTokenAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark StartUsernameAuth(RequestStartUsernameAuth) returns (ResponseStartUsernameAuth)

/**
 * / Start login/password authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)startUsernameAuthWithRequest:(RequestStartUsernameAuth *)request handler:(void(^)(ResponseStartUsernameAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Start login/password authorization process
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToStartUsernameAuthWithRequest:(RequestStartUsernameAuth *)request handler:(void(^)(ResponseStartUsernameAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark ApplyExternalSessionAuth(RequestApplyExternalSessionAuth) returns (ResponseAuth)

- (void)applyExternalSessionAuthWithRequest:(RequestApplyExternalSessionAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToApplyExternalSessionAuthWithRequest:(RequestApplyExternalSessionAuth *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetIdToken(RequestGetIdToken) returns (ResponseGetIdToken)

/**
 * Get Id Token for external system
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getIdTokenWithRequest:(RequestGetIdToken *)request handler:(void(^)(ResponseGetIdToken *_Nullable response, NSError *_Nullable error))handler;

/**
 * Get Id Token for external system
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetIdTokenWithRequest:(RequestGetIdToken *)request handler:(void(^)(ResponseGetIdToken *_Nullable response, NSError *_Nullable error))handler;


#pragma mark StartAuthTransaction(RequestStartAuthTransaction) returns (ResponseStartAuthTransaction)

- (void)startAuthTransactionWithRequest:(RequestStartAuthTransaction *)request handler:(void(^)(ResponseStartAuthTransaction *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToStartAuthTransactionWithRequest:(RequestStartAuthTransaction *)request handler:(void(^)(ResponseStartAuthTransaction *_Nullable response, NSError *_Nullable error))handler;


#pragma mark ValidateCode(RequestValidateCode) returns (ResponseAuth)

/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)validateCodeWithRequest:(RequestValidateCode *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * * Validate code received by phone or email
 * Returns error if user does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToValidateCodeWithRequest:(RequestValidateCode *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark ResendCode(RequestResendCode) returns (Empty)

/**
 * / Resend code if you don't receive it with first attempt
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)resendCodeWithRequest:(RequestResendCode *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Resend code if you don't receive it with first attempt
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToResendCodeWithRequest:(RequestResendCode *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark ValidatePassword(RequestValidatePassword) returns (ResponseAuth)

/**
 * / Validate your passwword
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)validatePasswordWithRequest:(RequestValidatePassword *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Validate your passwword
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToValidatePasswordWithRequest:(RequestValidatePassword *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetOAuth2Params(RequestGetOAuth2Params) returns (ResponseGetOAuth2Params)

/**
 * / Get redirect url
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getOAuth2ParamsWithRequest:(RequestGetOAuth2Params *)request handler:(void(^)(ResponseGetOAuth2Params *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Get redirect url
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetOAuth2ParamsWithRequest:(RequestGetOAuth2Params *)request handler:(void(^)(ResponseGetOAuth2Params *_Nullable response, NSError *_Nullable error))handler;


#pragma mark CompleteOAuth2(RequestCompleteOAuth2) returns (ResponseAuth)

/**
 * / Complete OAuth2 Authentication
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)completeOAuth2WithRequest:(RequestCompleteOAuth2 *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Complete OAuth2 Authentication
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCompleteOAuth2WithRequest:(RequestCompleteOAuth2 *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark SignUp(RequestSignUp) returns (ResponseAuth)

/**
 * / Sign up existed user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signUpWithRequest:(RequestSignUp *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Sign up existed user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignUpWithRequest:(RequestSignUp *)request handler:(void(^)(ResponseAuth *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetAuthSessions(RequestGetAuthSessions) returns (ResponseGetAuthSessions)

/**
 * / Returns all authorized user's sessions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getAuthSessionsWithRequest:(RequestGetAuthSessions *)request handler:(void(^)(ResponseGetAuthSessions *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Returns all authorized user's sessions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetAuthSessionsWithRequest:(RequestGetAuthSessions *)request handler:(void(^)(ResponseGetAuthSessions *_Nullable response, NSError *_Nullable error))handler;


#pragma mark TerminateSession(RequestTerminateSession) returns (Empty)

- (void)terminateSessionWithRequest:(RequestTerminateSession *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToTerminateSessionWithRequest:(RequestTerminateSession *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark TerminateAllSessions(RequestTerminateAllSessions) returns (Empty)

/**
 * / Log out user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)terminateAllSessionsWithRequest:(RequestTerminateAllSessions *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Log out user
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToTerminateAllSessionsWithRequest:(RequestTerminateAllSessions *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark SignOut(RequestSignOut) returns (Empty)

/**
 * / Log out current session
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)signOutWithRequest:(RequestSignOut *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

/**
 * / Log out current session
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToSignOutWithRequest:(RequestSignOut *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark ChangePassword(RequestChangePassword) returns (Empty)

- (void)changePasswordWithRequest:(RequestChangePassword *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToChangePasswordWithRequest:(RequestChangePassword *)request handler:(void(^)(GPBEmpty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetSelf(RequestGetSelf) returns (ResponseGetSelf)

- (void)getSelfWithRequest:(RequestGetSelf *)request handler:(void(^)(ResponseGetSelf *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToGetSelfWithRequest:(RequestGetSelf *)request handler:(void(^)(ResponseGetSelf *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface Authentication : GRPCProtoService<Authentication2, Authentication>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

